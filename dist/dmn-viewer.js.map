{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/Viewer.js","lib/core/index.js","lib/draw/DecisionLabelUpdater.js","lib/draw/DrdRenderer.js","lib/draw/PathMap.js","lib/draw/index.js","lib/features/definition-properties/DefinitionPropertiesView.js","lib/features/definition-properties/viewer.js","lib/features/drill-down/DrillDown.js","lib/features/drill-down/index.js","lib/features/rules/DrdRules.js","lib/features/rules/index.js","lib/features/templates/ParseTemplateFactory.js","lib/features/templates/index.js","lib/import/DrdImporter.js","lib/import/DrdTreeWalker.js","lib/import/Importer.js","lib/import/index.js","lib/table/Viewer.js","lib/table/core/index.js","lib/table/draw/TableRenderer.js","lib/table/draw/index.js","lib/table/features/annotations/Annotations.js","lib/table/features/annotations/AnnotationsRenderer.js","lib/table/features/annotations/index.js","lib/table/features/date-edit/DateView.js","lib/table/features/date-edit/utils.js","lib/table/features/date-edit/viewer.js","lib/table/features/decision-properties/DecisionProperties.js","lib/table/features/decision-properties/index.js","lib/table/features/descriptions/Descriptions.js","lib/table/features/descriptions/index.js","lib/table/features/factory/ElementFactory.js","lib/table/features/factory/TableFactory.js","lib/table/features/factory/index.js","lib/table/features/hit-policy/HitPolicy.js","lib/table/features/hit-policy/HitPolicyRenderer.js","lib/table/features/hit-policy/index.js","lib/table/features/io-label/IoLabel.js","lib/table/features/io-label/IoLabelRenderer.js","lib/table/features/io-label/IoLabelRules.js","lib/table/features/io-label/index.js","lib/table/features/literal-expression/EditorTemplate.html","lib/table/features/literal-expression/LiteralExpressionEditor.js","lib/table/features/literal-expression/index.js","lib/table/features/mappings-row/MappingType.html","lib/table/features/mappings-row/MappingsRow.js","lib/table/features/mappings-row/MappingsRowRenderer.js","lib/table/features/mappings-row/index.js","lib/table/features/simple-mode/SimpleMode.js","lib/table/features/simple-mode/index.js","lib/table/features/string-edit/StringView.js","lib/table/features/string-edit/utils.js","lib/table/features/string-edit/viewer.js","lib/table/features/type-row/TypeRow.js","lib/table/features/type-row/TypeRowRenderer.js","lib/table/features/type-row/TypeTemplate.html","lib/table/features/type-row/index.js","lib/table/import/Importer.js","lib/table/import/TableImporter.js","lib/table/import/TableTreeWalker.js","lib/table/import/Util.js","lib/table/import/index.js","lib/util/ModelUtil.js","lib/util/PoweredByUtil.js","node_modules/component-classes/index.js","node_modules/component-closest/index.js","node_modules/component-delegate/index.js","node_modules/component-event/index.js","node_modules/component-indexof/index.js","node_modules/component-matches-selector/index.js","node_modules/component-query/index.js","node_modules/diagram-js/index.js","node_modules/diagram-js/lib/Diagram.js","node_modules/diagram-js/lib/command/CommandInterceptor.js","node_modules/diagram-js/lib/core/Canvas.js","node_modules/diagram-js/lib/core/ElementFactory.js","node_modules/diagram-js/lib/core/ElementRegistry.js","node_modules/diagram-js/lib/core/EventBus.js","node_modules/diagram-js/lib/core/GraphicsFactory.js","node_modules/diagram-js/lib/core/index.js","node_modules/diagram-js/lib/draw/BaseRenderer.js","node_modules/diagram-js/lib/draw/DefaultRenderer.js","node_modules/diagram-js/lib/draw/Styles.js","node_modules/diagram-js/lib/draw/index.js","node_modules/diagram-js/lib/features/context-pad/ContextPad.js","node_modules/diagram-js/lib/features/context-pad/index.js","node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js","node_modules/diagram-js/lib/features/interaction-events/index.js","node_modules/diagram-js/lib/features/outline/Outline.js","node_modules/diagram-js/lib/features/outline/index.js","node_modules/diagram-js/lib/features/overlays/Overlays.js","node_modules/diagram-js/lib/features/overlays/index.js","node_modules/diagram-js/lib/features/rules/RuleProvider.js","node_modules/diagram-js/lib/features/rules/Rules.js","node_modules/diagram-js/lib/features/rules/index.js","node_modules/diagram-js/lib/features/selection/Selection.js","node_modules/diagram-js/lib/features/selection/SelectionBehavior.js","node_modules/diagram-js/lib/features/selection/SelectionVisuals.js","node_modules/diagram-js/lib/features/selection/index.js","node_modules/diagram-js/lib/i18n/translate/index.js","node_modules/diagram-js/lib/i18n/translate/translate.js","node_modules/diagram-js/lib/model/index.js","node_modules/diagram-js/lib/util/Collections.js","node_modules/diagram-js/lib/util/Elements.js","node_modules/diagram-js/lib/util/Event.js","node_modules/diagram-js/lib/util/GraphicsUtil.js","node_modules/diagram-js/lib/util/IdGenerator.js","node_modules/diagram-js/lib/util/Mouse.js","node_modules/diagram-js/lib/util/Platform.js","node_modules/diagram-js/lib/util/RenderUtil.js","node_modules/diagram-js/lib/util/SvgTransformUtil.js","node_modules/diagram-js/lib/util/Text.js","node_modules/didi/lib/annotation.js","node_modules/didi/lib/index.js","node_modules/didi/lib/injector.js","node_modules/didi/lib/module.js","node_modules/dmn-moddle/index.js","node_modules/dmn-moddle/lib/dmn-moddle.js","node_modules/dmn-moddle/lib/simple.js","node_modules/dmn-moddle/resources/dmn/bpmn-io/biodi.json","node_modules/dmn-moddle/resources/dmn/bpmn-io/dc.json","node_modules/dmn-moddle/resources/dmn/camunda/camunda.json","node_modules/dmn-moddle/resources/dmn/json/dmn.json","node_modules/domify/index.js","node_modules/inherits/inherits_browser.js","node_modules/lodash/array/last.js","node_modules/lodash/array/union.js","node_modules/lodash/array/uniq.js","node_modules/lodash/array/unique.js","node_modules/lodash/chain/lodash.js","node_modules/lodash/collection/any.js","node_modules/lodash/collection/every.js","node_modules/lodash/collection/filter.js","node_modules/lodash/collection/find.js","node_modules/lodash/collection/forEach.js","node_modules/lodash/collection/groupBy.js","node_modules/lodash/collection/map.js","node_modules/lodash/collection/reduce.js","node_modules/lodash/collection/some.js","node_modules/lodash/date/now.js","node_modules/lodash/function/bind.js","node_modules/lodash/function/debounce.js","node_modules/lodash/function/defer.js","node_modules/lodash/function/restParam.js","node_modules/lodash/internal/LazyWrapper.js","node_modules/lodash/internal/LodashWrapper.js","node_modules/lodash/internal/SetCache.js","node_modules/lodash/internal/arrayCopy.js","node_modules/lodash/internal/arrayEach.js","node_modules/lodash/internal/arrayEvery.js","node_modules/lodash/internal/arrayFilter.js","node_modules/lodash/internal/arrayMap.js","node_modules/lodash/internal/arrayPush.js","node_modules/lodash/internal/arrayReduce.js","node_modules/lodash/internal/arraySome.js","node_modules/lodash/internal/assignWith.js","node_modules/lodash/internal/baseAssign.js","node_modules/lodash/internal/baseCallback.js","node_modules/lodash/internal/baseCopy.js","node_modules/lodash/internal/baseCreate.js","node_modules/lodash/internal/baseDelay.js","node_modules/lodash/internal/baseDifference.js","node_modules/lodash/internal/baseEach.js","node_modules/lodash/internal/baseEvery.js","node_modules/lodash/internal/baseFilter.js","node_modules/lodash/internal/baseFind.js","node_modules/lodash/internal/baseFindIndex.js","node_modules/lodash/internal/baseFlatten.js","node_modules/lodash/internal/baseFor.js","node_modules/lodash/internal/baseForIn.js","node_modules/lodash/internal/baseForOwn.js","node_modules/lodash/internal/baseGet.js","node_modules/lodash/internal/baseIndexOf.js","node_modules/lodash/internal/baseIsEqual.js","node_modules/lodash/internal/baseIsEqualDeep.js","node_modules/lodash/internal/baseIsMatch.js","node_modules/lodash/internal/baseLodash.js","node_modules/lodash/internal/baseMap.js","node_modules/lodash/internal/baseMatches.js","node_modules/lodash/internal/baseMatchesProperty.js","node_modules/lodash/internal/baseMerge.js","node_modules/lodash/internal/baseMergeDeep.js","node_modules/lodash/internal/baseProperty.js","node_modules/lodash/internal/basePropertyDeep.js","node_modules/lodash/internal/baseReduce.js","node_modules/lodash/internal/baseSetData.js","node_modules/lodash/internal/baseSlice.js","node_modules/lodash/internal/baseSome.js","node_modules/lodash/internal/baseToString.js","node_modules/lodash/internal/baseUniq.js","node_modules/lodash/internal/bindCallback.js","node_modules/lodash/internal/cacheIndexOf.js","node_modules/lodash/internal/cachePush.js","node_modules/lodash/internal/composeArgs.js","node_modules/lodash/internal/composeArgsRight.js","node_modules/lodash/internal/createAggregator.js","node_modules/lodash/internal/createAssigner.js","node_modules/lodash/internal/createBaseEach.js","node_modules/lodash/internal/createBaseFor.js","node_modules/lodash/internal/createBindWrapper.js","node_modules/lodash/internal/createCache.js","node_modules/lodash/internal/createCtorWrapper.js","node_modules/lodash/internal/createFind.js","node_modules/lodash/internal/createForEach.js","node_modules/lodash/internal/createHybridWrapper.js","node_modules/lodash/internal/createPartialWrapper.js","node_modules/lodash/internal/createReduce.js","node_modules/lodash/internal/createWrapper.js","node_modules/lodash/internal/equalArrays.js","node_modules/lodash/internal/equalByTag.js","node_modules/lodash/internal/equalObjects.js","node_modules/lodash/internal/getData.js","node_modules/lodash/internal/getFuncName.js","node_modules/lodash/internal/getLength.js","node_modules/lodash/internal/getMatchData.js","node_modules/lodash/internal/getNative.js","node_modules/lodash/internal/indexOfNaN.js","node_modules/lodash/internal/isArrayLike.js","node_modules/lodash/internal/isIndex.js","node_modules/lodash/internal/isIterateeCall.js","node_modules/lodash/internal/isKey.js","node_modules/lodash/internal/isLaziable.js","node_modules/lodash/internal/isLength.js","node_modules/lodash/internal/isObjectLike.js","node_modules/lodash/internal/isStrictComparable.js","node_modules/lodash/internal/mergeData.js","node_modules/lodash/internal/metaMap.js","node_modules/lodash/internal/pickByArray.js","node_modules/lodash/internal/pickByCallback.js","node_modules/lodash/internal/realNames.js","node_modules/lodash/internal/reorder.js","node_modules/lodash/internal/replaceHolders.js","node_modules/lodash/internal/setData.js","node_modules/lodash/internal/shimKeys.js","node_modules/lodash/internal/sortedUniq.js","node_modules/lodash/internal/toObject.js","node_modules/lodash/internal/toPath.js","node_modules/lodash/internal/wrapperClone.js","node_modules/lodash/lang/isArguments.js","node_modules/lodash/lang/isArray.js","node_modules/lodash/lang/isFunction.js","node_modules/lodash/lang/isNative.js","node_modules/lodash/lang/isNumber.js","node_modules/lodash/lang/isObject.js","node_modules/lodash/lang/isPlainObject.js","node_modules/lodash/lang/isString.js","node_modules/lodash/lang/isTypedArray.js","node_modules/lodash/lang/toPlainObject.js","node_modules/lodash/object/assign.js","node_modules/lodash/object/keys.js","node_modules/lodash/object/keysIn.js","node_modules/lodash/object/merge.js","node_modules/lodash/object/omit.js","node_modules/lodash/object/pairs.js","node_modules/lodash/object/pick.js","node_modules/lodash/utility/identity.js","node_modules/lodash/utility/noop.js","node_modules/lodash/utility/property.js","node_modules/min-dom/lib/attr.js","node_modules/min-dom/lib/classes.js","node_modules/min-dom/lib/clear.js","node_modules/min-dom/lib/delegate.js","node_modules/min-dom/lib/domify.js","node_modules/min-dom/lib/event.js","node_modules/min-dom/lib/query.js","node_modules/min-dom/lib/remove.js","node_modules/moddle-xml/lib/common.js","node_modules/moddle-xml/lib/reader.js","node_modules/moddle-xml/lib/writer.js","node_modules/moddle/index.js","node_modules/moddle/lib/base.js","node_modules/moddle/lib/descriptor-builder.js","node_modules/moddle/lib/factory.js","node_modules/moddle/lib/moddle.js","node_modules/moddle/lib/ns.js","node_modules/moddle/lib/properties.js","node_modules/moddle/lib/registry.js","node_modules/moddle/lib/types.js","node_modules/object-refs/index.js","node_modules/object-refs/lib/collection.js","node_modules/object-refs/lib/refs.js","node_modules/sax/lib/sax.js","node_modules/table-js/index.js","node_modules/table-js/lib/Table.js","node_modules/table-js/lib/core/ElementFactory.js","node_modules/table-js/lib/core/ElementRegistry.js","node_modules/table-js/lib/core/GraphicsFactory.js","node_modules/table-js/lib/core/Sheet.js","node_modules/table-js/lib/core/index.js","node_modules/table-js/lib/draw/Renderer.js","node_modules/table-js/lib/draw/index.js","node_modules/table-js/lib/features/combo-box/ComboBoxTemplate.html","node_modules/table-js/lib/features/combo-box/index.js","node_modules/table-js/lib/features/complex-cell/ComplexCell.js","node_modules/table-js/lib/features/complex-cell/index.js","node_modules/table-js/lib/features/controls/Controls.js","node_modules/table-js/lib/features/controls/index.js","node_modules/table-js/lib/features/interaction-events/InteractionEvents.js","node_modules/table-js/lib/features/interaction-events/index.js","node_modules/table-js/lib/features/line-numbers/LineNumbers.js","node_modules/table-js/lib/features/line-numbers/index.js","node_modules/table-js/lib/features/table-name/TableName.js","node_modules/table-js/lib/features/utility-column/UtilityColumn.js","node_modules/table-js/lib/features/utility-column/UtilityColumnRenderer.js","node_modules/table-js/lib/features/utility-column/UtilityColumnRules.js","node_modules/table-js/lib/features/utility-column/index.js","node_modules/table-js/lib/model/index.js","node_modules/table-js/node_modules/diagram-js/lib/command/CommandInterceptor.js","node_modules/table-js/node_modules/diagram-js/lib/command/CommandStack.js","node_modules/table-js/node_modules/diagram-js/lib/command/index.js","node_modules/table-js/node_modules/diagram-js/lib/core/EventBus.js","node_modules/table-js/node_modules/diagram-js/lib/features/rules/RuleProvider.js","node_modules/table-js/node_modules/diagram-js/lib/features/rules/Rules.js","node_modules/table-js/node_modules/diagram-js/lib/features/rules/index.js","node_modules/table-js/node_modules/diagram-js/lib/util/Event.js","node_modules/table-js/node_modules/diagram-js/lib/util/Mouse.js","node_modules/table-js/node_modules/diagram-js/lib/util/Platform.js","node_modules/tiny-stack/lib/tiny-stack.js","node_modules/tiny-svg/lib/append.js","node_modules/tiny-svg/lib/appendTo.js","node_modules/tiny-svg/lib/attr.js","node_modules/tiny-svg/lib/classes.js","node_modules/tiny-svg/lib/clear.js","node_modules/tiny-svg/lib/create.js","node_modules/tiny-svg/lib/geometry.js","node_modules/tiny-svg/lib/innerSVG.js","node_modules/tiny-svg/lib/remove.js","node_modules/tiny-svg/lib/transform.js","node_modules/tiny-svg/lib/util/ensureImported.js","node_modules/tiny-svg/lib/util/ns.js","node_modules/tiny-svg/lib/util/parse.js","node_modules/tiny-svg/lib/util/serialize.js"],"names":[],"mappingsxkzbxnzcA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1FA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACttQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnnrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrxrx9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjxxcvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvzrijDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvzRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvrhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvlxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACptBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnhEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;;ACAA;;ACAA;;ACAA;;ACAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtqBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbxnrzLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjl4CA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClvhzlhrPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjrlfxcjDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClnvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACntCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * The code in the <project-logo></project-logo> area\r\n * must not be changed.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n'use strict';\r\n\r\nvar assign = require(250),\r\n    filter = require(134),\r\n    omit = require(254),\r\n    isString = require(247),\r\n    isNumber = require(244);\r\n\r\nvar domify = require(264),\r\n    domQuery = require(266),\r\n    domRemove = require(267);\r\n\r\nvar Diagram = require(73),\r\n    DmnModdle = require(118);\r\n\r\nvar TableViewer = require(19);\r\n\r\nvar inherits = require(126);\r\n\r\nvar Importer = require(17);\r\n\r\nvar is = require(64).is;\r\n\r\nvar innerSVG = require(327);\r\n\r\nfunction noop() {}\r\n\r\nfunction lengthOne(arr) {\r\n  return arr && arr.length === 1;\r\n}\r\n\r\nfunction checkValidationError(err) {\r\n\r\n  // check if we can help the user by indicating wrong DMN 1.1 xml\r\n  // (in case he or the exporting tool did not get that right)\r\n\r\n  var pattern = /unparsable content <([^>]+)> detected([/s/S]*)$/,\r\n      match = pattern.exec(err.message);\r\n\r\n  if (match) {\r\n    err.message =\r\n      'unparsable content <' + match[1] + '> detected; ' +\r\n      'this may indicate an invalid DMN 1.1 diagram file' + match[2];\r\n  }\r\n\r\n  return err;\r\n}\r\n\r\nvar DEFAULT_OPTIONS = {\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'relative',\r\n  container: 'body',\r\n  loadDiagram: false,\r\n  disableDrdInteraction: false\r\n};\r\n\r\n\r\n/**\r\n * Ensure the passed argument is a proper unit (defaulting to px)\r\n */\r\nfunction ensureUnit(val) {\r\n  return val + (isNumber(val) ? 'px' : '');\r\n}\r\n\r\n/**\r\n * A viewer for DMN 1.1 diagrams.\r\n *\r\n * Have a look at {@link NavigatedViewer} or {@link Modeler} for bundles that include\r\n * additional features.\r\n *\r\n *\r\n * ## Extending the Viewer\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var drdViewer = new Viewer({ additionalModules: [ extensionModule ] });\r\n * drdViewer.importXML(...);\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {Object} [options.table] configuration options to pass to the table viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nfunction Viewer(options) {\r\n  var TableEditor = TableViewer;\r\n\r\n  options = assign({}, DEFAULT_OPTIONS ,options);\r\n\r\n  this.moddle = this._createModdle(options);\r\n\r\n  if (options.editor) {\r\n    TableEditor = options.editor;\r\n  }\r\n\r\n  this.table = new TableEditor(assign({}, {\r\n    container: options.container,\r\n    moddle: this.moddle,\r\n    loadDiagram: options.loadDiagram, // load the DRD diagram even if there's only one decision\r\n    isDetached: true // we instanciate the table with a detached container\r\n  }, options.table));\r\n\r\n  this.container = this._createContainer(options);\r\n\r\n  /* <project-logo> */\r\n\r\n  addProjectLogo(this.container);\r\n\r\n  /* </project-logo> */\r\n\r\n  this._init(this.container, this.moddle, options);\r\n\r\n  // setup decision drill down listener\r\n  this.on('decision.open', function(context) {\r\n    var decision = context.decision;\r\n\r\n    this.showDecision(decision);\r\n  }, this);\r\n}\r\n\r\ninherits(Viewer, Diagram);\r\n\r\nmodule.exports = Viewer;\r\n\r\n/**\r\n * Parse and render a DMN 1.1 diagram.\r\n *\r\n * Once finished the viewer reports back the result to the\r\n * provided callback function with (err, warnings).\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During import the viewer will fire life-cycle events:\r\n *\r\n *   * import.parse.start (about to read model from xml)\r\n *   * import.parse.complete (model read; may have worked or not)\r\n *   * import.render.start (graphical import start)\r\n *   * import.render.complete (graphical import finished)\r\n *   * import.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {String} xml the DMN 1.1 xml\r\n * @param {Function} [done] invoked with (err, warnings=[])\r\n */\r\nViewer.prototype.importXML = function(xml, done) {\r\n  var loadDiagram = this._loadDiagram;\r\n\r\n  // done is optional\r\n  done = done || noop;\r\n\r\n  var self = this;\r\n\r\n  var oldNm = 'xmlns=\"http://www.omg.org/spec/DMN/20151101/dmn11.xsd\"';\r\n\r\n  // LEGACY YEAH! - convert to correct namespace\r\n  if (xml.indexOf(oldNm)) {\r\n    xml = xml.replace(new RegExp(oldNm), 'xmlns=\"http://www.omg.org/spec/DMN/20151101/dmn.xsd\"');\r\n  }\r\n\r\n  // hook in pre-parse listeners +\r\n  // allow xml manipulation\r\n  xml = this._emit('import.parse.start', { xml: xml }) || xml;\r\n\r\n  this.moddle.fromXML(xml, 'dmn:Definitions', function(err, definitions, context) {\r\n\r\n    // hook in post parse listeners +\r\n    // allow definitions manipulation\r\n    definitions = self._emit('import.parse.complete', {\r\n      error: err,\r\n      definitions: definitions,\r\n      context: context\r\n    }) || definitions;\r\n\r\n    if (err) {\r\n      err = checkValidationError(err);\r\n\r\n      self._emit('import.done', { error: err });\r\n\r\n      return done(err);\r\n    }\r\n\r\n    var parseWarnings = context.warnings;\r\n\r\n    self.importDefinitions(definitions, function(err, importWarnings) {\r\n      var allWarnings = [].concat(parseWarnings, importWarnings || []),\r\n          decisions;\r\n\r\n      self._emit('import.done', { error: err, warnings: allWarnings });\r\n\r\n      // if there is only one decision, switch to table view\r\n      decisions = self.getDecisions();\r\n\r\n      if (lengthOne(definitions.drgElements) &&\r\n          lengthOne(decisions) &&\r\n          loadDiagram === false) {\r\n        self.showDecision(decisions[0]);\r\n      } else {\r\n        // set the DRD Editor as the current active editor\r\n        self._activeEditor = self;\r\n      }\r\n\r\n      done(err, allWarnings);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Export the currently displayed DMN 1.1 diagram as\r\n * a DMN 1.1 XML document.\r\n *\r\n * @param {Object} [options] export options\r\n * @param {Boolean} [options.format=false] output formated XML\r\n * @param {Boolean} [options.preamble=true] output preamble\r\n *\r\n * @param {Function} done invoked with (err, xml)\r\n */\r\nViewer.prototype.saveXML = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var definitions = this.definitions;\r\n\r\n  if (!definitions) {\r\n    return done(new Error('no definitions loaded'));\r\n  }\r\n\r\n  this.moddle.toXML(definitions, options, done);\r\n};\r\n\r\n/**\r\n * Export the currently displayed DMN 1.1 diagram as\r\n * an SVG image.\r\n *\r\n * @param {Object} [options]\r\n * @param {Function} done invoked with (err, svgStr)\r\n */\r\nViewer.prototype.saveSVG = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var canvas = this.get('canvas');\r\n\r\n  var contentNode = canvas.getDefaultLayer(),\r\n      defsNode = domQuery('defs', canvas._svg);\r\n\r\n  var contents = innerSVG(contentNode),\r\n      defs = (defsNode && defsNode.outerHTML) || '';\r\n\r\n  var bbox = contentNode.getBBox();\r\n\r\n  var svg =\r\n    '<?xml version=\"1.0\" encoding=\"utf-8\"?>/n' +\r\n    '<!-- created with dmn-js / http://bpmn.io -->/n' +\r\n    '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">/n' +\r\n    '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\r\n         'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\r\n         'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\r\n      defs + contents +\r\n    '</svg>';\r\n\r\n  done(null, svg);\r\n};\r\n\r\nViewer.prototype.importDefinitions = function(definitions, done) {\r\n  // use try/catch to not swallow synchronous exceptions\r\n  // that may be raised during model parsing\r\n  try {\r\n\r\n    if (this.definitions) {\r\n      // clear existing rendered diagram\r\n      this.clear();\r\n    }\r\n\r\n    // update definitions\r\n    this.definitions = definitions;\r\n\r\n    if (this.table) {\r\n      this.table.definitions = definitions;\r\n    }\r\n\r\n    // perform graphical import\r\n    Importer.importDRD(this, definitions, done);\r\n  } catch (e) {\r\n    // handle synchronous errors\r\n    done(e);\r\n  }\r\n};\r\n\r\nViewer.prototype.getDecisions = function(definitions) {\r\n  var defs = definitions || this.definitions;\r\n\r\n  if (!defs) {\r\n    return;\r\n  }\r\n\r\n  return filter(defs.drgElements, function(element) {\r\n    return is(element, 'dmn:Decision');\r\n  });\r\n};\r\n\r\nViewer.prototype.attach = function(container, oldContainer) {\r\n  var parent = this._parentContainer;\r\n\r\n  if (oldContainer.parentElement === parent) {\r\n    parent.removeChild(oldContainer);\r\n  }\r\n\r\n  parent.appendChild(container);\r\n};\r\n\r\nViewer.prototype.getActiveEditor = function() {\r\n  return this._activeEditor;\r\n};\r\n\r\nViewer.prototype.showDecision = function(decision, attrs, done) {\r\n  var table = this.table,\r\n      self = this;\r\n\r\n  if (typeof attrs === 'function') {\r\n    done = attrs;\r\n    attrs = {};\r\n  }\r\n\r\n  done = done || noop;\r\n\r\n  this.attach(table.container, this.container);\r\n\r\n  this._activeEditor = table;\r\n\r\n  return table.showDecision(decision, function(err, warnings) {\r\n    self._emit('view.switch', assign({ decision: decision }, attrs));\r\n\r\n    done(err, warnings);\r\n  });\r\n};\r\n\r\nViewer.prototype.showDRD = function(attrs) {\r\n  var decision = this.table.getCurrentDecision();\r\n\r\n  attrs = attrs || {};\r\n\r\n  this.attach(this.container, this.table.container);\r\n\r\n  this._activeEditor = this;\r\n\r\n  this._emit('view.switch', assign({ decision: decision }, attrs));\r\n};\r\n\r\nViewer.prototype.getModules = function() {\r\n  return this._modules;\r\n};\r\n\r\n/**\r\n * Destroy the viewer instance and remove all its\r\n * remainders from the document tree.\r\n */\r\nViewer.prototype.destroy = function() {\r\n\r\n  // diagram destroy\r\n  Diagram.prototype.destroy.call(this);\r\n\r\n  // dom detach\r\n  domRemove(this.container);\r\n};\r\n\r\n/**\r\n * Register an event listener\r\n *\r\n * Remove a previously added listener via {@link #off(event, callback)}.\r\n *\r\n * @param {String} event\r\n * @param {Number} [priority]\r\n * @param {Function} callback\r\n * @param {Object} [that]\r\n */\r\nViewer.prototype.on = function(event, priority, callback, target) {\r\n  return this.get('eventBus').on(event, priority, callback, target);\r\n};\r\n\r\n/**\r\n * De-register an event listener\r\n *\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nViewer.prototype.off = function(event, callback) {\r\n  this.get('eventBus').off(event, callback);\r\n};\r\n\r\n\r\nViewer.prototype._init = function(container, moddle, options) {\r\n\r\n  var baseModules = options.modules || this.getModules(),\r\n      additionalModules = options.additionalModules || [],\r\n      staticModules = [\r\n        {\r\n          drdjs: [ 'value', this ],\r\n          moddle: [ 'value', moddle ],\r\n          table: [ 'value', this.table ]\r\n        }\r\n      ];\r\n\r\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\r\n\r\n  var diagramOptions = assign(omit(options, 'additionalModules'), {\r\n    canvas: assign({}, options.canvas, { container: container }),\r\n    modules: diagramModules\r\n  });\r\n\r\n\r\n  // this allows forcing the diagram loading\r\n  // useful in the case where there's one decision table\r\n  // and we want to still render the diagram\r\n  this._loadDiagram = options.loadDiagram;\r\n\r\n  // invoke diagram constructor\r\n  Diagram.call(this, diagramOptions);\r\n\r\n  // Enabled DRD interaction -> setup table switch buttons\r\n  if (options.disableDrdInteraction === false) {\r\n    this._setupTableSwitchListeners(options);\r\n  }\r\n};\r\n\r\nViewer.prototype._setupTableSwitchListeners = function(options) {\r\n  var table = this.table;\r\n\r\n  var translate = this.get('translate', false) || function(str) {\r\n    return str;\r\n  };\r\n\r\n  var self = this;\r\n\r\n  table.get('eventBus').on('controls.init', function(event) {\r\n\r\n    event.controls.addControl(translate('Show DRD'), function() {\r\n      self.showDRD({ fromTable: true });\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Emit an event on the underlying {@link EventBus}\r\n *\r\n * @param  {String} type\r\n * @param  {Object} event\r\n *\r\n * @return {Object} event processing result (if any)\r\n */\r\nViewer.prototype._emit = function(type, event) {\r\n  return this.get('eventBus').fire(type, event);\r\n};\r\n\r\nViewer.prototype._createContainer = function(options) {\r\n\r\n  var parent = options.container,\r\n      container;\r\n\r\n  // support jquery element\r\n  // unwrap it if passed\r\n  if (parent.get) {\r\n    parent = parent.get(0);\r\n  }\r\n\r\n  // support selector\r\n  if (isString(parent)) {\r\n    parent = domQuery(parent);\r\n  }\r\n\r\n  this._parentContainer = parent;\r\n\r\n  container = domify('<div class=\"dmn-diagram\"></div>');\r\n\r\n  assign(container.style, {\r\n    width: ensureUnit(options.width),\r\n    height: ensureUnit(options.height),\r\n    position: options.position\r\n  });\r\n\r\n  parent.appendChild(container);\r\n\r\n  return container;\r\n};\r\n\r\nViewer.prototype._createModdle = function(options) {\r\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\r\n\r\n  return new DmnModdle(moddleOptions);\r\n};\r\n\r\n\r\n// modules the viewer is composed of\r\nViewer.prototype._modules = [\r\n  require(2),\r\n  require(101),\r\n  require(100),\r\n  require(93),\r\n  require(12),\r\n  require(10),\r\n  require(8)\r\n];\r\n\r\n// default moddle extensions the viewer is composed of\r\nViewer.prototype._moddleExtensions = {};\r\n\r\n/* <project-logo> */\r\n\r\nvar PoweredBy = require(65),\r\n    domEvent = require(265);\r\n\r\n/**\r\n * Adds the project logo to the diagram container as\r\n * required by the bpmn.io license.\r\n *\r\n * @see http://bpmn.io/license\r\n *\r\n * @param {Element} container\r\n */\r\nfunction addProjectLogo(container) {\r\n  var logoData = PoweredBy.BPMNIO_LOGO;\r\n\r\n  var linkMarkup =\r\n    '<a href=\"http://bpmn.io\" ' +\r\n       'target=\"_blank\" ' +\r\n       'class=\"bjs-powered-by\" ' +\r\n       'title=\"Powered by bpmn.io\" ' +\r\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100\">' +\r\n        '<img src=\"data:image/png;base64,' + logoData + '\">' +\r\n    '</a>';\r\n\r\n  var linkElement = domify(linkMarkup);\r\n\r\n  container.appendChild(linkElement);\r\n\r\n  domEvent.bind(linkElement, 'click', function(event) {\r\n    PoweredBy.open();\r\n\r\n    event.preventDefault();\r\n  });\r\n}\r\n\r\n/* </project-logo> */\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [\r\n    require(6),\r\n    require(18)\r\n  ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136);\r\n\r\nfunction DecisionLabelUpdater(eventBus, elementRegistry, graphicsFactory) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n\r\n  eventBus.on('view.switch', this.updateDecisionLabels, this);\r\n}\r\n\r\nDecisionLabelUpdater.$inject = [ 'eventBus', 'elementRegistry', 'graphicsFactory' ];\r\n\r\nmodule.exports = DecisionLabelUpdater;\r\n\r\nDecisionLabelUpdater.prototype.updateDecisionLabels = function(context) {\r\n  var elementRegistry = this._elementRegistry,\r\n      graphicsFactory = this._graphicsFactory,\r\n      decisions;\r\n\r\n  decisions = elementRegistry.filter(function(element) {\r\n    return element.type === 'dmn:Decision';\r\n  });\r\n\r\n  forEach(decisions, function(decision) {\r\n    var gfx = elementRegistry.getGraphics(decision.id);\r\n\r\n    graphicsFactory.update('shape', decision, gfx);\r\n  });\r\n\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(126),\r\n    isArray = require(241),\r\n    isObject = require(245),\r\n    assign = require(250);\r\n\r\nvar domClasses = require(261),\r\n    domQuery = require(266);\r\n\r\nvar svgAppend = require(320),\r\n    svgAttr = require(322),\r\n    svgCreate = require(325);\r\n\r\nvar BaseRenderer = require(82),\r\n    RenderUtil = require(111),\r\n    TextUtil = require(113),\r\n    ModelUtil = require(64);\r\n\r\nvar is = ModelUtil.is,\r\n    getName = ModelUtil.getName;\r\n\r\nvar createLine = RenderUtil.createLine;\r\n\r\nfunction DrdRenderer(eventBus, pathMap, styles) {\r\n\r\n  BaseRenderer.call(this, eventBus);\r\n\r\n  var LABEL_STYLE = {\r\n    fontFamily: 'Arial, sans-serif',\r\n    fontSize: '12px'\r\n  };\r\n\r\n  var textUtil = new TextUtil({\r\n    style: LABEL_STYLE,\r\n    size: { width: 100 }\r\n  });\r\n\r\n  var markers = {};\r\n\r\n  function addMarker(id, element) {\r\n    markers[id] = element;\r\n  }\r\n\r\n  function marker(id) {\r\n    var marker = markers[id];\r\n\r\n    return 'url(#' + marker.id + ')';\r\n  }\r\n\r\n  function initMarkers(svg) {\r\n\r\n    function createMarker(id, options) {\r\n      var attrs = assign({\r\n        strokeWidth: 1,\r\n        strokeLinecap: 'round',\r\n        strokeDasharray: 'none'\r\n      }, options.attrs);\r\n\r\n      var ref = options.ref || { x: 0, y: 0 };\r\n\r\n      var scale = options.scale || 1;\r\n\r\n      // fix for safari / chrome / firefox bug not correctly\r\n      // resetting stroke dash array\r\n      if (attrs.strokeDasharray === 'none') {\r\n        attrs.strokeDasharray = [10000, 1];\r\n      }\r\n\r\n      var marker = svgCreate('marker');\r\n\r\n      svgAttr(options.element, attrs);\r\n\r\n      svgAppend(marker, options.element);\r\n\r\n      svgAttr(marker, {\r\n        id: id,\r\n        viewBox: '0 0 20 20',\r\n        refX: ref.x,\r\n        refY: ref.y,\r\n        markerWidth: 20 * scale,\r\n        markerHeight: 20 * scale,\r\n        orient: 'auto'\r\n      });\r\n\r\n      var defs = domQuery('defs', svg);\r\n\r\n      if (!defs) {\r\n        defs = svgCreate('defs');\r\n\r\n        svgAppend(svg, defs);\r\n      }\r\n\r\n      svgAppend(defs, marker);\r\n\r\n      return addMarker(id, marker);\r\n    }\r\n\r\n    var associationStart = svgCreate('path');\r\n    svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\r\n\r\n    createMarker('association-start', {\r\n      element: associationStart,\r\n      attrs: {\r\n        fill: 'none',\r\n        stroke: 'black',\r\n        strokeWidth: 1.5\r\n      },\r\n      ref: { x: 1, y: 10 },\r\n      scale: 0.5\r\n    });\r\n\r\n    var associationEnd = svgCreate('path');\r\n    svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\r\n\r\n    createMarker('association-end', {\r\n      element: associationEnd,\r\n      attrs: {\r\n        fill: 'none',\r\n        stroke: 'black',\r\n        strokeWidth: 1.5\r\n      },\r\n      ref: { x: 12, y: 10 },\r\n      scale: 0.5\r\n    });\r\n\r\n    var informationRequirementEnd = svgCreate('path');\r\n    svgAttr(informationRequirementEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\r\n\r\n    createMarker('information-requirement-end', {\r\n      element: informationRequirementEnd,\r\n      ref: { x: 11, y: 10 },\r\n      scale: 1\r\n    });\r\n\r\n    var knowledgeRequirementEnd = svgCreate('path');\r\n    svgAttr(knowledgeRequirementEnd, { d: 'M 1 3 L 11 10 L 1 17' });\r\n\r\n    createMarker('knowledge-requirement-end', {\r\n      element: knowledgeRequirementEnd,\r\n      attrs: {\r\n        fill: 'none',\r\n        stroke: 'black',\r\n        strokeWidth: 2\r\n      },\r\n      ref: { x: 11, y: 10 },\r\n      scale: 0.8\r\n    });\r\n\r\n    var authorityRequirementEnd = svgCreate('circle');\r\n    svgAttr(authorityRequirementEnd, { cx: 3, cy: 3, r: 3 });\r\n\r\n    createMarker('authority-requirement-end', {\r\n      element: authorityRequirementEnd,\r\n      ref: { x: 3, y: 3 },\r\n      scale: 0.9\r\n    });\r\n  }\r\n\r\n  function computeStyle(custom, traits, defaultStyles) {\r\n    if (!isArray(traits)) {\r\n      defaultStyles = traits;\r\n      traits = [];\r\n    }\r\n\r\n    return styles.style(traits || [], assign(defaultStyles, custom || {}));\r\n  }\r\n\r\n\r\n  function drawRect(p, width, height, r, offset, attrs) {\r\n\r\n    if (isObject(offset)) {\r\n      attrs = offset;\r\n      offset = 0;\r\n    }\r\n\r\n    offset = offset || 0;\r\n\r\n    attrs = computeStyle(attrs, {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white'\r\n    });\r\n\r\n    var rect = svgCreate('rect');\r\n    svgAttr(rect, {\r\n      x: offset,\r\n      y: offset,\r\n      width: width - offset * 2,\r\n      height: height - offset * 2,\r\n      rx: r,\r\n      ry: r\r\n    });\r\n    svgAttr(rect, attrs);\r\n\r\n    svgAppend(p, rect);\r\n\r\n    return rect;\r\n  }\r\n\r\n  function renderLabel(p, label, options) {\r\n    var text = textUtil.createText(p, label || '', options);\r\n    domClasses(text).add('djs-label');\r\n\r\n    return text;\r\n  }\r\n\r\n  function renderEmbeddedLabel(p, element, align) {\r\n    var name = getName(element);\r\n    return renderLabel(p, name, { box: element, align: align, padding: 5 });\r\n  }\r\n\r\n  function drawPath(p, d, attrs) {\r\n\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      strokeWidth: 2,\r\n      stroke: 'black'\r\n    });\r\n\r\n    var path = svgCreate('path');\r\n    svgAttr(path, { d: d });\r\n    svgAttr(path, attrs);\r\n\r\n    svgAppend(p, path);\r\n\r\n    return path;\r\n  }\r\n\r\n\r\n  var handlers = {\r\n    'dmn:Decision': function(p, element, attrs) {\r\n      var rect = drawRect(p, element.width, element.height, 0, attrs);\r\n\r\n      renderEmbeddedLabel(p, element, 'center-middle');\r\n\r\n      return rect;\r\n    },\r\n    'dmn:KnowledgeSource': function(p, element, attrs) {\r\n\r\n      var pathData = pathMap.getScaledPath('KNOWLEDGE_SOURCE', {\r\n        xScaleFactor: 1.021,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.075\r\n        }\r\n      });\r\n\r\n      var knowledgeSource = drawPath(p, pathData, {\r\n        strokeWidth: 2,\r\n        fill: 'white',\r\n        stroke: 'black'\r\n      });\r\n\r\n      renderEmbeddedLabel(p, element, 'center-middle');\r\n\r\n      return knowledgeSource;\r\n    },\r\n    'dmn:BusinessKnowledgeModel': function(p, element, attrs) {\r\n\r\n      var pathData = pathMap.getScaledPath('BUSINESS_KNOWLEDGE_MODEL', {\r\n        xScaleFactor: 1,\r\n        yScaleFactor: 1,\r\n        containerWidth: element.width,\r\n        containerHeight: element.height,\r\n        position: {\r\n          mx: 0.0,\r\n          my: 0.3\r\n        }\r\n      });\r\n\r\n      var businessKnowledge = drawPath(p, pathData, {\r\n        strokeWidth: 2,\r\n        fill: 'white',\r\n        stroke: 'black'\r\n      });\r\n\r\n      renderEmbeddedLabel(p, element, 'center-middle');\r\n\r\n      return businessKnowledge;\r\n    },\r\n    'dmn:InputData': function(p, element, attrs) {\r\n\r\n      var rect = drawRect(p, element.width, element.height, 22, attrs);\r\n\r\n      renderEmbeddedLabel(p, element, 'center-middle');\r\n\r\n      return rect;\r\n    },\r\n    'dmn:TextAnnotation': function(p, element, attrs) {\r\n      var style = {\r\n        'fill': 'none',\r\n        'stroke': 'none'\r\n      };\r\n      var textElement = drawRect(p, element.width, element.height, 0, 0, style),\r\n          textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\r\n            xScaleFactor: 1,\r\n            yScaleFactor: 1,\r\n            containerWidth: element.width,\r\n            containerHeight: element.height,\r\n            position: {\r\n              mx: 0.0,\r\n              my: 0.0\r\n            }\r\n          });\r\n\r\n      drawPath(p, textPathData);\r\n\r\n      var text = getSemantic(element).text || '';\r\n\r\n      renderLabel(p, text, { box: element, align: 'left-middle', padding: 5 });\r\n\r\n      return textElement;\r\n    },\r\n    'dmn:Association': function(p, element, attrs) {\r\n      var semantic = getSemantic(element);\r\n\r\n      attrs = assign({\r\n        strokeDasharray: '0.5, 5',\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        fill: 'none'\r\n      }, attrs || {});\r\n\r\n      if (semantic.associationDirection === 'One' ||\r\n          semantic.associationDirection === 'Both') {\r\n        attrs.markerEnd = marker('association-end');\r\n      }\r\n\r\n      if (semantic.associationDirection === 'Both') {\r\n        attrs.markerStart = marker('association-start');\r\n      }\r\n\r\n      return drawLine(p, element.waypoints, attrs);\r\n    },\r\n    'dmn:InformationRequirement': function(p, element, attrs) {\r\n\r\n      attrs = assign({\r\n        strokeWidth: 1,\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        markerEnd: marker('information-requirement-end')\r\n      }, attrs || {});\r\n\r\n      return drawLine(p, element.waypoints, attrs);\r\n    },\r\n    'dmn:KnowledgeRequirement': function(p, element, attrs) {\r\n\r\n      attrs = assign({\r\n        strokeWidth: 1,\r\n        strokeDasharray: 5,\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        markerEnd: marker('knowledge-requirement-end')\r\n      }, attrs || {});\r\n\r\n      return drawLine(p, element.waypoints, attrs);\r\n    },\r\n    'dmn:AuthorityRequirement': function(p, element, attrs) {\r\n\r\n      attrs = assign({\r\n        strokeWidth: 1.5,\r\n        strokeDasharray: 5,\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'round',\r\n        markerEnd: marker('authority-requirement-end')\r\n      }, attrs || {});\r\n\r\n      return drawLine(p, element.waypoints, attrs);\r\n    }\r\n  };\r\n\r\n\r\n  // draw shape and connection ////////////////////////////////////\r\n  function drawShape(parent, element) {\r\n    var h = handlers[element.type];\r\n\r\n    if (!h) {\r\n      return BaseRenderer.prototype.drawShape.apply(this, [ parent, element ]);\r\n    } else {\r\n      return h(parent, element);\r\n    }\r\n  }\r\n\r\n  function drawConnection(parent, element) {\r\n    var type = element.type;\r\n    var h = handlers[type];\r\n\r\n    if (!h) {\r\n      return BaseRenderer.prototype.drawConnection.apply(this, [ parent, element ]);\r\n    } else {\r\n      return h(parent, element);\r\n    }\r\n  }\r\n\r\n  function drawLine(p, waypoints, attrs) {\r\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'none'\r\n    });\r\n\r\n    var line = createLine(waypoints, attrs);\r\n\r\n    svgAppend(p, line);\r\n\r\n    return line;\r\n  }\r\n\r\n  this.canRender = function(element) {\r\n    return is(element, 'dmn:DMNElement') ||\r\n           is(element, 'dmn:InformationRequirement') ||\r\n           is(element, 'dmn:KnowledgeRequirement') ||\r\n           is(element, 'dmn:AuthorityRequirement');\r\n  };\r\n\r\n  this.drawShape = drawShape;\r\n  this.drawConnection = drawConnection;\r\n\r\n\r\n  // hook onto canvas init event to initialize\r\n  // connection start/end markers on svg\r\n  eventBus.on('canvas.init', function(event) {\r\n    initMarkers(event.svg);\r\n  });\r\n\r\n}\r\n\r\ninherits(DrdRenderer, BaseRenderer);\r\n\r\nDrdRenderer.$inject = [ 'eventBus', 'pathMap', 'styles' ];\r\n\r\nmodule.exports = DrdRenderer;\r\n\r\n\r\n///////// helper functions /////////////////////////////\r\nfunction getSemantic(element) {\r\n  return element.businessObject;\r\n}\r\n","'use strict';\r\n\r\n/**\r\n * Map containing SVG paths needed by BpmnRenderer.\r\n */\r\n\r\nfunction PathMap() {\r\n\r\n  /**\r\n   * Contains a map of path elements\r\n   *\r\n   * <h1>Path definition</h1>\r\n   * A parameterized path is defined like this:\r\n   * <pre>\r\n   * 'GATEWAY_PARALLEL': {\r\n   *   d: 'm {mx},{my} {e.x0},0 0,{e.x1} {e.x1},0 0,{e.y0} -{e.x1},0 0,{e.y1} ' +\r\n          '-{e.x0},0 0,-{e.y1} -{e.x1},0 0,-{e.y0} {e.x1},0 z',\r\n   *   height: 17.5,\r\n   *   width:  17.5,\r\n   *   heightElements: [2.5, 7.5],\r\n   *   widthElements: [2.5, 7.5]\r\n   * }\r\n   * </pre>\r\n   * <p>It's important to specify a correct <b>height and width</b> for the path as the scaling\r\n   * is based on the ratio between the specified height and width in this object and the\r\n   * height and width that is set as scale target (Note x,y coordinates will be scaled with\r\n   * individual ratios).</p>\r\n   * <p>The '<b>heightElements</b>' and '<b>widthElements</b>' array must contain the values that will be scaled.\r\n   * The scaling is based on the computed ratios.\r\n   * Coordinates on the y axis should be in the <b>heightElement</b>'s array, they will be scaled using\r\n   * the computed ratio coefficient.\r\n   * In the parameterized path the scaled values can be accessed through the 'e' object in {} brackets.\r\n   *   <ul>\r\n   *    <li>The values for the y axis can be accessed in the path string using {e.y0}, {e.y1}, ....</li>\r\n   *    <li>The values for the x axis can be accessed in the path string using {e.x0}, {e.x1}, ....</li>\r\n   *   </ul>\r\n   *   The numbers x0, x1 respectively y0, y1, ... map to the corresponding array index.\r\n   * </p>\r\n    m1,1\r\n    l 0,55.3\r\n    c 29.8,19.7 48.4,-4.2 67.2,-6.7\r\n    c 12.2,-2.3 19.8,1.6 30.8,6.2\r\n    l 0,-54.6\r\n    z\r\n    */\r\n  this.pathMap = {\r\n    'KNOWLEDGE_SOURCE': {\r\n      d: 'm {mx},{my} ' +\r\n         'l 0,{e.y0} ' +\r\n         'c {e.x0},{e.y1} {e.x1},-{e.y2} {e.x2},-{e.y3} ' +\r\n         'c {e.x3},-{e.y4} {e.x4},{e.y5} {e.x5},{e.y6} ' +\r\n         'l 0,-{e.y7}z',\r\n      width:  100,\r\n      height: 65,\r\n      widthElements: [ 29.8, 48.4, 67.2, 12.2, 19.8, 30.8 ],\r\n      heightElements: [ 55.3, 19.7, 4.2, 6.7, 2.3, 1.6, 6.2, 54.6 ]\r\n    },\r\n    'BUSINESS_KNOWLEDGE_MODEL': {\r\n      d: 'm {mx},{my} l {e.x0},-{e.y0} l {e.x1},0 l 0,{e.y1} l -{e.x2},{e.y2} l -{e.x3},0z',\r\n      width:  125,\r\n      height: 45,\r\n      widthElements: [ 13.8, 109.2, 13.8, 109.1 ],\r\n      heightElements: [ 13.2, 29.8, 13.2 ]\r\n    },\r\n    'TEXT_ANNOTATION': {\r\n      d: 'm {mx}, {my} m 10,0 l -10,0 l 0,{e.y0} l 10,0',\r\n      width: 10,\r\n      height: 30,\r\n      widthElements: [ 10 ],\r\n      heightElements: [ 30 ]\r\n    }\r\n  };\r\n\r\n  this.getRawPath = function getRawPath(pathId) {\r\n    return this.pathMap[pathId].d;\r\n  };\r\n\r\n  /**\r\n   * Scales the path to the given height and width.\r\n   * <h1>Use case</h1>\r\n   * <p>Use case is to scale the content of elements (event, gateways) based\r\n   * on the element bounding box's size.\r\n   * </p>\r\n   * <h1>Why not transform</h1>\r\n   * <p>Scaling a path with transform() will also scale the stroke and IE does not support\r\n   * the option 'non-scaling-stroke' to prevent this.\r\n   * Also there are use cases where only some parts of a path should be\r\n   * scaled.</p>\r\n   *\r\n   * @param {String} pathId The ID of the path.\r\n   * @param {Object} param <p>\r\n   *   Example param object scales the path to 60% size of the container (data.width, data.height).\r\n   *   <pre>\r\n   *   {\r\n   *     xScaleFactor: 0.6,\r\n   *     yScaleFactor:0.6,\r\n   *     containerWidth: data.width,\r\n   *     containerHeight: data.height,\r\n   *     position: {\r\n   *       mx: 0.46,\r\n   *       my: 0.2,\r\n   *     }\r\n   *   }\r\n   *   </pre>\r\n   *   <ul>\r\n   *    <li>targetpathwidth = xScaleFactor * containerWidth</li>\r\n   *    <li>targetpathheight = yScaleFactor * containerHeight</li>\r\n   *    <li>Position is used to set the starting coordinate of the path. M is computed:\r\n    *    <ul>\r\n    *      <li>position.x * containerWidth</li>\r\n    *      <li>position.y * containerHeight</li>\r\n    *    </ul>\r\n    *    Center of the container <pre> position: {\r\n   *       mx: 0.5,\r\n   *       my: 0.5,\r\n   *     }</pre>\r\n   *     Upper left corner of the container\r\n   *     <pre> position: {\r\n   *       mx: 0.0,\r\n   *       my: 0.0,\r\n   *     }</pre>\r\n   *    </li>\r\n   *   </ul>\r\n   * </p>\r\n   *\r\n   */\r\n  this.getScaledPath = function getScaledPath(pathId, param) {\r\n    var rawPath = this.pathMap[pathId];\r\n\r\n    // positioning\r\n    // compute the start point of the path\r\n    var mx, my;\r\n\r\n    if (param.abspos) {\r\n      mx = param.abspos.x;\r\n      my = param.abspos.y;\r\n    } else {\r\n      mx = param.containerWidth * param.position.mx;\r\n      my = param.containerHeight * param.position.my;\r\n    }\r\n\r\n    var coordinates = {}; //map for the scaled coordinates\r\n    if (param.position) {\r\n\r\n      // path\r\n      var heightRatio = (param.containerHeight / rawPath.height) * param.yScaleFactor;\r\n      var widthRatio = (param.containerWidth / rawPath.width) * param.xScaleFactor;\r\n\r\n\r\n      //Apply height ratio\r\n      for (var heightIndex = 0; heightIndex < rawPath.heightElements.length; heightIndex++) {\r\n        coordinates['y' + heightIndex] = rawPath.heightElements[heightIndex] * heightRatio;\r\n      }\r\n\r\n      //Apply width ratio\r\n      for (var widthIndex = 0; widthIndex < rawPath.widthElements.length; widthIndex++) {\r\n        coordinates['x' + widthIndex] = rawPath.widthElements[widthIndex] * widthRatio;\r\n      }\r\n    }\r\n\r\n    //Apply value to raw path\r\n    var path = format(\r\n      rawPath.d, {\r\n        mx: mx,\r\n        my: my,\r\n        e: coordinates\r\n      }\r\n    );\r\n    return path;\r\n  };\r\n}\r\n\r\nmodule.exports = PathMap;\r\n\r\n\r\n////////// helpers //////////\r\n\r\n// copied from https://github.com/adobe-webplatform/Snap.svg/blob/master/src/svg.js\r\nvar tokenRegex = //{([^/}]+)/}/g,\r\n    objNotationRegex = /(?:(?:^|/.)(.+?)(?=/[|/.|$|/()|/[('|\")(.+?)/2/])(/(/))?/g; // matches .xxxxx or [\"xxxxx\"] to run over object properties\r\n\r\nfunction replacer(all, key, obj) {\r\n  var res = obj;\r\n  key.replace(objNotationRegex, function(all, name, quote, quotedName, isFunc) {\r\n    name = name || quotedName;\r\n    if (res) {\r\n      if (name in res) {\r\n        res = res[name];\r\n      }\r\n      typeof res == 'function' && isFunc && (res = res());\r\n    }\r\n  });\r\n  res = (res == null || res == obj ? all : res) + '';\r\n\r\n  return res;\r\n}\r\n\r\nfunction format(str, obj) {\r\n  return String(str).replace(tokenRegex, function(all, key) {\r\n    return replacer(all, key, obj);\r\n  });\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'drdRenderer', 'decisionLabelUpdater' ],\r\n  drdRenderer: [ 'type', require(4) ],\r\n  pathMap: [ 'type', require(5)],\r\n  decisionLabelUpdater: [ 'type', require(3) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    domQuery = require(266),\r\n    domDelegate = require(263);\r\n\r\nfunction DefinitionIdView(eventBus, canvas) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n\r\n  eventBus.on('diagram.init', function() {\r\n    this._init();\r\n  }, this);\r\n\r\n  eventBus.on('import.done', function(event) {\r\n    this.update();\r\n  }, this);\r\n}\r\n\r\nDefinitionIdView.$inject = [ 'eventBus', 'canvas' ];\r\n\r\nmodule.exports = DefinitionIdView;\r\n\r\n/**\r\n * Initialize\r\n */\r\nDefinitionIdView.prototype._init = function() {\r\n  var canvas = this._canvas,\r\n      eventBus = this._eventBus;\r\n\r\n  var parent = canvas.getContainer(),\r\n      container = this._container = domify(DefinitionIdView.HTML_MARKUP);\r\n\r\n  parent.appendChild(container);\r\n\r\n  this.nameElement = domQuery('.dmn-definitions-name', this._container);\r\n  this.idElement = domQuery('.dmn-definitions-id', this._container);\r\n\r\n  domDelegate.bind(container, '.dmn-definitions-name, .dmn-definitions-id', 'mousedown', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  eventBus.fire('definitionIdView.create', {\r\n    html: container\r\n  });\r\n};\r\n\r\nDefinitionIdView.prototype.update = function(newName) {\r\n  var businessObject = this._canvas.getRootElement().businessObject;\r\n\r\n  this.nameElement.textContent = businessObject.name;\r\n  this.idElement.textContent = businessObject.id;\r\n};\r\n\r\n\r\n/* markup definition */\r\n\r\nDefinitionIdView.HTML_MARKUP =\r\n  '<div class=\"dmn-definitions\">' +\r\n    '<div class=\"dmn-definitions-name\" title=\"Definition Name\"></div>' +\r\n    '<div class=\"dmn-definitions-id\" title=\"Definition ID\"></div>' +\r\n  '</div>';\r\n","module.exports = {\r\n  __depends__: [ ],\r\n  __init__: [ 'definitionPropertiesView' ],\r\n  definitionPropertiesView: [ 'type', require(7) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    domDelegate = require(263);\r\n\r\nfunction DrillDown(eventBus, overlays, drdRules, config) {\r\n  this._eventBus = eventBus;\r\n  this._overlays = overlays;\r\n  this._drdRules = drdRules;\r\n  this._config = config;\r\n\r\n  eventBus.on([ 'drdElement.added', 'shape.create' ], function(context) {\r\n    var element = context.element,\r\n        canDrillDown = drdRules.canDrillDown(element);\r\n\r\n    if (canDrillDown) {\r\n      this.addOverlay(element, canDrillDown);\r\n    }\r\n  }, this);\r\n}\r\n\r\nmodule.exports = DrillDown;\r\n\r\nDrillDown.$inject = [ 'eventBus', 'overlays', 'drdRules', 'config' ];\r\n\r\n\r\nDrillDown.prototype.addOverlay = function(decision, decisionType) {\r\n  var overlays = this._overlays;\r\n\r\n  var icon = decisionType === 'table' ? 'decision-table' : 'literal-expression';\r\n\r\n  var overlay = domify([\r\n    '<div class=\"drill-down-overlay\">',\r\n    '<span class=\"dmn-icon-' + icon + '\" />',\r\n    '</div>'\r\n  ].join(''));\r\n\r\n  var overlayId = overlays.add(decision, {\r\n    position: {\r\n      top: 1,\r\n      left: 1\r\n    },\r\n    html: overlay\r\n  });\r\n\r\n  if (!this._config.disableDrdInteraction) {\r\n    overlay.style.cursor = 'pointer';\r\n    this.bindEventListener(decision, overlay, overlayId);\r\n  }\r\n};\r\n\r\nDrillDown.prototype.bindEventListener = function(decision, overlay, id) {\r\n  var overlays = this._overlays,\r\n      eventBus = this._eventBus;\r\n\r\n  var overlaysRoot = overlays._overlayRoot;\r\n\r\n  domDelegate.bind(overlaysRoot, '[data-overlay-id=\"' + id + '\"]', 'click', function() {\r\n\r\n    eventBus.fire('decision.open', { decision: decision.businessObject });\r\n  });\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [\r\n    require(87)\r\n  ],\r\n  __init__: [ 'drillDown' ],\r\n  drillDown: [ 'type', require(9) ]\r\n};\r\n","'use strict';\r\n\r\nvar ModelUtil = require(64),\r\n    is = ModelUtil.is,\r\n    isAny = ModelUtil.isAny;\r\n\r\nvar inherits = require(126);\r\n\r\nvar RuleProvider = require(94);\r\n\r\n/**\r\n * DRD specific modeling rule\r\n */\r\nfunction DrdRules(eventBus) {\r\n  RuleProvider.call(this, eventBus);\r\n}\r\n\r\ninherits(DrdRules, RuleProvider);\r\n\r\nDrdRules.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = DrdRules;\r\n\r\nDrdRules.prototype.init = function() {\r\n\r\n  this.addRule('elements.move', function(context) {\r\n\r\n    var target = context.target,\r\n        shapes = context.shapes,\r\n        position = context.position;\r\n\r\n    return canMove(shapes, target, position);\r\n  });\r\n\r\n  this.addRule('connection.create', function(context) {\r\n    var source = context.source,\r\n        target = context.target;\r\n\r\n    return canConnect(source, target);\r\n  });\r\n\r\n  this.addRule('connection.reconnectStart', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = context.hover || context.source,\r\n        target = connection.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.reconnectEnd', function(context) {\r\n\r\n    var connection = context.connection,\r\n        source = connection.source,\r\n        target = context.hover || context.target;\r\n\r\n    return canConnect(source, target, connection);\r\n  });\r\n\r\n  this.addRule('connection.updateWaypoints', function(context) {\r\n    // OK! but visually ignore\r\n    return null;\r\n  });\r\n\r\n};\r\n\r\nDrdRules.prototype.canConnect = canConnect;\r\n\r\nDrdRules.prototype.canMove = canMove;\r\n\r\nDrdRules.prototype.canDrillDown = canDrillDown;\r\n\r\n\r\nfunction canConnect(source, target) {\r\n\r\n  if (is(source, 'dmn:Definitions') || is(target, 'dmn:Definitions')) {\r\n    return false;\r\n  }\r\n\r\n  if (is(source, 'dmn:Decision') || is(source, 'dmn:InputData')) {\r\n    if (is(target, 'dmn:Decision') ||\r\n       (is(source, 'dmn:Decision') && is(target, 'dmn:InputData'))) {\r\n      return { type: 'dmn:InformationRequirement' };\r\n    }\r\n\r\n    if (is(target, 'dmn:KnowledgeSource')) {\r\n      return { type: 'dmn:AuthorityRequirement' };\r\n    }\r\n  }\r\n\r\n  if (is(source, 'dmn:BusinessKnowledgeModel') &&\r\n      isAny(target, [ 'dmn:Decision', 'dmn:BusinessKnowledgeModel' ])) {\r\n    return { type: 'dmn:KnowledgeRequirement' };\r\n  }\r\n\r\n  if (is(source, 'dmn:KnowledgeSource') &&\r\n      isAny(target, [ 'dmn:Decision', 'dmn:BusinessKnowledgeModel', 'dmn:KnowledgeSource' ])) {\r\n    return { type: 'dmn:AuthorityRequirement' };\r\n  }\r\n\r\n  if (is(target, 'dmn:TextAnnotation')) {\r\n    return { type: 'dmn:Association' };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canMove(elements, target) {\r\n\r\n  // allow default move check to start move operation\r\n  if (!target) {\r\n    return true;\r\n  }\r\n\r\n  if (is(target, 'dmn:Definitions')) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction canDrillDown(element) {\r\n  var businessObject = element.businessObject;\r\n\r\n  if (!is(element, 'dmn:Decision')) {\r\n    return false;\r\n  }\r\n\r\n  if (businessObject.decisionTable) {\r\n    return 'table';\r\n  } else if (businessObject.literalExpression) {\r\n    return 'literal';\r\n  }\r\n\r\n  return false;\r\n}\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [\r\n    require(96)\r\n  ],\r\n  __init__: [ 'drdRules' ],\r\n  drdRules: [ 'type', require(11) ]\r\n};\r\n","'use strict';\r\n\r\nvar FILTER_REGEX = /^/s*(?:'([^']+)')/s*(?:/|/s*(/w+)/s*)?$/g;\r\nvar TEMPLATE_REGEX = /{{([^}]+)}}/g;\r\n\r\n/**\r\n * A parser that processes loaded (HTML) templates\r\n * before they get used by the app.\r\n *\r\n * @param {Function} translate\r\n *\r\n * @return {Function} template parser fn\r\n */\r\nfunction ParseTemplateFactory(translate) {\r\n\r\n  var filters = {\r\n    translate: translate\r\n  };\r\n\r\n  function applyFilters(expr) {\r\n    // match expression | filter\r\n    return expr.replace(FILTER_REGEX, function(_, expr, filterName, str) {\r\n      var s = str || applyFilters(expr);\r\n      var cb = filters[filterName];\r\n      if (typeof cb === 'function') {\r\n        return cb(s);\r\n      } else {\r\n        return s;\r\n      }\r\n    });\r\n  }\r\n\r\n  return function parseTemplate(templateStr) {\r\n    return templateStr.replace(TEMPLATE_REGEX, function(_, expr) {\r\n      return applyFilters(expr);\r\n    });\r\n  };\r\n\r\n}\r\n\r\nParseTemplateFactory.$inject = [ 'translate' ];\r\n\r\nmodule.exports = ParseTemplateFactory;","'use strict';\r\n\r\nmodule.exports = {\r\n  __depends__: [\r\n    require(101)\r\n  ],\r\n  parseTemplate: [ 'factory', require(13) ]\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(250),\r\n    map = require(138);\r\n\r\nvar ModelUtil = require(64),\r\n    is = ModelUtil.is;\r\n\r\nfunction elementData(semantic, attrs) {\r\n  return assign({\r\n    id: semantic.id,\r\n    type: semantic.$type,\r\n    businessObject: semantic\r\n  }, attrs);\r\n}\r\n\r\nfunction getHREF(element) {\r\n  return element && element.href.slice(1);\r\n}\r\n\r\nfunction collectWaypoints(edge) {\r\n  var waypoints = edge.waypoints;\r\n\r\n  if (waypoints) {\r\n    return map(waypoints, function(waypoint) {\r\n      var position = { x: waypoint.x, y: waypoint.y };\r\n\r\n      return assign({ original: position }, position);\r\n    });\r\n  }\r\n}\r\n\r\nfunction DrdImporter(eventBus, canvas, elementFactory, elementRegistry) {\r\n  this._eventBus = eventBus;\r\n  this._canvas = canvas;\r\n  this._elementRegistry = elementRegistry;\r\n  this._elementFactory = elementFactory;\r\n}\r\n\r\nDrdImporter.$inject = [ 'eventBus', 'canvas', 'elementFactory', 'elementRegistry' ];\r\n\r\nmodule.exports = DrdImporter;\r\n\r\n\r\nDrdImporter.prototype.root = function(diagram) {\r\n  var element = this._elementFactory.createRoot(elementData(diagram));\r\n\r\n  this._canvas.setRootElement(element);\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Add drd element (semantic) to the canvas.\r\n */\r\nDrdImporter.prototype.add = function(semantic, di) {\r\n  var elementFactory = this._elementFactory,\r\n      canvas = this._canvas,\r\n      eventBus = this._eventBus;\r\n\r\n  var element, waypoints, sourceShape, targetShape, elementDefinition,\r\n      sourceID, targetID;\r\n\r\n  if (di.$instanceOf('biodi:Bounds')) {\r\n    elementDefinition = elementData(semantic, {\r\n      x: Math.round(di.x),\r\n      y: Math.round(di.y),\r\n      width: Math.round(di.width),\r\n      height: Math.round(di.height)\r\n    });\r\n\r\n    element = elementFactory.createShape(elementDefinition);\r\n\r\n    canvas.addShape(element);\r\n\r\n    eventBus.fire('drdElement.added', { element: element, di: di });\r\n\r\n  } else if (di.$instanceOf('biodi:Edge')) {\r\n    waypoints = collectWaypoints(di);\r\n\r\n    sourceID = di.source;\r\n    targetID = semantic.$parent.id;\r\n\r\n    if (is(semantic, 'dmn:Association')) {\r\n      targetID = getHREF(semantic.targetRef);\r\n    }\r\n\r\n    sourceShape = this._getShape(sourceID);\r\n    targetShape = this._getShape(targetID);\r\n\r\n    if (sourceShape && targetShape) {\r\n      elementDefinition = elementData(semantic, {\r\n        hidden: false,\r\n        source: sourceShape,\r\n        target: targetShape,\r\n        waypoints: waypoints\r\n      });\r\n\r\n      element = elementFactory.createConnection(elementDefinition);\r\n\r\n      canvas.addConnection(element);\r\n\r\n      eventBus.fire('drdElement.added', { element: element, di: di });\r\n    }\r\n\r\n  } else {\r\n    throw new Error('unknown di for element ' + semantic.id);\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\nDrdImporter.prototype._getShape = function(id) {\r\n  return this._elementRegistry.get(id);\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136),\r\n    find = require(135);\r\n\r\nvar is = require(64).is;\r\n\r\n\r\nfunction parseID(element) {\r\n  return element && element.href.slice(1);\r\n}\r\n\r\nfunction DRDTreeWalker(handler, options) {\r\n\r\n  // list of elements to handle deferred to ensure\r\n  // prerequisites are drawn\r\n  var deferred = [];\r\n\r\n  function visit(element, di) {\r\n\r\n    var gfx = element.gfx;\r\n\r\n    // avoid multiple rendering of elements\r\n    if (gfx) {\r\n      throw new Error('already rendered ' + element.id);\r\n    }\r\n\r\n    // call handler\r\n    return handler.element(element, di);\r\n  }\r\n\r\n  ////// Semantic handling //////////////////////\r\n\r\n  function handleDefinitions(definitions) {\r\n\r\n    // make sure we walk the correct dmnElement\r\n    handler.root(definitions);\r\n\r\n    forEach(['decision', 'drgElements', 'artifacts' ], function(element) {\r\n      if (definitions[element]) {\r\n        forEach(definitions[element], handleElement);\r\n      }\r\n    });\r\n\r\n    handleDeferred(deferred);\r\n  }\r\n\r\n  function handleDeferred(elements) {\r\n    forEach(elements, function(d) {\r\n      d();\r\n    });\r\n  }\r\n\r\n  function handleElement(element) {\r\n    var edges = [];\r\n\r\n    handleDI(element, function(extensionElement) {\r\n      if (extensionElement.$parent.$instanceOf('dmn:ExtensionElements')) {\r\n\r\n        if (is(extensionElement, 'biodi:Bounds')) {\r\n          visit(element, extensionElement);\r\n\r\n        } else if (is(extensionElement, 'biodi:Edge')) {\r\n          edges.push(extensionElement);\r\n        }\r\n      }\r\n    });\r\n\r\n    handleConnections(edges, element);\r\n  }\r\n\r\n\r\n\r\n  function handleConnections(edges, element) {\r\n\r\n    function deferConnection(semantic, property) {\r\n      var id = parseID(property),\r\n          edge = find(edges, { source: id });\r\n\r\n      if (edge) {\r\n        deferred.push(function() {\r\n          visit(semantic, edge);\r\n        });\r\n      }\r\n    }\r\n\r\n    if (is(element, 'dmn:Association')) {\r\n      return deferConnection(element, element.sourceRef);\r\n    }\r\n\r\n    forEach([\r\n      'informationRequirement',\r\n      'knowledgeRequirement',\r\n      'authorityRequirement'\r\n    ], function(requirements) {\r\n      forEach(element[requirements], function(requirement) {\r\n        var properties = null;\r\n\r\n        // get the href\r\n        if (is(requirement, 'dmn:InformationRequirement')) {\r\n          properties = [ 'requiredDecision', 'requiredInput' ];\r\n\r\n        } else if (is(requirement, 'dmn:KnowledgeRequirement')) {\r\n          properties = [ 'requiredKnowledge' ];\r\n\r\n        } else if (is(requirement, 'dmn:AuthorityRequirement')) {\r\n          properties = [ 'requiredDecision', 'requiredInput', 'requiredAuthority' ];\r\n        }\r\n\r\n        if (properties) {\r\n          forEach(properties, function(property) {\r\n            if (requirement[property]) {\r\n              deferConnection(requirement, requirement[property]);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function handleDI(element, fn) {\r\n    var extensionElements = element.extensionElements,\r\n        values;\r\n\r\n    if (!extensionElements) {\r\n      return;\r\n    }\r\n\r\n    values = extensionElements.values;\r\n\r\n    forEach(values, fn);\r\n  }\r\n\r\n  ///// API ////////////////////////////////\r\n\r\n  return {\r\n    handleDefinitions: handleDefinitions\r\n  };\r\n}\r\n\r\nmodule.exports = DRDTreeWalker;\r\n","'use strict';\r\n\r\nvar DrdTreeWalker = require(16);\r\n\r\n\r\n/**\r\n * Import the definitions into a diagram.\r\n *\r\n * Errors and warnings are reported through the specified callback.\r\n *\r\n * @param  {Canvas} canvas\r\n * @param  {ModdleElement} definitions\r\n * @param  {Function} done the callback, invoked with (err, [ warning ]) once the import is done\r\n */\r\nfunction importDRD(canvas, definitions, done) {\r\n\r\n  var importer = canvas.get('drdImporter'),\r\n      eventBus = canvas.get('eventBus');\r\n\r\n  var error,\r\n      warnings = [];\r\n\r\n  function render(definitions) {\r\n\r\n    var visitor = {\r\n      root: function(element) {\r\n        return importer.root(element);\r\n      },\r\n\r\n      element: function(element, di) {\r\n        return importer.add(element, di);\r\n      },\r\n\r\n      error: function(message, context) {\r\n        warnings.push({ message: message, context: context });\r\n      }\r\n    };\r\n\r\n    var walker = new DrdTreeWalker(visitor);\r\n\r\n    // import\r\n    walker.handleDefinitions(definitions);\r\n  }\r\n\r\n  eventBus.fire('import.render.start', { definitions: definitions });\r\n\r\n  try {\r\n    render(definitions);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  eventBus.fire('import.render.complete', {\r\n    error: error,\r\n    warnings: warnings\r\n  });\r\n\r\n\r\n  done(error, warnings);\r\n}\r\n\r\nmodule.exports.importDRD = importDRD;\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  drdImporter: [ 'type', require(15) ]\r\n};\r\n","/**\r\n * The code in the <project-logo></project-logo> area\r\n * must not be changed.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n'use strict';\r\n\r\nvar assign = require(250),\r\n    omit = require(254),\r\n    isString = require(247),\r\n    filter = require(134);\r\n\r\nvar domify = require(264),\r\n    domQuery = require(266),\r\n    domRemove = require(267);\r\n\r\nvar Table = require(284),\r\n    DmnModdle = require(118);\r\n\r\nvar inherits = require(126);\r\n\r\nvar Importer = require(59);\r\n\r\nvar is = require(64).is;\r\n\r\nvar ComboBox = require(294);\r\n\r\n\r\nfunction checkValidationError(err) {\r\n\r\n  // check if we can help the user by indicating wrong DMN xml\r\n  // (in case he or the exporting tool did not get that right)\r\n\r\n  var pattern = /unparsable content <([^>]+)> detected([/s/S]*)$/;\r\n  var match = pattern.exec(err.message);\r\n\r\n  if (match) {\r\n    err.message =\r\n      'unparsable content <' + match[1] + '> detected; ' +\r\n      'this may indicate an invalid DMN file' + match[2];\r\n  }\r\n\r\n  return err;\r\n}\r\n\r\nvar DEFAULT_OPTIONS = {\r\n  container: 'body'\r\n};\r\n\r\n/**\r\n * A viewer for DMN tables.\r\n *\r\n *\r\n * ## Extending the Viewer\r\n *\r\n * In order to extend the viewer pass extension modules to bootstrap via the\r\n * `additionalModules` option. An extension module is an object that exposes\r\n * named services.\r\n *\r\n * The following example depicts the integration of a simple\r\n * logging component that integrates with interaction events:\r\n *\r\n *\r\n * ```javascript\r\n *\r\n * // logging component\r\n * function InteractionLogger(eventBus) {\r\n *   eventBus.on('element.hover', function(event) {\r\n *     console.log()\r\n *   })\r\n * }\r\n *\r\n * InteractionLogger.$inject = [ 'eventBus' ]; // minification save\r\n *\r\n * // extension module\r\n * var extensionModule = {\r\n *   __init__: [ 'interactionLogger' ],\r\n *   interactionLogger: [ 'type', InteractionLogger ]\r\n * };\r\n *\r\n * // extend the viewer\r\n * var dmnViewer = new Viewer({ additionalModules: [ extensionModule ] });\r\n * dmnViewer.importXML(...);\r\n * ```\r\n *\r\n * @param {Object} [options] configuration options to pass to the viewer\r\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\r\n * @param {String|Number} [options.width] the width of the viewer\r\n * @param {String|Number} [options.height] the height of the viewer\r\n * @param {Object} [options.moddleExtensions] extension packages to provide\r\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\r\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\r\n */\r\nfunction Viewer(options) {\r\n\r\n  this.options = options = assign({}, DEFAULT_OPTIONS, options || {});\r\n\r\n  this.moddle = options.moddle;\r\n\r\n  if (!this.moddle) {\r\n    this.moddle = this._createModdle(options);\r\n  }\r\n\r\n  this.container = this._createContainer(options);\r\n\r\n  this._init(this.container, this.moddle, options);\r\n\r\n  /* <project-logo> */\r\n\r\n  addProjectLogo(this.container.firstChild);\r\n\r\n  /* </project-logo> */\r\n\r\n  this.on([ 'table.destroy', 'table.clear' ], function() {\r\n    if (ComboBox.prototype._openedDropdown) {\r\n      ComboBox.prototype._openedDropdown._closeDropdown();\r\n    }\r\n  }, this);\r\n}\r\n\r\ninherits(Viewer, Table);\r\n\r\nmodule.exports = Viewer;\r\n\r\n/**\r\n * Parse and render a DMN 1.1 table.\r\n *\r\n * Once finished the viewer reports back the result to the\r\n * provided callback function with (err, warnings).\r\n *\r\n * ## Life-Cycle Events\r\n *\r\n * During import the viewer will fire life-cycle events:\r\n *\r\n *   * import.parse.start (about to read model from xml)\r\n *   * import.parse.complete (model read; may have worked or not)\r\n *   * import.render.start (graphical import start)\r\n *   * import.render.complete (graphical import finished)\r\n *   * import.done (everything done)\r\n *\r\n * You can use these events to hook into the life-cycle.\r\n *\r\n * @param {String} xml the DMN 1.1 xml\r\n * @param {Function} [done] invoked with (err, warnings=[])\r\n */\r\nViewer.prototype.importXML = function(xml, done) {\r\n\r\n  // done is optional\r\n  done = done || function() {};\r\n\r\n  var self = this;\r\n\r\n  // hook in pre-parse listeners +\r\n  // allow xml manipulation\r\n  xml = this._emit('import.parse.start', { xml: xml }) || xml;\r\n\r\n  this.moddle.fromXML(xml, 'dmn:Definitions', function(err, definitions, context) {\r\n\r\n    // hook in post parse listeners +\r\n    // allow definitions manipulation\r\n    definitions = self._emit('import.parse.complete', {\r\n      error: err,\r\n      definitions: definitions,\r\n      context: context\r\n    }) || definitions;\r\n\r\n    if (err) {\r\n      err = checkValidationError(err);\r\n\r\n      self._emit('import.done', { error: err });\r\n\r\n      return done(err);\r\n    }\r\n\r\n    var parseWarnings = context.warnings;\r\n\r\n    self.importDefinitions(definitions, function(err, importWarnings) {\r\n      var allWarnings = [].concat(parseWarnings, importWarnings || []);\r\n\r\n      self._emit('import.done', { error: err, warnings: allWarnings });\r\n\r\n      done(err, allWarnings);\r\n    });\r\n  });\r\n};\r\n\r\nViewer.prototype.getDefinitions = function() {\r\n  return this.definitions;\r\n};\r\n\r\nViewer.prototype.getDecisions = function(definitions) {\r\n  var defs = definitions || this.definitions;\r\n\r\n  if (!defs) {\r\n    return;\r\n  }\r\n\r\n  return filter(defs.drgElements, function(element) {\r\n    return is(element, 'dmn:Decision');\r\n  });\r\n};\r\n\r\nViewer.prototype.getCurrentDecision = function() {\r\n  return this._decision;\r\n};\r\n\r\nViewer.prototype.showDecision = function(decision, done) {\r\n  var self = this;\r\n\r\n  if (!this.definitions) {\r\n    throw new Error('Definitions not parsed yet');\r\n  }\r\n\r\n  if (!decision) {\r\n    throw new Error('Unknown decision object');\r\n  }\r\n\r\n  if (!done) {\r\n    done = function() {};\r\n  }\r\n\r\n  // so we can get it later from the DRD Viewer\r\n  this._decision = decision;\r\n\r\n  // import the definition with the given decision\r\n  this.importDefinitions(this.definitions, decision, function(err, importWarnings) {\r\n    var warnings = importWarnings || [];\r\n\r\n    self._emit('import.done', { error: err, warnings: warnings });\r\n\r\n    done(err, warnings);\r\n  });\r\n\r\n};\r\n\r\nViewer.prototype.saveXML = function(options, done) {\r\n\r\n  if (!done) {\r\n    done = options;\r\n    options = {};\r\n  }\r\n\r\n  var definitions = this.definitions;\r\n\r\n  if (!definitions) {\r\n    return done(new Error('no definitions loaded'));\r\n  }\r\n\r\n  this.moddle.toXML(definitions, options, done);\r\n};\r\n\r\nViewer.prototype.importDefinitions = function(definitions, decision, done) {\r\n  var decisions;\r\n\r\n  // use try/catch to not swallow synchronous exceptions\r\n  // that may be raised during model parsing\r\n  try {\r\n    if (this.definitions) {\r\n      this.clear();\r\n    }\r\n\r\n    if (typeof decision === 'function') {\r\n      done = decision;\r\n      decisions = this.getDecisions(definitions);\r\n\r\n      decision = decisions && decisions[0];\r\n    }\r\n\r\n    this.definitions = definitions;\r\n\r\n    // perform graphical import\r\n    Importer.importDmnTable(this, definitions, decision, done);\r\n  } catch (e) {\r\n    done(e);\r\n  }\r\n};\r\n\r\nViewer.prototype._createContainer = function(options) {\r\n\r\n  var parent = options.container,\r\n      container;\r\n\r\n  // support jquery element\r\n  // unwrap it if passed\r\n  if (parent.get) {\r\n    parent = parent.get(0);\r\n  }\r\n\r\n  // support selector\r\n  if (isString(parent)) {\r\n    parent = domQuery(parent);\r\n  }\r\n\r\n  this._parentContainer = parent;\r\n\r\n  container = domify('<div class=\"dmn-table\"></div>');\r\n\r\n  // append to DOM unless explicity defined otherwise\r\n  if (options.isDetached !== true) {\r\n    parent.appendChild(container);\r\n  }\r\n\r\n  return container;\r\n};\r\n\r\n/**\r\n * Create a moddle instance.\r\n *\r\n * @param {Object} options\r\n */\r\nViewer.prototype._createModdle = function(options) {\r\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\r\n\r\n  return new DmnModdle(moddleOptions);\r\n};\r\n\r\nViewer.prototype._init = function(container, moddle, options) {\r\n\r\n  var modules = [].concat(options.modules || this.getModules(), options.additionalModules || []);\r\n\r\n  // add self as an available service\r\n  modules.unshift({\r\n    dmnjs: [ 'value', this ],\r\n    moddle: [ 'value', moddle ]\r\n  });\r\n\r\n  options = omit(options, 'additionalModules');\r\n\r\n  options = assign(options, {\r\n    sheet: {\r\n      width: options.width,\r\n      height: options.height,\r\n      container: container\r\n    },\r\n    modules: modules\r\n  });\r\n\r\n  // invoke table constructor\r\n  Table.call(this, options);\r\n};\r\n\r\n\r\nViewer.prototype.getModules = function() {\r\n  return this._modules;\r\n};\r\n\r\n\r\n/**\r\n * Destroy the viewer instance and remove all its\r\n * remainders from the document tree.\r\n */\r\nViewer.prototype.destroy = function() {\r\n\r\n  // table destroy\r\n  Table.prototype.destroy.call(this);\r\n\r\n  // dom detach\r\n  domRemove(this.container);\r\n};\r\n\r\n/**\r\n * Emit an event on the underlying {@link EventBus}\r\n *\r\n * @param  {String} type\r\n * @param  {Object} event\r\n *\r\n * @return {Object} event processing result (if any)\r\n */\r\nViewer.prototype._emit = function(type, event) {\r\n  return this.get('eventBus').fire(type, event);\r\n};\r\n\r\n/**\r\n * Register an event listener\r\n *\r\n * Remove a previously added listener via {@link #off(event, callback)}.\r\n *\r\n * @param {String} event\r\n * @param {Number} [priority]\r\n * @param {Function} callback\r\n * @param {Object} [that]\r\n */\r\nViewer.prototype.on = function(event, priority, callback, target) {\r\n  return this.get('eventBus').on(event, priority, callback, target);\r\n};\r\n\r\n/**\r\n * De-register an event listener\r\n *\r\n * @param {String} event\r\n * @param {Function} callback\r\n */\r\nViewer.prototype.off = function(event, callback) {\r\n  this.get('eventBus').off(event, callback);\r\n};\r\n\r\n// modules the viewer is composed of\r\nViewer.prototype._modules = [\r\n  require(20),\r\n  require(101),\r\n  require(302),\r\n  require(42),\r\n  require(30),\r\n  require(25),\r\n  require(49),\r\n  require(58),\r\n  require(51),\r\n  require(38),\r\n  require(32),\r\n  require(28),\r\n  require(54),\r\n  require(45),\r\n\r\n  require(300),\r\n  require(298),\r\n  require(296)\r\n];\r\n\r\n\r\n/* <project-logo> */\r\n\r\nvar PoweredBy = require(65),\r\n    domEvent = require(265);\r\n\r\n/**\r\n * Adds the project logo to the diagram container as\r\n * required by the bpmn.io license.\r\n *\r\n * @see http://bpmn.io/license\r\n *\r\n * @param {Element} container\r\n */\r\nfunction addProjectLogo(container) {\r\n  var logoData = PoweredBy.BPMNIO_LOGO;\r\n\r\n  var linkMarkup =\r\n    '<a href=\"http://bpmn.io\" ' +\r\n       'target=\"_blank\" ' +\r\n       'class=\"dmn-js-powered-by\" ' +\r\n       'title=\"Powered by bpmn.io\" ' +\r\n       'style=\"position: absolute; z-index: 100\">' +\r\n        '<img src=\"data:image/png;base64,' + logoData + '\">' +\r\n    '</a>';\r\n\r\n  var linkElement = domify(linkMarkup);\r\n\r\n  container.appendChild(linkElement);\r\n\r\n  domEvent.bind(linkElement, 'click', function(event) {\r\n    PoweredBy.open();\r\n\r\n    event.preventDefault();\r\n  });\r\n}\r\n\r\n/* </project-logo> */\r\n","module.exports = {\r\n  __depends__: [\r\n    require(63),\r\n    require(22)\r\n  ]\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n\r\nvar HIGH_PRIORITY = 1500,\r\n    UTILITY_COL_WIDTH = 45;\r\n\r\n\r\nfunction DmnRenderer(eventBus, elementRegistry, sheet, config) {\r\n\r\n  eventBus.on('sheet.resized', HIGH_PRIORITY, function(event) {\r\n    var context = event.context;\r\n\r\n    var container = sheet.getContainer();\r\n\r\n    var minColWidth = config.minColWidth;\r\n\r\n    var baseWidth = UTILITY_COL_WIDTH,\r\n        numberOfCols = 1,\r\n        utilityColumn,\r\n        firstColumn,\r\n        minTableWidth;\r\n\r\n    if (!context) {\r\n      event.context = context = {};\r\n    }\r\n\r\n    // get a random cell to figure out the width\r\n    utilityColumn = elementRegistry.filter(function(elem) {\r\n      return elem.id === 'utilityColumn';\r\n    })[0];\r\n\r\n    firstColumn = utilityColumn.next;\r\n\r\n    if (!firstColumn) {\r\n      return;\r\n    }\r\n\r\n    // get the number of cols\r\n    while (!firstColumn.isAnnotationsColumn) {\r\n      firstColumn = firstColumn.next;\r\n\r\n      numberOfCols++;\r\n    }\r\n\r\n    minTableWidth = baseWidth + numberOfCols * minColWidth;\r\n\r\n    sheet.setWidth('auto');\r\n\r\n    if (container.clientWidth <= minTableWidth) {\r\n      context.newWidth = minTableWidth;\r\n    }\r\n  });\r\n\r\n  eventBus.on('row.render', function(event) {\r\n    if (event.data.isClauseRow) {\r\n      domClasses(event.gfx).add('labels');\r\n    }\r\n  });\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    var data = event.data,\r\n        gfx  = event.gfx;\r\n\r\n    if (!data.column.businessObject) {\r\n      return;\r\n    }\r\n\r\n    if (data.row.isClauseRow) {\r\n      // clause names\r\n      gfx.childNodes[0].textContent = data.column.businessObject.label;\r\n    } else if (data.content) {\r\n      if (!data.content.tagName && data.row.businessObject) {\r\n        // input and output entries\r\n        gfx.childNodes[0].textContent = data.content.text;\r\n      }\r\n    }\r\n    if (!data.row.isFoot) {\r\n      if (data.column.businessObject.inputExpression) {\r\n        domClasses(gfx).add('input');\r\n      } else {\r\n        domClasses(gfx).add('output');\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nDmnRenderer.$inject = [ 'eventBus', 'elementRegistry', 'sheet', 'config' ];\r\n\r\nmodule.exports = DmnRenderer;\r\n","module.exports = {\r\n  __init__: [ 'tableRenderer' ],\r\n  tableRenderer: [ 'type', require(21) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264);\r\n\r\n/**\r\n * Adds an annotation column to the table\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction Annotations(eventBus, sheet, elementRegistry, graphicsFactory, translate) {\r\n\r\n  this.column = null;\r\n\r\n  var labelCell;\r\n\r\n  eventBus.on('import.done', function(event) {\r\n    var column;\r\n\r\n    if (event.error) {\r\n      return;\r\n    }\r\n\r\n    eventBus.fire('annotations.add', event);\r\n\r\n    this.column = column = sheet.addColumn({\r\n      id: 'annotations',\r\n      isAnnotationsColumn: true\r\n    });\r\n\r\n    labelCell = elementRegistry.filter(function(element) {\r\n      return element._type === 'cell' && element.column === column && element.row.isLabelRow;\r\n    })[0];\r\n\r\n    labelCell.rowspan = 4;\r\n\r\n    labelCell.content = domify(translate('Annotation'));\r\n\r\n    graphicsFactory.update('column', column, elementRegistry.getGraphics(this.column.id));\r\n\r\n    eventBus.fire('annotations.added', column);\r\n  }, this);\r\n\r\n  eventBus.on([ 'sheet.destroy', 'sheet.clear' ], function(event) {\r\n    var column = this.column;\r\n\r\n    eventBus.fire('annotations.destroy', column);\r\n\r\n    sheet.removeColumn({\r\n      id: 'annotations'\r\n    });\r\n\r\n    eventBus.fire('annotations.destroyed', column);\r\n  }, this);\r\n}\r\n\r\nAnnotations.$inject = [\r\n  'eventBus', 'sheet', 'elementRegistry',\r\n  'graphicsFactory', 'translate'\r\n];\r\n\r\nmodule.exports = Annotations;\r\n\r\nAnnotations.prototype.getColumn = function() {\r\n  return this.column;\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n\r\nfunction AnnotationsRenderer(\r\n    eventBus,\r\n    annotations) {\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    if (event.data.column === annotations.getColumn() && !event.data.row.isFoot) {\r\n      domClasses(event.gfx).add('annotation');\r\n      if (!event.data.row.isHead) {\r\n        // render the description of the rule inside the cell\r\n        event.gfx.childNodes[0].textContent = event.data.row.businessObject.description || '';\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nAnnotationsRenderer.$inject = [\r\n  'eventBus',\r\n  'annotations'\r\n];\r\n\r\nmodule.exports = AnnotationsRenderer;\r\n","module.exports = {\r\n  __init__: [ 'annotations', 'annotationsRenderer'],\r\n  __depends__: [\r\n    require(101)\r\n  ],\r\n  annotations: [ 'type', require(23) ],\r\n  annotationsRenderer: [ 'type', require(24) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    utils  = require(27);\r\n\r\nvar isDateCell = utils.isDateCell,\r\n    parseDate  = utils.parseDate;\r\n\r\nfunction DateView(eventBus, simpleMode) {\r\n  this._eventBus = eventBus;\r\n  this._simpleMode = simpleMode;\r\n\r\n  this._eventBus.on('cell.render', function(evt) {\r\n\r\n    // remove potential datafield\r\n    dateGfx = evt.gfx.querySelector('.date-content');\r\n    if (dateGfx) {\r\n      dateGfx.parentNode.removeChild(dateGfx);\r\n    }\r\n    if (evt.gfx.childNodes.length === 1) {\r\n        // make sure the contenteditable field is visible\r\n      evt.gfx.firstChild.style.display = 'inline';\r\n      evt.data.preventAutoUpdate = false;\r\n    }\r\n\r\n    if (isDateCell(evt.data)) {\r\n      if (this._simpleMode.isActive()) {\r\n        // make sure the contendeditable field is hidden\r\n        evt.gfx.firstChild.style.display = 'none';\r\n        evt.data.preventAutoUpdate = true;\r\n\r\n        // check for the datafield\r\n        var dateGfx = evt.gfx.querySelector('.date-content');\r\n        if (!dateGfx) {\r\n          dateGfx = domify('<span class=\"date-content\">');\r\n          evt.gfx.appendChild(dateGfx);\r\n        }\r\n        this.renderDate(evt.data.content, dateGfx);\r\n      } else {\r\n        // make sure the contenteditable field is visible\r\n        evt.gfx.firstChild.style.display = '';\r\n        evt.data.preventAutoUpdate = false;\r\n\r\n        // remove potential datafield\r\n        dateGfx = evt.gfx.querySelector('.date-content');\r\n        \r\n        if (dateGfx) {\r\n          dateGfx.parentNode.removeChild(dateGfx);\r\n        }\r\n      }\r\n    }\r\n  }, this);\r\n}\r\n\r\nDateView.prototype.renderDate = function(data, gfx) {\r\n  if (data && data.text) {\r\n    var parsed = parseDate(data.text);\r\n    if (!parsed) {\r\n      if (data.description) {\r\n        gfx.innerHTML = '<span class=\"expression-hint\"><b>[expression]</b> (<i></i>)</span>';\r\n        gfx.querySelector('i').textContent = data.description;\r\n      } else {\r\n        gfx.innerHTML = '<span class=\"expression-hint\"><b>[expression]</b></span>';\r\n      }\r\n    } else {\r\n      var dateString;\r\n      var date1 = new Date(parsed.date1 + '.000Z');\r\n      if (parsed.type === 'exact') {\r\n        dateString = date1.toUTCString().slice(0, -7);\r\n      } else {\r\n        dateString = parsed.type + ' ' + date1.toUTCString().slice(0, -7);\r\n\r\n        if (parsed.date2) {\r\n          var date2 = new Date(parsed.date2 + '.000Z');\r\n          dateString += ' and ' + date2.toUTCString().slice(0, -7);\r\n        }\r\n      }\r\n\r\n      gfx.textContent = dateString;\r\n    }\r\n  } else {\r\n    gfx.innerHTML = '<span style=\"display: inline-block; width: 100%; color: #777777; text-align: center;\">-</span>';\r\n  }\r\n};\r\n\r\nDateView.$inject = ['eventBus', 'simpleMode'];\r\n\r\nmodule.exports = DateView;\r\n","'use strict';\r\n\r\nvar hasDateType = function(column) {\r\n  return column &&\r\n         (column.inputExpression &&\r\n         column.inputExpression.typeRef === 'date' ||\r\n         column.typeRef === 'date');\r\n};\r\nvar isBodyRow = function(row) {\r\n  return !row.isHead && !row.isFoot;\r\n};\r\n\r\nmodule.exports = {\r\n  isISODateString: function(dateString) {\r\n    return //d{4}(?:-/d/d){2}T(?:/d/d:){2}/d/d/.test(dateString);\r\n  },\r\n  getSampleDate: function(endOfDay) {\r\n    var date = new Date();\r\n    if (endOfDay) {\r\n      date.setUTCHours(23, 59, 59, 0);\r\n    } else {\r\n      date.setUTCHours(0, 0, 0, 0);\r\n    }\r\n\r\n    return date.toISOString().slice(0,-5);\r\n  },\r\n  isDateCell: function(el) {\r\n    return el._type === 'cell' &&\r\n      hasDateType(el.column.businessObject) &&\r\n      isBodyRow(el.row);\r\n  },\r\n  parseDate: function(dateString) {\r\n    // try empty\r\n    if (dateString.trim() === '') {\r\n      return {\r\n        type: 'exact',\r\n        date1: ''\r\n      };\r\n    }\r\n\r\n    // try between\r\n    var info = dateString.match(/^/[date and time/(\"(/d{4}(?:-/d/d){2}T(?:/d/d:){2}/d/d)\"/)..date and time/(\"(/d{4}(?:-/d/d){2}T(?:/d/d:){2}/d/d)\"/);\r\n    if (info) {\r\n      return {\r\n        type: 'between',\r\n        date1: info[1],\r\n        date2: info[2]\r\n      };\r\n    }\r\n\r\n    // try before and after\r\n    info = dateString.match(/^(<|>)/s*date and time/(\"(/d{4}(?:-/d/d){2}T(?:/d/d:){2}/d/d)\"/)/);\r\n    if (info) {\r\n      return {\r\n        type: info[1] === '<' ? 'before' : 'after',\r\n        date1: info[2]\r\n      };\r\n    }\r\n\r\n    // try exact date\r\n    info = dateString.match(/^date and time/(\"(/d{4}(?:-/d/d){2}T(?:/d/d:){2}/d/d)\"/)$/);\r\n    if (info) {\r\n      return {\r\n        type: 'exact',\r\n        date1: info[1]\r\n      };\r\n    }\r\n  }\r\n};\r\n","module.exports = {\r\n  __init__: [ 'dateView' ],\r\n  __depends__: [],\r\n  dateView: [ 'type', require(26) ]\r\n};\r\n\r\n","'use strict';\r\n\r\nvar domify = require(264);\r\n\r\nvar inherits = require(126);\r\n\r\nvar BaseModule = require(303);\r\n\r\n/**\r\n * View and edit decision properties.\r\n * Extends TableName by adding a table ID.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction DecisionProperties(eventBus, sheet, tableName) {\r\n\r\n  BaseModule.call(this, eventBus, sheet, tableName);\r\n\r\n  this.node = domify(\r\n    '<header><h3>' +\r\n    this.tableName +\r\n    '</h3><div class=\"tjs-table-id mappings\"></div></header'\r\n  );\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('tableName.allowEdit', function(event) {\r\n    if (event.editAllowed) {\r\n      self.node.querySelector('.tjs-table-id').setAttribute('contenteditable', true);\r\n\r\n      self.node.querySelector('.tjs-table-id').addEventListener('blur', function(evt) {\r\n        var newId = evt.target.textContent;\r\n        if (newId !== self.getId()) {\r\n          eventBus.fire('tableName.editId', {\r\n            newId: newId\r\n          });\r\n        }\r\n      }, true);\r\n    }\r\n  });\r\n\r\n  this.semantic = null;\r\n}\r\n\r\ninherits(DecisionProperties, BaseModule);\r\n\r\nDecisionProperties.$inject = [ 'eventBus', 'sheet', 'config.tableName' ];\r\n\r\nmodule.exports = DecisionProperties;\r\n\r\nDecisionProperties.prototype.setSemantic = function(semantic) {\r\n  this.semantic = semantic;\r\n  this.setName(semantic.name);\r\n  this.setId(semantic.id);\r\n};\r\n\r\nDecisionProperties.prototype.setName = function(newName) {\r\n  this.semantic.name = newName;\r\n  this.node.querySelector('h3').textContent = newName || '';\r\n};\r\n\r\nDecisionProperties.prototype.getName = function() {\r\n  return this.semantic.name;\r\n};\r\n\r\nDecisionProperties.prototype.setId = function(newId) {\r\n  if (newId) {\r\n    this.semantic.id = newId;\r\n  }\r\n  \r\n  this.node.querySelector('div').textContent = this.semantic.id || '';\r\n};\r\n\r\nDecisionProperties.prototype.getId = function() {\r\n  return this.semantic.id;\r\n};\r\n","module.exports = {\r\n  __init__: [ 'tableName' ],\r\n  tableName: [ 'type', require(29) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264);\r\n\r\nvar hasSecondaryModifier = require(109).hasSecondaryModifier;\r\n\r\nvar OFFSET_X = 2,\r\n    OFFSET_Y = 2;\r\n\r\n\r\nfunction Descriptions(eventBus, elementRegistry, sheet) {\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n  this._sheet = sheet;\r\n\r\n  var self = this;\r\n\r\n  document.body.addEventListener('click', function(evt) {\r\n    self.closePopover();\r\n  });\r\n\r\n  document.body.addEventListener('keydown', function(evt) {\r\n    if (evt.keyCode === 13 && self.openedPopover && !hasSecondaryModifier(evt)) {\r\n      self.closePopover();\r\n    }\r\n  });\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    var data = event.data,\r\n        gfx = event.gfx,\r\n        indicator;\r\n\r\n    if (data.content && data.content.description) {\r\n      if (!gfx.querySelector('.description-indicator')) {\r\n        indicator = domify('<div class=\"description-indicator\"></div>');\r\n\r\n        indicator.addEventListener('click', function(evt) {\r\n          evt.stopPropagation();\r\n\r\n          self.openPopover(data);\r\n        });\r\n\r\n        gfx.appendChild(indicator);\r\n      }\r\n    } else {\r\n      indicator = gfx.querySelector('.description-indicator');\r\n      if (indicator) {\r\n        indicator.parentNode.removeChild(indicator);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nDescriptions.$inject = [ 'eventBus', 'elementRegistry', 'sheet' ];\r\n\r\nmodule.exports = Descriptions;\r\n\r\nDescriptions.prototype.closePopover = function() {\r\n  var eventBus = this._eventBus;\r\n\r\n  if (this.openedPopover) {\r\n    this.openedPopover.parentNode.removeChild(this.openedPopover);\r\n    this.openedPopover = null;\r\n\r\n    eventBus.fire('description.popover.closed');\r\n  }\r\n};\r\n\r\nDescriptions.prototype.openPopover = function(context) {\r\n  var sheet = this._sheet,\r\n      eventBus = this._eventBus,\r\n      elementRegistry = this._elementRegistry;\r\n\r\n  var container = sheet.getContainer(),\r\n      gfx = elementRegistry.getGraphics(context),\r\n      node = domify('<textarea class=\"descriptions-textarea\"></textarea>');\r\n\r\n  this.closePopover();\r\n\r\n  eventBus.fire('description.popover.open', context);\r\n\r\n  node.style.position = 'absolute';\r\n  node.style.top = gfx.offsetTop + OFFSET_Y + 'px';\r\n  node.style.left = gfx.offsetLeft + gfx.clientWidth + OFFSET_X + 'px';\r\n  node.style.width = '200px';\r\n  node.style.height = '80px';\r\n\r\n  // setting textarea to disabled. Editing module will remove disabled attribute\r\n  node.setAttribute('disabled', 'disabled');\r\n\r\n  node.addEventListener('click', function(evt) {\r\n    evt.stopPropagation();\r\n  });\r\n\r\n  container.appendChild(node);\r\n\r\n  this.openedPopover = node;\r\n\r\n  eventBus.fire('description.popover.opened', node, context);\r\n\r\n  node.focus();\r\n\r\n  node.textContent = context.content.description;\r\n};\r\n","module.exports = {\r\n  __init__: [ 'descriptions' ],\r\n  descriptions: [ 'type', require(31) ]\r\n};\r\n","'use strict';\r\n\r\nvar inherits = require(126);\r\n\r\nvar BaseElementFactory = require(286);\r\n\r\n\r\n/**\r\n * A dmn-aware factory for table-js elements\r\n */\r\nfunction ElementFactory(moddle, tableFactory) {\r\n  BaseElementFactory.call(this);\r\n\r\n  this._moddle = moddle;\r\n  this._tableFactory = tableFactory;\r\n}\r\n\r\ninherits(ElementFactory, BaseElementFactory);\r\n\r\n\r\nElementFactory.$inject = [ 'moddle', 'tableFactory' ];\r\n\r\nmodule.exports = ElementFactory;\r\n\r\nElementFactory.prototype.baseCreate = BaseElementFactory.prototype.create;\r\n\r\nElementFactory.prototype.create = function(elementType, attrs) {\r\n  var tableFactory = this._tableFactory;\r\n\r\n  attrs = attrs || {};\r\n\r\n  var businessObject = attrs.businessObject;\r\n  if (elementType === 'row') {\r\n    attrs.type = 'dmn:DecisionRule';\r\n  } else if (elementType === 'column' && !attrs.type) {\r\n    attrs.type = attrs.isInput ? 'dmn:InputClause' : 'dmn:OutputClause';\r\n  }\r\n\r\n  if (!businessObject) {\r\n    if (!attrs.type) {\r\n      throw new Error('no type specified');\r\n    }\r\n    else if (attrs.type === 'dmn:DecisionRule') {\r\n      businessObject = tableFactory.createRule(attrs.id);\r\n    } else if (elementType === 'column') {\r\n      if (attrs.isInput) {\r\n        businessObject = tableFactory.createInputClause(attrs.name);\r\n      } else {\r\n        businessObject = tableFactory.createOutputClause(attrs.name);\r\n      }\r\n    } else {\r\n      businessObject = tableFactory.create(attrs.type);\r\n    }\r\n  }\r\n\r\n  attrs.businessObject = businessObject;\r\n  attrs.id = businessObject.id;\r\n\r\n  return this.baseCreate(elementType, attrs);\r\n\r\n};\r\n","'use strict';\r\n\r\nfunction TableFactory(moddle) {\r\n  this._model = moddle;\r\n}\r\n\r\nTableFactory.$inject = [ 'moddle' ];\r\n\r\n\r\nTableFactory.prototype._needsId = function(element) {\r\n  return element.$instanceOf('dmn:DMNElement');\r\n};\r\n\r\nTableFactory.prototype._ensureId = function(element) {\r\n\r\n  // generate semantic ids for elements\r\n  // bpmn:SequenceFlow -> SequenceFlow_ID\r\n  var prefix = (element.$type || '').replace(/^[^:]*:/g, '') + '_';\r\n\r\n  if (!element.id && this._needsId(element)) {\r\n    element.id = this._model.ids.nextPrefixed(prefix, element);\r\n  }\r\n};\r\n\r\n\r\nTableFactory.prototype.create = function(type, attrs) {\r\n  var element = this._model.create(type, attrs || {});\r\n\r\n  this._ensureId(element);\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createRule = function(id) {\r\n  var attrs = { id: id };\r\n  attrs.inputEntry = attrs.inputEntry || [];\r\n  attrs.outputEntry = attrs.outputEntry || [];\r\n\r\n  var element = this.create('dmn:DecisionRule', attrs);\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createInputEntry = function(text, clause, rule) {\r\n  var element = this.create('dmn:UnaryTests', {\r\n    text: text\r\n  });\r\n\r\n  var clauseIdx = clause.$parent.input.indexOf(clause);\r\n\r\n  element.$parent = rule;\r\n\r\n  if (!rule.inputEntry) {\r\n    rule.inputEntry = [];\r\n  }\r\n\r\n  rule.inputEntry.splice(clauseIdx, 0, element);\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createInputClause = function(name) {\r\n  var element = this.create('dmn:InputClause', {\r\n    label: name\r\n  });\r\n\r\n  element.inputExpression = this.create('dmn:LiteralExpression', {});\r\n\r\n  element.inputExpression.typeRef = 'string';\r\n\r\n  element.inputExpression.$parent = element;\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createOutputClause = function(name) {\r\n  var element = this.create('dmn:OutputClause', {\r\n    label: name\r\n  });\r\n\r\n  element.typeRef = 'string';\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createOutputEntry = function(text, clause, rule) {\r\n  var element = this.create('dmn:LiteralExpression', {\r\n    text: text\r\n  });\r\n\r\n  var clauseIdx = clause.$parent.output.indexOf(clause);\r\n\r\n  element.$parent = rule;\r\n\r\n  if (!rule.outputEntry) {\r\n    rule.outputEntry = [];\r\n  }\r\n\r\n  rule.outputEntry.splice(clauseIdx, 0, element);\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createInputValues = function(input) {\r\n  var element = this.create('dmn:UnaryTests', {\r\n    text: ''\r\n  });\r\n\r\n  input.inputValues = element;\r\n  element.$parent = input;\r\n\r\n  return element;\r\n};\r\n\r\nTableFactory.prototype.createOutputValues = function(output) {\r\n  var element = this.create('dmn:UnaryTests', {\r\n    text: ''\r\n  });\r\n\r\n  output.outputValues = element;\r\n  element.$parent = output;\r\n\r\n  return element;\r\n};\r\n\r\nmodule.exports = TableFactory;\r\n","module.exports = {\r\n  tableFactory: [ 'type', require(34) ],\r\n  elementFactory: [ 'type', require(33) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    domClasses = require(261);\r\n\r\nvar ComboBox = require(294);\r\n\r\nvar OFFSET_X = 36,\r\n    OFFSET_Y = -16;\r\n\r\n/**\r\n * Adds behavior to display and set the hit policy of a table\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction HitPolicy(eventBus, utilityColumn, ioLabel, graphicsFactory, elementRegistry, rules, translate) {\r\n\r\n  this.table = null;\r\n  this.hitPolicyCell = null;\r\n\r\n  var self = this;\r\n  eventBus.on('dmnElement.added', function(event) {\r\n    if (event.element && event.element.businessObject.$instanceOf('dmn:DecisionTable')) {\r\n      self.table = event.element.businessObject;\r\n    }\r\n  });\r\n\r\n  eventBus.on('cell.added', function(event) {\r\n\r\n    if (event.element.column === utilityColumn.getColumn() &&\r\n       event.element.row.id==='ioLabel') {\r\n      self.hitPolicyCell = event.element;\r\n\r\n      self.hitPolicyCell.rowspan = 4;\r\n\r\n      var template = domify('<div>');\r\n\r\n        // initializing the comboBox\r\n      var comboBox = new ComboBox({\r\n        label: translate('Hit Policy'),\r\n        classNames: ['dmn-combobox', 'hitpolicy'],\r\n        options: ['UNIQUE', 'FIRST', 'PRIORITY', 'ANY', 'COLLECT', 'RULE ORDER', 'OUTPUT ORDER'],\r\n        dropdownClassNames: ['dmn-combobox-suggestions']\r\n      });\r\n\r\n      template.insertBefore(\r\n          comboBox.getNode(),\r\n          template.firstChild\r\n        );\r\n\r\n      var operatorComboBox = new ComboBox({\r\n        label: translate('Collect Operator'),\r\n        classNames: ['dmn-combobox', 'operator'],\r\n        options: ['LIST', 'SUM', 'MIN', 'MAX', 'COUNT'],\r\n        dropdownClassNames: ['dmn-combobox-suggestions']\r\n      });\r\n\r\n      template.appendChild(operatorComboBox.getNode());\r\n\r\n        // display and hide the operatorComboBox based on the selected hit policy\r\n      comboBox.addEventListener('valueChanged', function(evt) {\r\n        if (evt.newValue.toLowerCase() === 'collect') {\r\n          operatorComboBox.getNode().style.display = 'table';\r\n        } else {\r\n          operatorComboBox.getNode().style.display = 'none';\r\n        }\r\n      });\r\n\r\n      event.element.complex = {\r\n        className: 'dmn-hitpolicy-setter',\r\n        template: template,\r\n        element: event.element,\r\n        comboBox: comboBox,\r\n        operatorComboBox: operatorComboBox,\r\n        type: 'hitPolicy',\r\n        offset: {\r\n          x: OFFSET_X,\r\n          y: OFFSET_Y\r\n        }\r\n      };\r\n    }\r\n\r\n  });\r\n\r\n  // whenever an type cell is opened, we have to position the template, apply the model value and\r\n  // potentially disable inputs\r\n  eventBus.on('complexCell.open', function(evt) {\r\n    var config = evt.config;\r\n\r\n    if (config.type === 'hitPolicy') {\r\n\r\n      // feed the values to the template and combobox\r\n      config.comboBox.setValue(self.getHitPolicy());\r\n      config.operatorComboBox.setValue(self.getAggregation());\r\n\r\n      var template = config.template;\r\n\r\n      // focus the combobox input field\r\n      template.querySelector('.dmn-combobox > input').focus();\r\n\r\n      // disable all input fields if editing is not allowed\r\n      if (!rules.allowed('hitPolicy.edit')) {\r\n        var inputs = template.querySelectorAll('input');\r\n        for (var i = 0; i < inputs.length; i++) {\r\n          inputs[i].setAttribute('disabled', 'true');\r\n        }\r\n        config.comboBox.disable();\r\n\r\n        // also set a disabled css class on the template\r\n        domClasses(template.parentNode).add('read-only');\r\n      }\r\n    }\r\n  }, this);\r\n\r\n\r\n  // whenever a datatype cell is closed, apply the changes to the underlying model\r\n  eventBus.on('complexCell.close', function(evt) {\r\n    if (evt.config.type === 'hitPolicy') {\r\n      eventBus.fire('hitPolicy.edit', {\r\n        table: self.table,\r\n        hitPolicy: evt.config.comboBox.getValue(),\r\n        aggregation: evt.config.comboBox.getValue() === 'COLLECT' ? evt.config.operatorComboBox.getValue() : undefined,\r\n        cell: self.getCell()\r\n      });\r\n\r\n      graphicsFactory.update('cell', self.getCell(), elementRegistry.getGraphics(self.getCell()));\r\n    }\r\n  });\r\n\r\n}\r\n\r\nHitPolicy.$inject = [\r\n  'eventBus', 'utilityColumn', 'ioLabel',\r\n  'graphicsFactory', 'elementRegistry', 'rules', 'translate'\r\n];\r\n\r\nHitPolicy.prototype.getCell = function() {\r\n  return this.hitPolicyCell;\r\n};\r\n\r\nHitPolicy.prototype.getHitPolicy = function() {\r\n  return (this.table && this.table.hitPolicy) || '';\r\n};\r\n\r\nHitPolicy.prototype.getAggregation = function() {\r\n  return (this.table && this.table.aggregation) || 'LIST';\r\n};\r\n\r\nmodule.exports = HitPolicy;\r\n","'use strict';\r\n\r\nfunction convertOperators(operator) {\r\n  switch (operator) {\r\n  case 'LIST': return '';\r\n  case 'SUM': return '+';\r\n  case 'MIN': return '<';\r\n  case 'MAX': return '>';\r\n  case 'COUNT': return '#';\r\n  }\r\n}\r\n\r\nfunction HitPolicyRenderer(\r\n    eventBus,\r\n    hitPolicy) {\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    if (event.data === hitPolicy.getCell()) {\r\n      var policy = hitPolicy.getHitPolicy(),\r\n          aggregation = hitPolicy.getAggregation();\r\n\r\n      event.gfx.childNodes[0].textContent = policy.charAt(0) + convertOperators(aggregation);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nHitPolicyRenderer.$inject = [\r\n  'eventBus',\r\n  'hitPolicy'\r\n];\r\n\r\nmodule.exports = HitPolicyRenderer;\r\n","module.exports = {\r\n  __init__: [ 'hitPolicy', 'hitPolicyRenderer' ],\r\n  __depends__: [\r\n    require(101),\r\n    require(307),\r\n    require(42)\r\n  ],\r\n  hitPolicy: [ 'type', require(36) ],\r\n  hitPolicyRenderer: [ 'type', require(37) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    forEach = require(136);\r\n\r\n// document wide unique overlay ids\r\nvar ids = new (require(108))('clause');\r\n\r\n/**\r\n * Adds a control to the table to add more columns\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction IoLabel(eventBus, sheet, elementRegistry, graphicsFactory, rules, translate) {\r\n\r\n  this.row = null;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(event) {\r\n\r\n    eventBus.fire('ioLabel.add', event);\r\n\r\n    this.row = sheet.addRow({\r\n      id: 'ioLabel',\r\n      isHead: true,\r\n      isLabelRow: true,\r\n      useTH: true\r\n    });\r\n\r\n    eventBus.fire('ioLabel.added', this.row);\r\n  }, this);\r\n\r\n  eventBus.on([ 'sheet.destroy', 'sheet.clear' ], function(event) {\r\n\r\n    eventBus.fire('ioLabel.destroy', this.row);\r\n\r\n    sheet.removeRow({\r\n      id: 'ioLabel'\r\n    });\r\n\r\n    eventBus.fire('ioLabel.destroyed', this.row);\r\n\r\n    this.row = null;\r\n  }, this);\r\n\r\n  function updateColspans(evt) {\r\n    var cells = elementRegistry.filter(function(element) {\r\n      return element._type === 'cell' && element.row === self.row;\r\n    });\r\n\r\n    var inputs = cells.filter(function(cell) {\r\n      return cell.column.businessObject && cell.column.businessObject.inputExpression;\r\n    });\r\n\r\n    forEach(inputs, function(input) {\r\n      if (!input.column.previous.businessObject) {\r\n        // first cell of the inputs array has the colspan attribute set\r\n        input.colspan = inputs.length;\r\n\r\n        var node;\r\n        if (rules.allowed('column.create')) {\r\n          node = domify(translate('Input')+' <a class=\"dmn-icon-plus\"></a>');\r\n          node.querySelector('a').addEventListener('mouseup', function() {\r\n            var col = input.column;\r\n            while (col.next && col.next.businessObject.$type === 'dmn:InputClause') {\r\n              col = col.next;\r\n            }\r\n\r\n            var newColumn = {\r\n              id: ids.next(),\r\n              previous: col,\r\n              name: '',\r\n              isInput: true\r\n            };\r\n\r\n            eventBus.fire('ioLabel.createColumn', {\r\n              newColumn: newColumn\r\n            });\r\n          });\r\n        } else {\r\n          node = domify(translate('Input'));\r\n        }\r\n\r\n        input.content = node;\r\n      } else {\r\n        input.colspan = 1;\r\n      }\r\n    });\r\n\r\n    var outputs = cells.filter(function(cell) {\r\n      return cell.column.businessObject && cell.column.businessObject.$instanceOf('dmn:OutputClause');\r\n    });\r\n\r\n    forEach(outputs, function(output) {\r\n      if (output.column.previous.businessObject.inputExpression) {\r\n        // first cell of the outputs array has the colspan attribute set\r\n        output.colspan = outputs.length;\r\n\r\n        var node;\r\n        if (rules.allowed('column.create')) {\r\n          node = domify(translate('Output')+' <a class=\"dmn-icon-plus\"></a>');\r\n          node.querySelector('a').addEventListener('mouseup', function() {\r\n            var col = output.column;\r\n            while (col.next && col.next.businessObject && col.next.businessObject.$type === 'dmn:OutputClause') {\r\n              col = col.next;\r\n            }\r\n\r\n            var newColumn = {\r\n              id: ids.next(),\r\n              previous: col,\r\n              name: '',\r\n              isInput: false\r\n            };\r\n\r\n            eventBus.fire('ioLabel.createColumn', {\r\n              newColumn: newColumn\r\n            });\r\n          });\r\n        } else {\r\n          node = domify(translate('Output'));\r\n        }\r\n\r\n        output.content = node;\r\n      } else {\r\n        output.colspan = 1;\r\n      }\r\n    });\r\n\r\n    if (cells.length > 0) {\r\n      graphicsFactory.update('row', cells[0].row, elementRegistry.getGraphics(cells[0].row.id));\r\n    }\r\n  }\r\n  eventBus.on([ 'cells.added', 'cells.removed' ], function(evt) {\r\n    if (evt._type === 'column') {\r\n      updateColspans();\r\n    }\r\n  });\r\n\r\n  eventBus.on([ 'column.move.applied' ], updateColspans);\r\n}\r\n\r\nIoLabel.$inject = [ 'eventBus', 'sheet', 'elementRegistry', 'graphicsFactory', 'rules', 'translate' ];\r\n\r\nmodule.exports = IoLabel;\r\n\r\nIoLabel.prototype.getRow = function() {\r\n  return this.row;\r\n};\r\n","'use strict';\r\n\r\nfunction IoLabelRenderer(\r\n    eventBus,\r\n    ioLabel) {\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    if (event.data.row === ioLabel.getRow() &&\r\n        event.data.content &&\r\n        !event.gfx.childNodes[0].firstChild) {\r\n      event.gfx.childNodes[0].appendChild(event.data.content);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nIoLabelRenderer.$inject = [\r\n  'eventBus',\r\n  'ioLabel'\r\n];\r\n\r\nmodule.exports = IoLabelRenderer;\r\n","'use strict';\r\n\r\nvar inherits = require(126);\r\n\r\nvar RuleProvider = require(94);\r\n\r\n/**\r\n * LineNumber specific modeling rule\r\n */\r\nfunction IoLabelRules(eventBus, ioLabel) {\r\n  RuleProvider.call(this, eventBus);\r\n\r\n  this._ioLabel = ioLabel;\r\n}\r\n\r\ninherits(IoLabelRules, RuleProvider);\r\n\r\nIoLabelRules.$inject = [ 'eventBus', 'ioLabel' ];\r\n\r\nmodule.exports = IoLabelRules;\r\n\r\nIoLabelRules.prototype.init = function() {\r\n  var self = this;\r\n  this.addRule('cell.edit', function(context) {\r\n    if (context.row === self._ioLabel.row) {\r\n      return false;\r\n    }\r\n  });\r\n\r\n};\r\n","module.exports = {\r\n  __init__: [ 'ioLabel', 'ioLabelRules', 'ioLabelRenderer' ],\r\n  __depends__: [\r\n    require(101)\r\n  ],\r\n  ioLabel: [ 'type', require(39) ],\r\n  ioLabelRules: [ 'type', require(41) ],\r\n  ioLabelRenderer: [ 'type', require(40) ]\r\n};\r\n","module.exports = \"<div class=/\"literal-expression-editor/\">/r/n  <textarea placeholder=/\"return obj.propertyName;/\"></textarea>/r/n/r/n  <div>/r/n    <div class=/\"literal-expression-field/\">/r/n      <div class=/\"dmn-combobox/\">/r/n        <label>Variable Name:</label>/r/n        <input class=/\"variable-name/\" placeholder=/\"varName/\">/r/n      </div>/r/n    </div>/r/n    <div class=/\"literal-expression-field variable-type/\">/r/n    </div>/r/n  </div>/r/n  <div>/r/n    <div class=/\"literal-expression-field expression-language/\">/r/n    </div>/r/n  </div>/r/n</div>/r/n\";\n","'use strict';\r\n\r\nvar domify = require(264);\r\nvar template = require(43);\r\n\r\nvar ComboBox = require(294);\r\n\r\nfunction LiteralExpressionEditor(eventBus, sheet, rules) {\r\n  this._eventBus = eventBus;\r\n  this._sheet = sheet;\r\n  this._rules = rules;\r\n\r\n  eventBus.on('import.render.start', function() {\r\n    // show table by default\r\n    var container = sheet.getContainer();\r\n    container.querySelector('table').style.display = '';\r\n\r\n    // remove literal expression editor if exists\r\n    var literalExpressionEditor = container.querySelector('.literal-expression-editor');\r\n    if (literalExpressionEditor) {\r\n      container.removeChild(literalExpressionEditor);\r\n    }\r\n  });\r\n\r\n}\r\n\r\nLiteralExpressionEditor.$inject = [ 'eventBus', 'sheet', 'rules' ];\r\n\r\nmodule.exports = LiteralExpressionEditor;\r\n\r\nLiteralExpressionEditor.prototype.show = function(decision) {\r\n\r\n  var eventBus = this._eventBus;\r\n\r\n  // get hide the table\r\n  var container = this._sheet.getContainer();\r\n  container.querySelector('table').style.display = 'none';\r\n\r\n  // create the custom editor\r\n  var editor = domify(template);\r\n\r\n  // set the literal expression to the textarea\r\n  editor.querySelector('textarea').value = decision.literalExpression.text || '';\r\n\r\n  // add variable with name and type information\r\n  var typeBox = new ComboBox({\r\n    label: 'Variable Type',\r\n    classNames: [ 'dmn-combobox', 'datatype' ],\r\n    options: [ 'string', 'boolean', 'integer', 'long', 'double', 'date' ],\r\n    dropdownClassNames: [ 'dmn-combobox-suggestions' ]\r\n  });\r\n  editor.querySelector('.variable-type').appendChild(typeBox.getNode());\r\n\r\n  if (decision.variable) {\r\n    editor.querySelector('.variable-name').value = decision.variable.name || '';\r\n    typeBox.setValue(decision.variable.typeRef || '');\r\n  }\r\n\r\n  //add expression language combobox\r\n  var languageBox = new ComboBox({\r\n    label: 'Expression Language',\r\n    classNames: [ 'dmn-combobox', 'expression-language' ],\r\n    options: [ 'javascript', 'groovy', 'python', 'jruby', 'juel', 'feel' ],\r\n    dropdownClassNames: [ 'dmn-combobox-suggestions' ]\r\n  });\r\n  editor.querySelector('.expression-language').appendChild(languageBox.getNode());\r\n  languageBox.setValue(decision.literalExpression.expressionLanguage || '');\r\n\r\n\r\n  var saveExpression = function(evt) {\r\n    eventBus.fire('literalExpression.edit', {\r\n      decision: decision,\r\n      text: editor.querySelector('textarea').value,\r\n      variableName: editor.querySelector('.variable-name').value,\r\n      variableType: typeBox.getValue(),\r\n      language: languageBox.getValue()\r\n    });\r\n  };\r\n\r\n\r\n  // if editing is not allowed, disable all input fields, otherwise, listen for changes\r\n  var canEdit = this._rules.allowed('literalExpression.edit');\r\n\r\n  var inputs = editor.querySelectorAll('input');\r\n  for (var i = 0; i < inputs.length; i++) {\r\n    if (canEdit) {\r\n      inputs[i].addEventListener('input', saveExpression);\r\n    } else {\r\n      inputs[i].setAttribute('disabled', 'true');\r\n    }\r\n  }\r\n\r\n  if (canEdit) {\r\n    editor.querySelector('textarea').addEventListener('input', saveExpression);\r\n    typeBox.addEventListener('valueChanged', saveExpression);\r\n    languageBox.addEventListener('valueChanged', saveExpression);\r\n  } else {\r\n    editor.querySelector('textarea').setAttribute('disabled', 'true');\r\n    typeBox.disable();\r\n    languageBox.disable();\r\n  }\r\n\r\n  container.appendChild(editor);\r\n\r\n};\r\n","module.exports = {\r\n  __init__: [ 'literalExpressionEditor' ],\r\n  literalExpressionEditor: [ 'type', require(44) ]\r\n};\r\n","module.exports = \"<div>/r/n  <div class=/\"links/\">/r/n    <div class=/\"toggle-type/\">/r/n      <label>{{ 'Use:' | translate }}</label>/r/n      <a class=/\"expression/\">{{ 'Expression' | translate }}</a>/r/n      //r/n      <a class=/\"script/\">{{ 'Script' | translate }}</a>/r/n    </div>/r/n    <a class=/\"dmn-icon-clear/\"></a>/r/n  </div>/r/n  <div class=/\"expression region/\">/r/n    <div class=/\"input-expression/\">/r/n       <label>{{ 'Expression:' | translate }}</label>/r/n      <input placeholder=/\"propertyName/\">/r/n    </div>/r/n    <div class=/\"input-expression/\">/r/n      <label>{{ 'Input Variable Name:' | translate }}</label>/r/n      <input placeholder=/\"cellInput/\">/r/n    </div>/r/n  </div>/r/n  <div class=/\"script region/\">/r/n    <textarea placeholder=/\"return obj.propertyName;/\"></textarea>/r/n    <div class=/\"input-expression/\">/r/n      <label>{{ 'Input Variable Name:' | translate }}</label>/r/n      <input placeholder=/\"cellInput/\">/r/n    </div>/r/n  </div>/r/n</div>/r/n\";\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    domClasses = require(261),\r\n    assign = require(250),\r\n    forEach = require(136);\r\n\r\nvar mappingTypeTemplate = require(46);\r\n\r\nvar ComboBox = require(294);\r\n\r\nvar PROP_NAME = '.expression .input-expression input[placeholder=\"propertyName\"]',\r\n    EXPR_IPT_VAR = '.expression .input-expression input[placeholder=\"cellInput\"]',\r\n    SCRPT_IPT_VAR = '.script .input-expression input[placeholder=\"cellInput\"]',\r\n    SCRPT_TEXT = '.script.region > textarea',\r\n    IPT_VARS = [ EXPR_IPT_VAR, SCRPT_IPT_VAR ];\r\n\r\nvar OFFSET_X = 1, //20\r\n    OFFSET_Y = -2; //194\r\n\r\n\r\nfunction forEachSelector(node, arr, fn) {\r\n  forEach(arr, function(elem) {\r\n    fn(node.querySelector(elem));\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Adds a control to the table to define the input- and output-mappings for clauses\r\n */\r\nfunction MappingsRow(\r\n  eventBus, sheet, elementRegistry,\r\n  graphicsFactory, complexCell,\r\n  translate, parseTemplate, config) {\r\n\r\n  this.row = null;\r\n\r\n  // add row when the sheet is initialized\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(event) {\r\n\r\n    if (this.row) {\r\n      return;\r\n    }\r\n\r\n    eventBus.fire('mappingsRow.add', event);\r\n\r\n    this.row = sheet.addRow({\r\n      id: 'mappingsRow',\r\n      isHead: true,\r\n      isMappingsRow: true\r\n    });\r\n\r\n    eventBus.fire('mappingsRow.added', this.row);\r\n\r\n    graphicsFactory.update('row', this.row, elementRegistry.getGraphics(this.row.id));\r\n  }, this);\r\n\r\n  // remove the row when the sheet is destroyed\r\n  eventBus.on([ 'sheet.clear', 'sheet.destroy' ], function(event) {\r\n\r\n    eventBus.fire('mappingsRow.destroy', this.row);\r\n\r\n    sheet.removeRow({\r\n      id: 'mappingsRow'\r\n    });\r\n\r\n    eventBus.fire('mappingsRow.destroyed', this.row);\r\n\r\n    this.row = null;\r\n  }, this);\r\n\r\n  /**\r\n   * Helper function to position and resize the template. This is needed for the switch between\r\n   * the large format script editor and the small expression editor\r\n   *\r\n   * @param {DOMNode}   node        template root node\r\n   * @param {TableCell} element     cell for which the template is opened\r\n   * @param {boolean}   large       indicating whether to switch to large mode\r\n   */\r\n  var positionTemplate = function(node, element, large) {\r\n    var table = sheet.getRootElement(),\r\n        gfx = elementRegistry.getGraphics(element),\r\n        tableDimensions, gfxDimensions;\r\n\r\n    if (large) {\r\n      tableDimensions = table.getBoundingClientRect();\r\n\r\n      assign(node.style, {\r\n        top: tableDimensions.top + 'px',\r\n        left: tableDimensions.left + 'px',\r\n        width: table.clientWidth + 'px'\r\n      });\r\n\r\n    } else {\r\n      gfxDimensions = gfx.getBoundingClientRect();\r\n\r\n      assign(node.style, {\r\n        top: (gfxDimensions.top - node.offsetHeight + OFFSET_Y)  + 'px',\r\n        left: (gfxDimensions.left + OFFSET_X) + 'px',\r\n        width: 'auto',\r\n        height: 'auto'\r\n      });\r\n    }\r\n  };\r\n\r\n  // when an input cell on the mappings row is added, setup the complex cell\r\n  eventBus.on('cell.added', function(evt) {\r\n    var element = evt.element,\r\n        column = element.column,\r\n        content = element.content,\r\n        propertyName, parent, inputVariable;\r\n\r\n    if (element.row.id === 'mappingsRow' &&\r\n       column.businessObject &&\r\n       column.businessObject.inputExpression) {\r\n\r\n      // cell content is the input expression of the clause\r\n      content = element.content = column.businessObject.inputExpression;\r\n\r\n      var template = domify(parseTemplate(mappingTypeTemplate));\r\n\r\n      // initializing the comboBox\r\n      var comboBox = new ComboBox({\r\n        label: translate('Language'),\r\n        classNames: [ 'dmn-combobox', 'language' ],\r\n        options: [ 'javascript', 'groovy', 'python', 'jruby', 'juel', 'feel' ],\r\n        dropdownClassNames: [ 'dmn-combobox-suggestions' ]\r\n      });\r\n\r\n      // When the inputExpression has a defined expressionLanguage, we assume that it is a script\r\n      if (typeof content.expressionLanguage !== 'undefined') {\r\n        template.querySelector(SCRPT_TEXT).value = content.text || '';\r\n        comboBox.setValue(content.expressionLanguage);\r\n\r\n      } else {\r\n        propertyName = template.querySelector(PROP_NAME);\r\n\r\n        propertyName.value = content.text || '';\r\n      }\r\n\r\n      parent = content.$parent;\r\n\r\n      if (parent) {\r\n        forEachSelector(template, IPT_VARS, function(elem) {\r\n          elem.value = parent.inputVariable || '';\r\n        });\r\n      }\r\n\r\n      // --- setup event listeners ---\r\n\r\n      // click on close button closes the template\r\n      template.querySelector('.dmn-icon-clear').addEventListener('click', function() {\r\n        complexCell.close();\r\n      });\r\n\r\n      // click on Expression link switches to expression mode\r\n      template.querySelector('.expression').addEventListener('click', function() {\r\n        inputVariable = template.querySelector(SCRPT_IPT_VAR).value;\r\n\r\n        domClasses(template.parentNode).remove('use-script');\r\n        positionTemplate(template.parentNode, evt.element, false);\r\n\r\n        // focus the script expression input field\r\n        template.querySelector(PROP_NAME).focus();\r\n\r\n        // synchronize inputVariable\r\n        template.querySelector(EXPR_IPT_VAR).value = inputVariable;\r\n\r\n        evt.element.complex.mappingType = 'expression';\r\n      });\r\n\r\n      // click on Script link switches to script mode\r\n      template.querySelector('.script').addEventListener('click', function() {\r\n        inputVariable = template.querySelector(EXPR_IPT_VAR).value;\r\n\r\n        domClasses(template.parentNode).add('use-script');\r\n        positionTemplate(template.parentNode, evt.element, true);\r\n\r\n        // focus the script area\r\n        template.querySelector(SCRPT_TEXT).focus();\r\n\r\n        // synchronize inputVariable\r\n        template.querySelector(SCRPT_IPT_VAR).value = inputVariable;\r\n\r\n        evt.element.complex.mappingType = 'script';\r\n      });\r\n\r\n      // pressing enter in the input field closes the dialog\r\n      forEachSelector(template, IPT_VARS.concat(PROP_NAME), function(elem) {\r\n        elem.addEventListener('keydown', function(evt) {\r\n          if (evt.keyCode === 13) {\r\n            complexCell.close();\r\n          }\r\n        });\r\n      });\r\n\r\n      // add comboBox to the template\r\n      template.querySelector('.script.region').insertBefore(\r\n        comboBox.getNode(),\r\n        template.querySelector('textarea')\r\n      );\r\n\r\n      // set the complex property to initialize complex-cell behavior\r\n      evt.element.complex = {\r\n        className: 'dmn-clauseexpression-setter',\r\n        template: template,\r\n        element: evt.element,\r\n        mappingType: typeof content.expressionLanguage !== 'undefined' ? 'script' : 'expression',\r\n        comboBox: comboBox,\r\n        type: 'mapping'\r\n      };\r\n\r\n      graphicsFactory.update('cell', evt.element, elementRegistry.getGraphics(evt.element));\r\n\r\n    } else if (evt.element.row.id === 'mappingsRow' && column.businessObject) {\r\n\r\n      // setup output mappings as simple cells with inline editing\r\n      evt.element.content = column.businessObject;\r\n      graphicsFactory.update('cell', evt.element, elementRegistry.getGraphics(evt.element));\r\n    }\r\n\r\n  });\r\n\r\n  // whenever an input mapping cell is opened, set the required mode (script vs. Expression)\r\n  // and position the template accordingly\r\n  eventBus.on('complexCell.open', function(evt) {\r\n    var cfg = evt.config,\r\n        container = evt.container,\r\n        content = cfg.element.content,\r\n        template, parent;\r\n\r\n    if (cfg.type === 'mapping') {\r\n      template = cfg.template;\r\n\r\n      if (typeof content.expressionLanguage !== 'undefined') {\r\n        cfg.mappingType = 'script';\r\n\r\n        domClasses(container).add('use-script');\r\n        positionTemplate(container, cfg.element, true);\r\n\r\n        container.querySelector(SCRPT_TEXT).focus();\r\n\r\n      } else {\r\n        cfg.mappingType = 'expression';\r\n\r\n        positionTemplate(container, cfg.element);\r\n\r\n        container.querySelector(PROP_NAME).focus();\r\n      }\r\n\r\n      parent = content.$parent;\r\n\r\n      if (parent) {\r\n        forEachSelector(template, IPT_VARS, function(elem) {\r\n          elem.value = parent.inputVariable || '';\r\n        });\r\n      }\r\n\r\n      // disable input fields if inputMapping editing is not allowed\r\n      if (!config.editingAllowed) {\r\n        template.querySelector(PROP_NAME).setAttribute('disabled', 'true');\r\n\r\n        forEachSelector(template, IPT_VARS, function(elem) {\r\n          elem.setAttribute('disabled', 'true');\r\n        });\r\n\r\n        template.querySelector(SCRPT_TEXT).setAttribute('disabled', 'true');\r\n\r\n        cfg.comboBox.disable();\r\n\r\n        // also set a disabled css class on the template\r\n        domClasses(template.parentNode).add('read-only');\r\n      }\r\n    }\r\n  });\r\n\r\n  // whenever an input mapping cell is closed, apply the changes to the underlying model\r\n  eventBus.on('complexCell.close', function(evt) {\r\n    var cfg = evt.config,\r\n        template, element, expression, language, inputVariable;\r\n\r\n    if (cfg.type === 'mapping') {\r\n      template = cfg.template;\r\n      element = cfg.element;\r\n\r\n      if (cfg.mappingType === 'expression') {\r\n        expression = template.querySelector(PROP_NAME).value;\r\n\r\n        inputVariable = template.querySelector(EXPR_IPT_VAR).value;\r\n\r\n      } else if (cfg.mappingType === 'script') {\r\n        language = cfg.comboBox.getValue();\r\n\r\n        inputVariable = template.querySelector(SCRPT_IPT_VAR).value;\r\n\r\n        expression = template.querySelector(SCRPT_TEXT).value;\r\n      }\r\n\r\n      eventBus.fire('mappingsRow.editInputMapping', {\r\n        element: element,\r\n        attrs: {\r\n          expression: expression,\r\n          language: language,\r\n          inputVariable: inputVariable\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nMappingsRow.$inject = [\r\n  'eventBus',\r\n  'sheet',\r\n  'elementRegistry',\r\n  'graphicsFactory',\r\n  'complexCell',\r\n  'translate',\r\n  'parseTemplate',\r\n  'config'\r\n];\r\n\r\nmodule.exports = MappingsRow;\r\n\r\nMappingsRow.prototype.getRow = function() {\r\n  return this.row;\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n\r\nfunction MappingsRowRenderer(\r\n    eventBus,\r\n    mappingsRow) {\r\n\r\n  // row has class 'mappings'\r\n  eventBus.on('row.render', function(event) {\r\n    if (event.data === mappingsRow.getRow()) {\r\n      domClasses(event.gfx).add('mappings');\r\n    }\r\n  });\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    // input cell contains the expression or the expression language for scripts\r\n    if (event.data.row === mappingsRow.getRow() && event.data.content &&\r\n        event.data.column.businessObject.inputExpression) {\r\n      if (event.data.content.expressionLanguage) {\r\n        event.gfx.childNodes[0].textContent = event.data.content.expressionLanguage || '';\r\n      } else {\r\n        event.gfx.childNodes[0].textContent = event.data.content.text || '';\r\n      }\r\n    // output cell contains variable name\r\n    } else if (event.data.row === mappingsRow.getRow() && event.data.content) {\r\n      event.gfx.childNodes[0].textContent = event.data.content.name || '';\r\n    }\r\n  });\r\n\r\n}\r\n\r\nMappingsRowRenderer.$inject = [\r\n  'eventBus',\r\n  'mappingsRow'\r\n];\r\n\r\nmodule.exports = MappingsRowRenderer;\r\n","module.exports = {\r\n  __depends__: [\r\n    require(101),\r\n    require(14),\r\n    require(296)\r\n  ],\r\n  __init__: [ 'mappingsRow', 'mappingsRowRenderer' ],\r\n  mappingsRow: [ 'type', require(47) ],\r\n  mappingsRowRenderer: [ 'type', require(48) ]\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261),\r\n    domify = require(264);\r\n\r\nfunction isType(bo, type) {\r\n  return bo.inputExpression &&\r\n         bo.inputExpression.typeRef === type ||\r\n         bo.typeRef === type;\r\n}\r\n\r\nfunction SimpleMode(eventBus, sheet, config, graphicsFactory, translate) {\r\n\r\n  this._sheet = sheet;\r\n  this._eventBus = eventBus;\r\n  this._graphicsFactory = graphicsFactory;\r\n  this._translate = translate;\r\n\r\n  this.simple = false;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('controls.init', function(event) {\r\n    this._node = this.addControlButton(event);\r\n  }, this);\r\n\r\n  eventBus.on('import.done', function(event) {\r\n    if (event.error) {\r\n      return;\r\n    }\r\n\r\n    if (!config.advancedMode) {\r\n      this.activate(true);\r\n    }\r\n  }, this);\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    var data = event.data,\r\n        gfx = event.gfx,\r\n        row = data.row,\r\n        businessObject = data.column.businessObject;\r\n\r\n    var checkbox = gfx.querySelector('.simple-mode-checkbox'),\r\n        expressionHint = gfx.querySelector('.expression-hint'),\r\n        hint,\r\n        content,\r\n        newCheckbox;\r\n\r\n    data.preventAutoUpdate = false;\r\n\r\n    if (expressionHint) {\r\n      gfx.childNodes[0].style.display = '';\r\n      expressionHint.parentNode.removeChild(expressionHint);\r\n    }\r\n\r\n    if (!this.simple && checkbox) {\r\n      gfx.childNodes[0].style.display = '';\r\n      checkbox.parentNode.removeChild(checkbox);\r\n      data.preventAutoUpdate = false;\r\n    }\r\n\r\n    if (!businessObject || !this.simple) {\r\n      return;\r\n    }\r\n\r\n    if (row.type === 'dmn:DecisionRule' && !row.isHead && businessObject) {\r\n      if (isType(businessObject, 'boolean')) {\r\n\r\n        if (this.simple) {\r\n          data.preventAutoUpdate = true;\r\n        }\r\n\r\n        content = data.content;\r\n\r\n        if (this.simple && content && content.text !== '' && content.text !== 'false' && content.text !== 'true') {\r\n          // in case of a non boolean expression, hint that it cannot be edited\r\n          gfx.childNodes[0].style.display = 'none';\r\n\r\n          hint = self.getExpressionNode(data.content);\r\n          data.preventAutoUpdate = true;\r\n\r\n          gfx.appendChild(hint);\r\n\r\n        } else if (this.simple && !checkbox) {\r\n          // create a dropdown for the booleans\r\n          gfx.childNodes[0].style.display = 'none';\r\n          newCheckbox = domify([\r\n            '<select class=\"simple-mode-checkbox\">',\r\n            '<option value=\"true\">' + translate('Yes') + '</option>',\r\n            '<option value=\"false\">' + translate('No') + '</option>',\r\n            '<option value=\"\">-</option>',\r\n            '</select>'\r\n          ].join(''));\r\n\r\n          // we set it readonly. An optional modeling module can make it editable\r\n          newCheckbox.setAttribute('disabled', 'disabled');\r\n\r\n          if (content && content.text) {\r\n            newCheckbox.selectedIndex = ['true', 'false', ''].indexOf(content.text);\r\n          } else {\r\n            newCheckbox.selectedIndex = 2;\r\n          }\r\n\r\n          eventBus.fire('simpleCheckbox.render', newCheckbox, data);\r\n\r\n          gfx.appendChild(newCheckbox);\r\n\r\n        } else if (this.simple && checkbox) {\r\n\r\n          if (content && content.text) {\r\n            checkbox.selectedIndex = ['true', 'false', ''].indexOf(content.text);\r\n          } else {\r\n            checkbox.selectedIndex = 2;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (checkbox) {\r\n        // IF NOT (\r\n        // type is boolean\r\n        // ) THEN { remove checkbox }\r\n        if (!(\r\n          (businessObject.inputExpression &&\r\n           businessObject.inputExpression.typeRef === 'boolean' ||\r\n           businessObject.typeRef === 'boolean')\r\n        )) {\r\n          checkbox.parentNode.removeChild(checkbox);\r\n          gfx.childNodes[0].style.display = '';\r\n        }\r\n      }\r\n    }\r\n  }, this);\r\n}\r\n\r\nSimpleMode.$inject = [ 'eventBus', 'sheet', 'config', 'graphicsFactory', 'translate' ];\r\n\r\nmodule.exports = SimpleMode;\r\n\r\nSimpleMode.prototype.addControlButton = function(event) {\r\n  var sheet = this._sheet,\r\n      translate = this._translate,\r\n      controls = event.controls;\r\n\r\n  var self = this;\r\n\r\n  return controls.addControl(translate('Exit Advanced Mode'), function() {\r\n\r\n    if (!domClasses(sheet.getContainer().parentNode).contains('simple-mode')) {\r\n      self.activate();\r\n    } else {\r\n      self.deactivate();\r\n    }\r\n  });\r\n};\r\n\r\nSimpleMode.prototype.getExpressionNode = function(businessObject) {\r\n  var node;\r\n\r\n  if (businessObject.description) {\r\n    node = domify('<span class=\"expression-hint\"><b>[expression]</b> (<i></i>)</span>');\r\n\r\n    node.querySelector('i').textContent = businessObject.description;\r\n\r\n  } else {\r\n    node = domify('<span class=\"expression-hint\"><b>[expression]</b></span>');\r\n  }\r\n  return node;\r\n};\r\n\r\nSimpleMode.prototype.activate = function(isInit) {\r\n  if (!this._node) {\r\n    return;\r\n  }\r\n\r\n  domClasses(this._sheet.getContainer().parentNode).add('simple-mode');\r\n\r\n  this._node.textContent = this._translate('Enter Advanced Mode');\r\n\r\n  this.simple = true;\r\n\r\n  this._graphicsFactory.redraw();\r\n\r\n  // fire a different event from initializing and activating\r\n  if (isInit) {\r\n    this._eventBus.fire('simpleMode.initialized');\r\n  } else {\r\n    this._eventBus.fire('simpleMode.activated');\r\n  }\r\n};\r\n\r\nSimpleMode.prototype.deactivate = function() {\r\n  if (!this._node) {\r\n    return;\r\n  }\r\n\r\n  domClasses(this._sheet.getContainer().parentNode).remove('simple-mode');\r\n\r\n  this._node.textContent = this._translate('Exit Advanced Mode');\r\n\r\n  this.simple = false;\r\n\r\n  this._graphicsFactory.redraw();\r\n\r\n  this._eventBus.fire('simpleMode.deactivated');\r\n};\r\n\r\nSimpleMode.prototype.toggle = function() {\r\n  if (this.simple) {\r\n    this.deactivate();\r\n  } else {\r\n    this.activate();\r\n  }\r\n};\r\n\r\nSimpleMode.prototype.isActive = function() {\r\n  return this.simple;\r\n};\r\n\r\nSimpleMode.prototype.hasComplexContent = function(context) {\r\n  var businessObject = context.column.businessObject,\r\n      textContent;\r\n\r\n  if (!businessObject || !context.content || !context.content.text) {\r\n    return false;\r\n  }\r\n\r\n  textContent = context.content.text;\r\n\r\n  // boolean\r\n  if (isType(businessObject, 'boolean')) {\r\n\r\n    return [ 'true', 'false' ].indexOf(textContent) === -1;\r\n  }\r\n\r\n  // string\r\n  if (isType(businessObject, 'string')) {\r\n\r\n    return !this.isString(textContent);\r\n  }\r\n};\r\n\r\nSimpleMode.prototype.isString = function(textContent) {\r\n  var match = textContent.match(/\"/g),\r\n      firstCondition, secondCondition;\r\n\r\n  if (textContent.length === 0) {\r\n    return true;\r\n  }\r\n\r\n  // check if there are is a even number of quotes\r\n  firstCondition = (match && match.length % 2 === 0);\r\n\r\n  // exit early if the number of quotes is odd\r\n  if (!firstCondition) {\r\n    return false;\r\n  }\r\n\r\n  // being the number of quotes even, make sure there aren't multiple strings\r\n  secondCondition = textContent.match(/\".{0,1},.{0,1}\"/);\r\n\r\n  return firstCondition && !secondCondition;\r\n};\r\n","module.exports = {\r\n  __init__: [ 'simpleMode' ],\r\n  __depends__: [\r\n    require(101)\r\n  ],\r\n  simpleMode: [ 'type', require(50) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    utils  = require(53);\r\n\r\nvar isStringCell = utils.isStringCell,\r\n    parseString  = utils.parseString;\r\n\r\nfunction StringView(eventBus, simpleMode) {\r\n  this._eventBus = eventBus;\r\n  this._simpleMode = simpleMode;\r\n\r\n  this._eventBus.on('cell.render', function(evt) {\r\n    // remove potential datafield\r\n    stringGfx = evt.gfx.querySelector('.string-content');\r\n    if (stringGfx) {\r\n      stringGfx.parentNode.removeChild(stringGfx);\r\n    }\r\n    if (evt.gfx.childNodes.length === 1) {\r\n        // make sure the contenteditable field is visible\r\n      evt.gfx.firstChild.style.display = 'inline';\r\n      evt.data.preventAutoUpdate = false;\r\n    }\r\n\r\n    if (isStringCell(evt.data)) {\r\n      if (this._simpleMode.isActive()) {\r\n        // make sure the contendeditable field is hidden\r\n        evt.gfx.firstChild.style.display = 'none';\r\n        evt.data.preventAutoUpdate = true;\r\n\r\n        // check for the datafield\r\n        var stringGfx = evt.gfx.querySelector('.string-content');\r\n        if (!stringGfx) {\r\n          stringGfx = domify('<span class=\"string-content\">');\r\n          evt.gfx.appendChild(stringGfx);\r\n        }\r\n        this.renderString(evt.data.content, stringGfx);\r\n      } else {\r\n        // make sure the contenteditable field is visible\r\n        evt.gfx.firstChild.style.display = '';\r\n        evt.data.preventAutoUpdate = false;\r\n\r\n        // remove potential datafield\r\n        stringGfx = evt.gfx.querySelector('.string-content');\r\n        if (stringGfx) {\r\n          stringGfx.parentNode.removeChild(stringGfx);\r\n        }\r\n      }\r\n    } else {\r\n      // remove potential datafield\r\n      stringGfx = evt.gfx.querySelector('.string-content');\r\n      if (stringGfx) {\r\n        stringGfx.parentNode.removeChild(stringGfx);\r\n      }\r\n\r\n      // if only the inline edit field is remaining, display it\r\n      if (evt.gfx.childNodes.length === 1) {\r\n        evt.gfx.firstChild.style.display = '';\r\n      }\r\n    }\r\n  }, this);\r\n}\r\n\r\nStringView.prototype.renderString = function(data, gfx) {\r\n  if (data.text) {\r\n    var parsed = parseString(data.text);\r\n    if (!parsed) {\r\n      if (data.description) {\r\n        gfx.innerHTML = '<span class=\"expression-hint\"><b>[expression]</b> (<i></i>)</span>';\r\n        gfx.querySelector('i').textContent = data.description;\r\n      } else {\r\n        gfx.innerHTML = '<span class=\"expression-hint\"><b>[expression]</b></span>';\r\n      }\r\n    } else {\r\n      gfx.textContent = data.text;\r\n    }\r\n  } else {\r\n    gfx.innerHTML = '<span style=\"display: inline-block; width: 100%; color: #777777; text-align: center;\">-</span>';\r\n  }\r\n};\r\n\r\nStringView.$inject = ['eventBus', 'simpleMode'];\r\n\r\nmodule.exports = StringView;\r\n","'use strict';\r\n\r\nvar hasStringType = function(column) {\r\n  return column &&\r\n         (column.inputExpression &&\r\n         column.inputExpression.typeRef === 'string' ||\r\n         column.typeRef === 'string');\r\n};\r\nvar isBodyRow = function(row) {\r\n  return !row.isHead && !row.isFoot;\r\n};\r\n\r\nvar hasTextContent = function(el) {\r\n  return el.content && typeof el.content.text !== 'undefined';\r\n};\r\n\r\nmodule.exports = {\r\n  isStringCell: function(el) {\r\n    return el._type === 'cell' &&\r\n      hasStringType(el.column.businessObject) &&\r\n      hasTextContent(el) &&\r\n      isBodyRow(el.row);\r\n  },\r\n  parseString: function(string) {\r\n    // three cases: empty, disjunction, and negated dijunction\r\n\r\n    // try empty\r\n    if (string.trim() === '') {\r\n      return {\r\n        type: 'disjunction',\r\n        values: []\r\n      };\r\n    }\r\n\r\n    // try disjunction\r\n    var values = string.split(',');\r\n    var out = {\r\n      type: 'disjunction',\r\n      values: []\r\n    };\r\n    var openString = '';\r\n    values.forEach(function(value) {\r\n      openString += value;\r\n      if (/^\"[^\"]*\"$/.test(openString.trim())) {\r\n        out.values.push(openString.trim().slice(1,-1));\r\n        openString = '';\r\n      } else {\r\n        openString += ',';\r\n      }\r\n    });\r\n    if (!openString) {\r\n      return out;\r\n    }\r\n\r\n    // try negation\r\n    out.type = 'negation';\r\n    out.values = [];\r\n    openString = '';\r\n    var info = string.match(/^/s*not/((.*)/)/s*$/);\r\n    if (info) {\r\n      values = info[1].split(',');\r\n      values.forEach(function(value) {\r\n        openString += value;\r\n        if (/^\"[^\"]*\"$/.test(openString.trim())) {\r\n          out.values.push(openString.trim().slice(1,-1));\r\n          openString = '';\r\n        } else {\r\n          openString += ',';\r\n        }\r\n      });\r\n      if (!openString) {\r\n        return out;\r\n      }\r\n    }\r\n  },\r\n  parseAllowedValues: function(el) {\r\n    var bo = el.column.businessObject;\r\n    var values = bo && (bo.inputValues || bo.outputValues);\r\n    if (values && values.text) {\r\n      values = values.text.split(',');\r\n      return values.map(function(value) {\r\n        if (value.charAt(0) === '\"' && value.charAt(value.length - 1) === '\"') {\r\n          return value.slice(1,-1);\r\n        } else {\r\n          return value;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'stringView' ],\r\n  stringView: [ 'type', require(52) ]\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(250);\r\n\r\nvar domify = require(264),\r\n    domClasses = require(261),\r\n    ComboBox = require(294);\r\n\r\nvar typeTemplate = require(57);\r\n\r\nvar OFFSET_X = -4,\r\n    OFFSET_Y = -17;\r\n\r\n/**\r\n * Adds a control to the table to define the datatypes for clauses\r\n */\r\nfunction TypeRow(\r\n  eventBus, sheet, elementRegistry,\r\n  graphicsFactory, complexCell, rules,\r\n  simpleMode, translate, parseTemplate) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._graphicsFactory = graphicsFactory;\r\n\r\n  this.row = null;\r\n\r\n  var self = this;\r\n\r\n  // add row when the sheet is initialized\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(event) {\r\n\r\n    eventBus.fire('typeRow.add', event);\r\n\r\n    this.row = sheet.addRow({\r\n      id: 'typeRow',\r\n      isHead: true,\r\n      isTypeRow: true\r\n    });\r\n\r\n    eventBus.fire('typeRow.added', this.row);\r\n\r\n    graphicsFactory.update('row', this.row, elementRegistry.getGraphics(this.row.id));\r\n  }, this);\r\n\r\n  // remove the row when the sheet is destroyed\r\n  eventBus.on([ 'sheet.clear', 'sheet.destroy' ], function(event) {\r\n\r\n    eventBus.fire('typeRow.destroy', this.row);\r\n\r\n    sheet.removeRow({\r\n      id: 'typeRow'\r\n    });\r\n\r\n    eventBus.fire('typeRow.destroyed', this.row);\r\n\r\n    this.row = null;\r\n  }, this);\r\n\r\n  // when an input cell on the mappings row is added, setup the complex cell\r\n  eventBus.on('cell.added', function(evt) {\r\n    if (evt.element.row.id === 'typeRow' &&\r\n       evt.element.column.businessObject) {\r\n\r\n      evt.element.content = evt.element.column.businessObject;\r\n\r\n      var template = domify(parseTemplate(typeTemplate));\r\n\r\n      var isOutput = evt.element.column.type === 'dmn:OutputClause';\r\n      if (isOutput) {\r\n        template.querySelector('.allowed-values label').textContent = translate('Output Values:');\r\n      }\r\n\r\n      // initializing the comboBox\r\n      var comboBox = new ComboBox({\r\n        label: translate('Type'),\r\n        classNames: [ 'dmn-combobox', 'datatype' ],\r\n        options: [ 'string', 'boolean', 'integer', 'long', 'double', 'date' ],\r\n        dropdownClassNames: [ 'dmn-combobox-suggestions' ]\r\n      });\r\n\r\n      comboBox.addEventListener('valueChanged', function(valueEvent) {\r\n        if (valueEvent.oldValue !== valueEvent.newValue) {\r\n          eventBus.fire('typeRow.editDataType', {\r\n            element: evt.element,\r\n            dataType: valueEvent.newValue\r\n          });\r\n\r\n          self.updateAllowedValues(template, evt.element);\r\n\r\n          // force redraw of potential dropdowns by toggling simple mode twice\r\n          simpleMode.toggle();\r\n          simpleMode.toggle();\r\n        }\r\n      });\r\n\r\n      // add comboBox to the template\r\n      template.insertBefore(\r\n        comboBox.getNode(),\r\n        template.firstChild\r\n      );\r\n\r\n      template.querySelector('.allowed-values input').addEventListener('keydown', function(keyboardEvt) {\r\n        if (keyboardEvt.keyCode === 13) {\r\n          self.handleValuesFromInput(evt.element, template);\r\n        }\r\n      });\r\n\r\n      self.updateAllowedValues(template, evt.element);\r\n\r\n      // set the complex property to initialize complex-cell behavior\r\n      evt.element.complex = {\r\n        className: 'dmn-clausevalues-setter',\r\n        template: template,\r\n        element: evt.element,\r\n        comboBox: comboBox,\r\n        type: 'type',\r\n        offset: {\r\n          x: 0,\r\n          y: OFFSET_Y\r\n        }\r\n      };\r\n\r\n      graphicsFactory.update('cell', evt.element, elementRegistry.getGraphics(evt.element));\r\n    }\r\n  });\r\n\r\n  eventBus.on('complexCell.close', function(evt) {\r\n    var config = evt.config,\r\n        template;\r\n\r\n    // only if the closed complexCell is a type cell\r\n    if (config.type === 'type') {\r\n      template = config.template;\r\n\r\n      // only if it has string type and content in the input field\r\n      if (config.comboBox.getValue() === 'string' && template.querySelector('.allowed-values input').value.trim() !== '') {\r\n        self.handleValuesFromInput(config.element, template);\r\n      }\r\n\r\n    }\r\n  });\r\n\r\n\r\n  // whenever an type cell is opened, we have to position the template, because the x offset changes\r\n  // over time, when columns are added and deleted\r\n  eventBus.on('complexCell.open', function(evt) {\r\n    var config = evt.config,\r\n        template, gfx, content;\r\n\r\n    if (config.type === 'type') {\r\n      gfx = elementRegistry.getGraphics(config.element);\r\n      // feed the values to the template and combobox\r\n      content = config.element.content;\r\n\r\n      if (content.inputExpression) {\r\n        config.comboBox.setValue(content.inputExpression.typeRef);\r\n      } else {\r\n        config.comboBox.setValue(content.typeRef);\r\n      }\r\n\r\n      template = config.template;\r\n\r\n      assign(template.parentNode.style, {\r\n        left: (template.parentNode.offsetLeft + gfx.offsetWidth + OFFSET_X) + 'px'\r\n      });\r\n\r\n      // disable all input fields if editing is not allowed\r\n      if (!rules.allowed('dataType.edit')) {\r\n        config.comboBox.disable();\r\n\r\n        // also set a disabled css class on the template\r\n        domClasses(template.parentNode).add('read-only');\r\n      }\r\n    }\r\n  });\r\n\r\n}\r\n\r\nTypeRow.prototype.handleValuesFromInput = function(element, template) {\r\n  var inputNode = template.querySelector('.allowed-values input');\r\n\r\n  var values = inputNode.value.split(',');\r\n  var self = this;\r\n  values.forEach(function(value) {\r\n    self.addAllowedValue(element, value.trim());\r\n  });\r\n  this.updateAllowedValues(template, element);\r\n  inputNode.value = '';\r\n};\r\n\r\nTypeRow.prototype.addAllowedValue = function(businessObject, newValue) {\r\n  this._eventBus.fire('typeRow.addAllowedValue', {\r\n    element: businessObject,\r\n    value: newValue\r\n  });\r\n};\r\n\r\nTypeRow.prototype.removeAllowedValue = function(businessObject, value) {\r\n  this._eventBus.fire('typeRow.removeAllowedValue', {\r\n    element: businessObject,\r\n    value: value\r\n  });\r\n};\r\n\r\nTypeRow.prototype.updateAllowedValues = function(template, businessObject) {\r\n  var self = this;\r\n\r\n  var type = businessObject.content.inputExpression && businessObject.content.inputExpression.typeRef ||\r\n             businessObject.content.typeRef;\r\n\r\n  if (type === 'string') {\r\n    template.querySelector('.allowed-values').style.display = 'block';\r\n\r\n    // clear the list of current allowed values\r\n    var list = template.querySelector('.allowed-values ul');\r\n    list.innerHTML = '';\r\n\r\n    // add a list of allowed values\r\n    if (businessObject.content.inputValues && businessObject.content.inputValues.text ||\r\n       businessObject.content.outputValues && businessObject.content.outputValues.text) {\r\n\r\n      var values;\r\n      if (businessObject.content.inputValues) {\r\n        values = businessObject.content.inputValues.text.split(',');\r\n      } else {\r\n        values = businessObject.content.outputValues.text.split(',');\r\n      }\r\n\r\n      values.forEach(function(value) {\r\n        var element = domify('<li><span class=\"value-text\">'+value.substr(1, value.length - 2)+'</span><button class=\"dmn-icon-clear\"></button></li>');\r\n        element.querySelector('button').addEventListener('click', function() {\r\n          self.removeAllowedValue(businessObject, value);\r\n          self.updateAllowedValues(template, businessObject);\r\n        });\r\n        list.appendChild(element);\r\n      });\r\n    }\r\n  } else {\r\n    template.querySelector('.allowed-values').style.display = 'none';\r\n  }\r\n\r\n  this._eventBus.fire('typeRow.editAllowedValues', {\r\n    element: businessObject,\r\n    values: values\r\n  });\r\n\r\n  this._graphicsFactory.redraw();\r\n};\r\n\r\nTypeRow.$inject = [\r\n  'eventBus',\r\n  'sheet',\r\n  'elementRegistry',\r\n  'graphicsFactory',\r\n  'complexCell',\r\n  'rules',\r\n  'simpleMode',\r\n  'translate',\r\n  'parseTemplate'\r\n];\r\n\r\nmodule.exports = TypeRow;\r\n\r\nTypeRow.prototype.getRow = function() {\r\n  return this.row;\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n\r\nfunction TypeRowRenderer(\r\n    eventBus,\r\n    typeRow) {\r\n\r\n  // row has class 'mappings'\r\n  eventBus.on('row.render', function(event) {\r\n    if (event.data === typeRow.getRow()) {\r\n      domClasses(event.gfx).add('values');\r\n    }\r\n  });\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n\r\n    var content = event.data.content;\r\n    if (event.data.row === typeRow.getRow() && content) {\r\n      if (content.inputExpression) {\r\n        event.gfx.childNodes[0].textContent = content.inputExpression.typeRef || '';\r\n      } else {\r\n        event.gfx.childNodes[0].textContent = content.typeRef || '';\r\n      }\r\n    }\r\n  });\r\n\r\n}\r\n\r\nTypeRowRenderer.$inject = [\r\n  'eventBus',\r\n  'typeRow'\r\n];\r\n\r\nmodule.exports = TypeRowRenderer;\r\n","module.exports = \"<div>/r/n  <div class=/\"allowed-values/\">/r/n    <label>{{ 'Input Values:' | translate }}</label>/r/n    <ul></ul>/r/n    <input type=/\"text/\" placeholder=/\"value1, value2, otherValue/\">/r/n  </div>/r/n</div>/r/n\";\n","module.exports = {\r\n  __init__: [ 'typeRow', 'typeRowRenderer' ],\r\n  __depends__: [\r\n    require(101),\r\n    require(14),\r\n    require(296)\r\n  ],\r\n  typeRow: [ 'type', require(55) ],\r\n  typeRowRenderer: [ 'type', require(56) ]\r\n};\r\n","'use strict';\r\n\r\nvar TableTreeWalker = require(61);\r\n\r\n\r\n/**\r\n * Import the definitions into a table.\r\n *\r\n * Errors and warnings are reported through the specified callback.\r\n *\r\n * @param  {Sheet} sheet\r\n * @param  {ModdleElement} definitions\r\n * @param  {Function} done the callback, invoked with (err, [ warning ]) once the import is done\r\n */\r\nfunction importDmnTable(sheet, definitions, decision, done) {\r\n\r\n  var importer = sheet.get('tableImporter'),\r\n      eventBus = sheet.get('eventBus');\r\n\r\n  var hasModeling;\r\n\r\n  try {\r\n    hasModeling = sheet.get('modeling');\r\n  } catch (e) {\r\n    hasModeling = false;\r\n  }\r\n\r\n  var error,\r\n      warnings = [];\r\n\r\n  function render(definitions) {\r\n\r\n    var visitor = {\r\n      create: function(type, parent, clause, rule) {\r\n        return importer.create(type, parent, clause, rule);\r\n      },\r\n\r\n      table: function(element) {\r\n        return importer.add(element);\r\n      },\r\n\r\n      element: function(element, parentShape, definitions) {\r\n        return importer.add(element, parentShape, definitions);\r\n      },\r\n\r\n      error: function(message, context) {\r\n        warnings.push({ message: message, context: context });\r\n      }\r\n    };\r\n\r\n    var walker = new TableTreeWalker(visitor, { canAddMissingEntries: hasModeling });\r\n\r\n    // import\r\n    walker.handleDefinitions(definitions, decision);\r\n  }\r\n\r\n  eventBus.fire('import.render.start', { definitions: definitions });\r\n\r\n  try {\r\n    render(definitions);\r\n  } catch (e) {\r\n    error = e;\r\n  }\r\n\r\n  eventBus.fire('import.render.complete', {\r\n    error: error,\r\n    warnings: warnings\r\n  });\r\n\r\n\r\n  done(error, warnings);\r\n}\r\n\r\nmodule.exports.importDmnTable = importDmnTable;\r\n","'use strict';\r\n\r\nvar assign = require(250),\r\n    filter = require(134),\r\n    union  = require(128);\r\n\r\nvar elementToString = require(62).elementToString;\r\n\r\n\r\nfunction elementData(semantic, attrs) {\r\n  return assign({\r\n    id: semantic.id,\r\n    type: semantic.$type,\r\n    businessObject: semantic\r\n  }, attrs);\r\n}\r\n\r\n\r\nfunction equals(type, conditions) {\r\n  return filter(conditions, function(condition) {\r\n    return condition === type;\r\n  }).length;\r\n}\r\n\r\n\r\n/**\r\n * An importer that adds dmn elements to the sheet\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Sheet} sheet\r\n * @param {ElementFactory} elementFactory\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction TableImporter(eventBus, sheet, elementRegistry, elementFactory, moddle, tableName, ioLabel, tableFactory, literalExpressionEditor, translate) {\r\n  this._eventBus = eventBus;\r\n  this._sheet = sheet;\r\n\r\n  this._elementRegistry = elementRegistry;\r\n  this._elementFactory = elementFactory;\r\n  this._tableName = tableName;\r\n  this._tableFactory = tableFactory;\r\n\r\n  this._literalExpressionEditor = literalExpressionEditor;\r\n  this._translate = translate;\r\n\r\n  this._ioLabel = ioLabel;\r\n\r\n  this._moddle = moddle;\r\n}\r\n\r\nTableImporter.$inject = [\r\n  'eventBus', 'sheet', 'elementRegistry',\r\n  'elementFactory', 'moddle', 'tableName',\r\n  'ioLabel', 'tableFactory',\r\n  'literalExpressionEditor',\r\n  'translate'\r\n];\r\n\r\nmodule.exports = TableImporter;\r\n\r\n\r\nTableImporter.prototype._makeCopy = function(semantic) {\r\n  var newSemantic = this._moddle.create(semantic.$type);\r\n\r\n  for (var prop in semantic) {\r\n    if (semantic.hasOwnProperty(prop) && prop !== '$type') {\r\n      newSemantic[prop] = semantic[prop];\r\n    }\r\n  }\r\n  newSemantic.$parent = semantic.$parent;\r\n\r\n  return newSemantic;\r\n};\r\n\r\nTableImporter.prototype.create = function(type, parent, clause, rule) {\r\n  var tableFactory = this._tableFactory,\r\n      translate = this._translate;\r\n\r\n  var parentBO = parent.businessObject,\r\n      isInput= equals(type, [ 'dmn:InputClause', 'dmn:UnaryTests' ]) ? translate('Input') : translate('Output'),\r\n      element;\r\n\r\n  if (equals(type, [ 'dmn:InputClause', 'dmn:OutputClause' ])) {\r\n    element = tableFactory['create' + isInput + 'Clause']('');\r\n\r\n    element.$parent = parentBO;\r\n\r\n    parentBO[isInput.toLowerCase()].push(element);\r\n  }\r\n\r\n  if (equals(type, [ 'dmn:UnaryTests', 'dmn:LiteralExpression'])) {\r\n    rule = clause;\r\n    clause = parent;\r\n    parent = undefined;\r\n\r\n    element = tableFactory['create' + isInput + 'Entry']('', clause, rule);\r\n  }\r\n\r\n  return element;\r\n};\r\n\r\n/**\r\n * Add dmn element (semantic) to the sheet onto the\r\n * parent element.\r\n */\r\nTableImporter.prototype.add = function(semantic, parentElement, definitions) {\r\n\r\n  var element;\r\n\r\n  if (semantic.$instanceOf('dmn:DecisionTable')) {\r\n    // Add the header row\r\n    element = this._elementFactory.createRow(elementData(semantic, {\r\n      isHead: true,\r\n      isClauseRow: true,\r\n      previous: this._ioLabel.getRow()\r\n    }));\r\n    this._sheet.addRow(element, parentElement);\r\n\r\n    this._tableName.setSemantic(semantic.$parent);\r\n  }\r\n\r\n  // LITERAL EXPRESSION\r\n  else if (semantic.$instanceOf('dmn:LiteralExpression') && parentElement.$instanceOf('dmn:Decision')) {\r\n    this._literalExpressionEditor.show(parentElement);\r\n\r\n    this._tableName.setSemantic(parentElement);\r\n  }\r\n\r\n  // INPUT CLAUSE\r\n  else if (semantic.$instanceOf('dmn:InputClause')) {\r\n    element = this._elementFactory.createColumn(elementData(semantic, {\r\n\r\n    }));\r\n    this._sheet.addColumn(element, parentElement);\r\n  }\r\n  // OUTPUT CLAUSE\r\n  else if (semantic.$instanceOf('dmn:OutputClause')) {\r\n    element = this._elementFactory.createColumn(elementData(semantic, {\r\n\r\n    }));\r\n    this._sheet.addColumn(element, parentElement);\r\n  }\r\n\r\n  // RULE\r\n  else if (semantic.$instanceOf('dmn:DecisionRule')) {\r\n    if (!semantic.inputEntry) {\r\n      semantic.inputEntry = [];\r\n    }\r\n    if (!semantic.outputEntry) {\r\n      semantic.outputEntry = [];\r\n    }\r\n    element = this._elementFactory.createRow(elementData(semantic, {\r\n\r\n    }));\r\n    this._sheet.addRow(element, parentElement);\r\n\r\n  }\r\n\r\n  // CELL\r\n  else if (parentElement.$instanceOf('dmn:DecisionRule')) {\r\n\r\n    // we have to find out the column of this cell. This can be done by getting the index of the\r\n    // cell and then using the clause at this index\r\n    var allCellsInRow = union(parentElement.inputEntry, parentElement.outputEntry);\r\n\r\n    var allClauses = this._elementRegistry.filter(function(element) {\r\n      if (!element.businessObject) {\r\n        return false;\r\n      }\r\n      var type = element.businessObject.$type;\r\n      return type === 'dmn:InputClause' || type === 'dmn:OutputClause';\r\n    }).sort(function(element1, element2) {\r\n      var bo1 = element1.businessObject;\r\n      var bo2 = element2.businessObject;\r\n      var parent = bo1.$parent;\r\n      var parsedType = bo1.$type === 'dmn:InputClause' ? 'input' : 'output';\r\n\r\n      // input entries before output entries\r\n      if (bo1.$type !== bo2.$type) {\r\n        if (bo1.$type === 'dmn:InputClause') {\r\n          return -1;\r\n        }\r\n        return 1;\r\n      }\r\n\r\n      // order is relative to appearance in parent array\r\n      return parent[parsedType].indexOf(bo1) - parent[parsedType].indexOf(bo2);\r\n    });\r\n\r\n    var column = allClauses[allCellsInRow.indexOf(semantic)].id;\r\n\r\n    var row = this._elementRegistry.filter(function(ea) {\r\n      return ea.businessObject === parentElement;\r\n    })[0].id;\r\n\r\n    semantic.text = semantic.text || '';\r\n\r\n    this._sheet.setCellContent({\r\n      row: row,\r\n      column: column,\r\n      content: semantic\r\n    });\r\n\r\n  } else {\r\n    throw new Error('can not render element ' + elementToString(semantic));\r\n  }\r\n\r\n  this._eventBus.fire('dmnElement.added', { element: element });\r\n\r\n  return element;\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136);\r\n\r\nvar elementToString = require(62).elementToString;\r\n\r\nfunction TableTreeWalker(handler, options) {\r\n\r\n  var canAddMissingEntries = options && options.canAddMissingEntries;\r\n\r\n  function visit(element, ctx, definitions) {\r\n\r\n    var gfx = element.gfx;\r\n\r\n    // avoid multiple rendering of elements\r\n    if (gfx) {\r\n      throw new Error('already rendered ' + elementToString(element));\r\n    }\r\n\r\n    // call handler\r\n    return handler.element(element, ctx, definitions);\r\n  }\r\n\r\n  function visitTable(element) {\r\n    return handler.table(element);\r\n  }\r\n\r\n  ////// Semantic handling //////////////////////\r\n\r\n  function handleDefinitions(definitions, decision) {\r\n    // make sure we walk the correct bpmnElement\r\n\r\n    var missingEntries = null,\r\n        missingClause;\r\n\r\n    // no decision -> nothing to import\r\n    if (!decision) {\r\n      return;\r\n    }\r\n\r\n    if (decision.id === '') {\r\n      decision.id = 'decision';\r\n    }\r\n\r\n    var table = decision.decisionTable;\r\n    var literalExpression = decision.literalExpression;\r\n\r\n\r\n    // no decision table -> nothing to import\r\n    if (table) {\r\n      var ctx = visitTable(table);\r\n\r\n\r\n      if (canAddMissingEntries && !table.input) {\r\n        table.input = [];\r\n\r\n        missingEntries = 'input';\r\n\r\n        missingClause = handler.create('dmn:InputClause', ctx, definitions);\r\n\r\n      } else if (canAddMissingEntries && !table.output) {\r\n        table.output = [];\r\n\r\n        missingEntries = 'output';\r\n\r\n        missingClause = handler.create('dmn:OutputClause', ctx, definitions);\r\n      }\r\n\r\n      handleClauses(table.input, ctx, definitions);\r\n      handleClauses(table.output, ctx, definitions);\r\n\r\n      if (table.rule && missingEntries) {\r\n        handleMissingEntries(table.rule, missingEntries, missingClause);\r\n      }\r\n\r\n      // if any input or output clauses (columns) were added\r\n      // make sure that for each rule the according input/output entry is created\r\n      handleRules(table.rule, ctx, definitions);\r\n    } else if (literalExpression) {\r\n\r\n      visit(literalExpression, decision);\r\n\r\n    } else {\r\n      throw new Error('no table for ' + elementToString(decision));\r\n    }\r\n\r\n  }\r\n\r\n  function handleMissingEntries(rules, missingEntries, missingClause) {\r\n    var isInput = missingEntries === 'input',\r\n        entriesNr = rules[0][(isInput ? 'output' : 'input') + 'Entry'].length,\r\n        entryType = isInput ? 'dmn:UnaryTests' : 'dmn:LiteralExpression';\r\n\r\n\r\n    forEach(rules, function(rule) {\r\n      var idx = 0;\r\n\r\n      for (idx; idx < entriesNr; idx++) {\r\n        handler.create(entryType, missingClause, rule);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleClauses(inputs, context, definitions) {\r\n    forEach(inputs, function(e) {\r\n      visit(e, context, definitions);\r\n    });\r\n  }\r\n\r\n  function handleRules(rules, context, definitions) {\r\n    forEach(rules, function(e) {\r\n      visit(e, context, definitions);\r\n\r\n      handleEntry(e.inputEntry, e);\r\n\r\n      handleEntry(e.outputEntry, e);\r\n    });\r\n  }\r\n\r\n  function handleEntry(entry, context, definitions) {\r\n    forEach(entry, function(e) {\r\n      visit(e, context, definitions);\r\n    });\r\n  }\r\n\r\n  ///// API ////////////////////////////////\r\n\r\n  return {\r\n    handleDefinitions: handleDefinitions\r\n  };\r\n}\r\n\r\nmodule.exports = TableTreeWalker;\r\n","'use strict';\r\n\r\nmodule.exports.elementToString = function(e) {\r\n  if (!e) {\r\n    return '<null>';\r\n  }\r\n\r\n  return '<' + e.$type + (e.id ? ' id=\"' + e.id : '') + '\" />';\r\n};","module.exports = {\r\n  __depends__: [\r\n    require(35),\r\n    require(101)\r\n  ],\r\n  tableImporter: [ 'type', require(60) ]\r\n};\r\n","'use strict';\r\n\r\nvar any = require(132);\r\n\r\n/**\r\n * Is an element of the given DMN type?\r\n *\r\n * @param  {tjs.model.Base|ModdleElement} element\r\n * @param  {String} type\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction is(element, type) {\r\n  var bo = getBusinessObject(element);\r\n\r\n  return bo && (typeof bo.$instanceOf === 'function') && bo.$instanceOf(type);\r\n}\r\n\r\nmodule.exports.is = is;\r\n\r\n\r\n/**\r\n * Return the business object for a given element.\r\n *\r\n * @param  {tjs.model.Base|ModdleElement} element\r\n *\r\n * @return {ModdleElement}\r\n */\r\nfunction getBusinessObject(element) {\r\n  return (element && element.businessObject) || element;\r\n}\r\n\r\nmodule.exports.getBusinessObject = getBusinessObject;\r\n\r\n\r\nfunction getName(element) {\r\n  element = getBusinessObject(element);\r\n\r\n  var name = element.name;\r\n\r\n  return name;\r\n}\r\n\r\nmodule.exports.getName = getName;\r\n\r\n\r\n/**\r\n * Return true if element has any of the given types.\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Array<String>} types\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isAny(element, types) {\r\n  return any(types, function(t) {\r\n    return is(element, t);\r\n  });\r\n}\r\n\r\nmodule.exports.isAny = isAny;\r\n","/**\r\n * This file must not be changed or exchanged.\r\n *\r\n * @see http://bpmn.io/license for more information.\r\n */\r\n\r\n'use strict';\r\n\r\nvar domify = require(264);\r\n\r\nvar domDelegate = require(263);\r\n\r\n/* jshint -W101 */\r\n\r\n// inlined ../resources/bpmnjs.png\r\nvar logoData = module.exports.BPMNIO_LOGO = 'iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAMAAADypuvZAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAADBQTFRFiMte9PrwldFwfcZPqtqN0+zEyOe1XLgjvuKncsJAZ70y6fXh3vDT////UrQV////G2zN+AAAABB0Uk5T////////////////////AOAjXRkAAAHDSURBVHjavJZJkoUgDEBJmAX8979tM8u3E6x20VlYJfFFMoL4vBDxATxZcakIOJTWSmxvKWVIkJ8jHvlRv1F2LFrVISCZI+tCtQx+XfewgVTfyY3plPiQEAzI3zWy+kR6NBhFBYeBuscJLOUuA2WVLpCjVIaFzrNQZArxAZKUQm6gsj37L9Cb7dnIBUKxENaaMJQqMpDXvSL+ktxdGRm2IsKgJGGPg7atwUG5CcFUEuSv+CwQqizTrvDTNXdMU2bMiDWZd8d7QIySWVRsb2vBBioxOFt4OinPBapL+neAb5KL5IJ8szOza2/DYoipUCx+CjO0Bpsv0V6mktNZ+k8rlABlWG0FrOpKYVo8DT3dBeLEjUBAj7moDogVii7nSS9QzZnFcOVBp1g2PyBQ3Vr5aIapN91VJy33HTJLC1iX2FY6F8gRdaAeIEfVONgtFCzZTmoLEdOjBDfsIOA6128gw3eu1shAajdZNAORxuQDJN5A5PbEG6gNIu24QJD5iNyRMZIr6bsHbCtCU/OaOaSvgkUyDMdDa1BXGf5HJ1To+/Ym6mCKT02Y+/Sa126ZKyd3jxhzpc1r8zVL6YM1Qy/kR4ABAFJ6iQUnivhAAAAAAElFTkSuQmCC';\r\n\r\n/* jshint +W101 */\r\n\r\n\r\nfunction css(attrs) {\r\n  return attrs.join(';');\r\n}\r\n\r\nvar LIGHTBOX_STYLES = css([\r\n  'z-index: 1001',\r\n  'position: fixed',\r\n  'top: 0',\r\n  'left: 0',\r\n  'right: 0',\r\n  'bottom: 0'\r\n]);\r\n\r\nvar BACKDROP_STYLES = css([\r\n  'width: 100%',\r\n  'height: 100%',\r\n  'background: rgba(0,0,0,0.2)'\r\n]);\r\n\r\nvar NOTICE_STYLES = css([\r\n  'position: absolute',\r\n  'left: 50%',\r\n  'top: 40%',\r\n  'margin: 0 -130px',\r\n  'width: 260px',\r\n  'padding: 10px',\r\n  'background: white',\r\n  'border: solid 1px #AAA',\r\n  'border-radius: 3px',\r\n  'font-family: Helvetica, Arial, sans-serif',\r\n  'font-size: 14px',\r\n  'line-height: 1.2em'\r\n]);\r\n\r\nvar LIGHTBOX_MARKUP =\r\n  '<div class=\"bjs-powered-by-lightbox\" style=\"' + LIGHTBOX_STYLES + '\">' +\r\n    '<div class=\"backdrop\" style=\"' + BACKDROP_STYLES + '\"></div>' +\r\n    '<div class=\"notice\" style=\"' + NOTICE_STYLES + '\">' +\r\n      '<a href=\"http://bpmn.io\" target=\"_blank\" style=\"float: left; margin-right: 10px\">' +\r\n        '<img src=\"data:image/png;base64,'+ logoData +'\">' +\r\n      '</a>' +\r\n      'Web-based tooling for BPMN, DMN and CMMN diagrams ' +\r\n      'powered by <a href=\"http://bpmn.io\" target=\"_blank\">bpmn.io</a>.' +\r\n    '</div>' +\r\n  '</div>';\r\n\r\n\r\nvar lightbox;\r\n\r\nfunction open() {\r\n\r\n  if (!lightbox) {\r\n    lightbox = domify(LIGHTBOX_MARKUP);\r\n\r\n    domDelegate.bind(lightbox, '.backdrop', 'click', function(event) {\r\n      document.body.removeChild(lightbox);\r\n    });\r\n  }\r\n\r\n  document.body.appendChild(lightbox);\r\n}\r\n\r\nmodule.exports.open = open;\r\n","/**\n * Module dependencies.\n */\n\ntry {\n  var index = require(70);\n} catch (err) {\n  var index = require(70);\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = //s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^/s+|/s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n","var matches = require(71)\n\nmodule.exports = function (element, selector, checkYoSelf, root) {\n  element = checkYoSelf ? {parentNode: element} : element\n\n  root = root || document\n\n  // Make sure `element !== document` and `element != null`\n  // otherwise we get an illegal invocation\n  while ((element = element.parentNode) && element !== document) {\n    if (matches(element, selector))\n      return element\n    // After `matches` on the edge case that\n    // the selector matches the root\n    // (when the root is not the document)\n    if (element === root)\n      return\n  }\n}\n","/**\n * Module dependencies.\n */\n\ntry {\n  var closest = require(67);\n} catch(err) {\n  var closest = require(67);\n}\n\ntry {\n  var event = require(69);\n} catch(err) {\n  var event = require(69);\n}\n\n/**\n * Delegate event `type` to `selector`\n * and invoke `fn(e)`. A callback function\n * is returned which may be passed to `.unbind()`.\n *\n * @param {Element} el\n * @param {String} selector\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, selector, type, fn, capture){\n  return event.bind(el, type, function(e){\n    var target = e.target || e.srcElement;\n    e.delegateTarget = closest(target, selector, true, el);\n    if (e.delegateTarget) fn.call(el, e);\n  }, capture);\n};\n\n/**\n * Unbind event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  event.unbind(el, type, fn, capture);\n};\n","var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',\n    unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',\n    prefix = bind !== 'addEventListener' ? 'on' : '';\n\n/**\n * Bind `el` event `type` to `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.bind = function(el, type, fn, capture){\n  el[bind](prefix + type, fn, capture || false);\n  return fn;\n};\n\n/**\n * Unbind `el` event `type`'s callback `fn`.\n *\n * @param {Element} el\n * @param {String} type\n * @param {Function} fn\n * @param {Boolean} capture\n * @return {Function}\n * @api public\n */\n\nexports.unbind = function(el, type, fn, capture){\n  el[unbind](prefix + type, fn, capture || false);\n  return fn;\n};","module.exports = function(arr, obj){\n  if (arr.indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","/**\n * Module dependencies.\n */\n\ntry {\n  var query = require(72);\n} catch (err) {\n  var query = require(72);\n}\n\n/**\n * Element prototype.\n */\n\nvar proto = Element.prototype;\n\n/**\n * Vendor function.\n */\n\nvar vendor = proto.matches\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\n/**\n * Expose `match()`.\n */\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = query.all(selector, el.parentNode);\n  for (var i = 0; i < nodes.length; ++i) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n","function one(selector, el) {\n  return el.querySelector(selector);\n}\n\nexports = module.exports = function(selector, el){\n  el = el || document;\n  return one(selector, el);\n};\n\nexports.all = function(selector, el){\n  el = el || document;\n  return el.querySelectorAll(selector);\n};\n\nexports.engine = function(obj){\n  if (!obj.one) throw new Error('.one callback required');\n  if (!obj.all) throw new Error('.all callback required');\n  one = obj.one;\n  exports.all = obj.all;\n  return exports;\n};\n","module.exports = require(74);","'use strict';\n\nvar di = require(115);\n\n\n/**\n * Bootstrap an injector from a list of modules, instantiating a number of default components\n *\n * @ignore\n * @param {Array<didi.Module>} bootstrapModules\n *\n * @return {didi.Injector} a injector to use to access the components\n */\nfunction bootstrap(bootstrapModules) {\n\n  var modules = [],\n      components = [];\n\n  function hasModule(m) {\n    return modules.indexOf(m) >= 0;\n  }\n\n  function addModule(m) {\n    modules.push(m);\n  }\n\n  function visit(m) {\n    if (hasModule(m)) {\n      return;\n    }\n\n    (m.__depends__ || []).forEach(visit);\n\n    if (hasModule(m)) {\n      return;\n    }\n\n    addModule(m);\n\n    (m.__init__ || []).forEach(function(c) {\n      components.push(c);\n    });\n  }\n\n  bootstrapModules.forEach(visit);\n\n  var injector = new di.Injector(modules);\n\n  components.forEach(function(c) {\n\n    try {\n      // eagerly resolve component (fn or string)\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\n    } catch (e) {\n      console.error('Failed to instantiate component');\n      console.error(e.stack);\n\n      throw e;\n    }\n  });\n\n  return injector;\n}\n\n/**\n * Creates an injector from passed options.\n *\n * @ignore\n * @param  {Object} options\n * @return {didi.Injector}\n */\nfunction createInjector(options) {\n\n  options = options || {};\n\n  var configModule = {\n    'config': ['value', options]\n  };\n\n  var coreModule = require(81);\n\n  var modules = [ configModule, coreModule ].concat(options.modules || []);\n\n  return bootstrap(modules);\n}\n\n\n/**\n * The main diagram-js entry point that bootstraps the diagram with the given\n * configuration.\n *\n * To register extensions with the diagram, pass them as Array<didi.Module> to the constructor.\n *\n * @class djs.Diagram\n * @memberOf djs\n * @constructor\n *\n * @example\n *\n * <caption>Creating a plug-in that logs whenever a shape is added to the canvas.</caption>\n *\n * // plug-in implemenentation\n * function MyLoggingPlugin(eventBus) {\n *   eventBus.on('shape.added', function(event) {\n *     console.log('shape ', event.shape, ' was added to the diagram');\n *   });\n * }\n *\n * // export as module\n * module.exports = {\n *   __init__: [ 'myLoggingPlugin' ],\n *     myLoggingPlugin: [ 'type', MyLoggingPlugin ]\n * };\n *\n *\n * // instantiate the diagram with the new plug-in\n *\n * var diagram = new Diagram({ modules: [ require('path-to-my-logging-plugin') ] });\n *\n * diagram.invoke([ 'canvas', function(canvas) {\n *   // add shape to drawing canvas\n *   canvas.addShape({ x: 10, y: 10 });\n * });\n *\n * // 'shape ... was added to the diagram' logged to console\n *\n * @param {Object} options\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the diagram\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the diagram with\n */\nfunction Diagram(options, injector) {\n\n  // create injector unless explicitly specified\n  this.injector = injector = injector || createInjector(options);\n\n  // API\n\n  /**\n   * Resolves a diagram service\n   *\n   * @method Diagram#get\n   *\n   * @param {String} name the name of the diagram service to be retrieved\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   */\n  this.get = injector.get;\n\n  /**\n   * Executes a function into which diagram services are injected\n   *\n   * @method Diagram#invoke\n   *\n   * @param {Function|Object[]} fn the function to resolve\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\n   */\n  this.invoke = injector.invoke;\n\n  // init\n\n  // indicate via event\n\n\n  /**\n   * An event indicating that all plug-ins are loaded.\n   *\n   * Use this event to fire other events to interested plug-ins\n   *\n   * @memberOf Diagram\n   *\n   * @event diagram.init\n   *\n   * @example\n   *\n   * eventBus.on('diagram.init', function() {\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\n   * });\n   *\n   * @type {Object}\n   */\n  this.get('eventBus').fire('diagram.init');\n}\n\nmodule.exports = Diagram;\n\n\n/**\n * Destroys the diagram\n *\n * @method  Diagram#destroy\n */\nDiagram.prototype.destroy = function() {\n  this.get('eventBus').fire('diagram.destroy');\n};\n\n/**\n * Clear the diagram, removing all contents.\n */\nDiagram.prototype.clear = function() {\n  this.get('eventBus').fire('diagram.clear');\n};\n","'use strict';\n\nvar forEach = require(136),\n    isFunction = require(242),\n    isArray = require(241),\n    isNumber = require(244);\n\n\nvar DEFAULT_PRIORITY = 1000;\n\n\nfunction isObject(element) {\n  return typeof element === 'object';\n}\n\n/**\n * A utility that can be used to plug-in into the command execution for\n * extension and/or validation.\n *\n * @param {EventBus} eventBus\n *\n * @example\n *\n * var inherits = require('inherits');\n *\n * var CommandInterceptor = require('diagram-js/lib/command/CommandInterceptor');\n *\n * function CommandLogger(eventBus) {\n *   CommandInterceptor.call(this, eventBus);\n *\n *   this.preExecute(function(event) {\n *     console.log('command pre-execute', event);\n *   });\n * }\n *\n * inherits(CommandLogger, CommandInterceptor);\n *\n */\nfunction CommandInterceptor(eventBus) {\n  this._eventBus = eventBus;\n}\n\nCommandInterceptor.$inject = [ 'eventBus' ];\n\nmodule.exports = CommandInterceptor;\n\nfunction unwrapEvent(fn, that) {\n  return function(event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Register an interceptor for a command execution\n *\n * @param {String|Array<String>} [events] list of commands to register on\n * @param {String} [hook] command hook, i.e. preExecute, executed to listen on\n * @param {Number} [priority] the priority on which to hook into the execution\n * @param {Function} handlerFn interceptor to be invoked with (event)\n * @param {Boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\n *                          listener instead\n * @param {Object} [that] Pass context (`this`) to the handler function\n */\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\n\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n\n  if (!isArray(events)) {\n    events = [ events ];\n  }\n\n  var eventBus = this._eventBus;\n\n  forEach(events, function(event) {\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\n\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n\nvar hooks = [\n  'canExecute',\n  'preExecute',\n  'preExecuted',\n  'execute',\n  'executed',\n  'postExecute',\n  'postExecuted',\n  'revert',\n  'reverted'\n];\n\n/*\n * Install hook shortcuts\n *\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\n * which will in term forward to CommandInterceptor#on.\n */\nforEach(hooks, function(hook) {\n\n  /**\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\n   *\n   * A named hook for plugging into the command execution\n   *\n   * @param {String|Array<String>} [events] list of commands to register on\n   * @param {Number} [priority] the priority on which to hook into the execution\n   * @param {Function} handlerFn interceptor to be invoked with (event)\n   * @param {Boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\n   *                          listener instead\n   * @param {Object} [that] Pass context (`this`) to the handler function\n   */\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\n\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n});\n","'use strict';\n\nvar isNumber = require(244),\n    assign = require(250),\n    forEach = require(136),\n    every = require(133),\n    debounce = require(143);\n\nvar Collections = require(104),\n    Elements = require(105);\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgClasses = require(323),\n    svgCreate = require(325),\n    svgTransform = require(329);\n\nvar createMatrix = require(326).createMatrix;\n\n\nfunction round(number, resolution) {\n  return Math.round(number * resolution) / resolution;\n}\n\nfunction ensurePx(number) {\n  return isNumber(number) ? number + 'px' : number;\n}\n\n/**\n * Creates a HTML container element for a SVG element with\n * the given configuration\n *\n * @param  {Object} options\n * @return {HTMLElement} the container element\n */\nfunction createContainer(options) {\n\n  options = assign({}, { width: '100%', height: '100%' }, options);\n\n  var container = options.container || document.body;\n\n  // create a <div> around the svg element with the respective size\n  // this way we can always get the correct container size\n  // (this is impossible for <svg> elements at the moment)\n  var parent = document.createElement('div');\n  parent.setAttribute('class', 'djs-container');\n\n  assign(parent.style, {\n    position: 'relative',\n    overflow: 'hidden',\n    width: ensurePx(options.width),\n    height: ensurePx(options.height)\n  });\n\n  container.appendChild(parent);\n\n  return parent;\n}\n\nfunction createGroup(parent, cls) {\n  var group = svgCreate('g');\n  svgClasses(group).add(cls);\n\n  svgAppend(parent, group);\n\n  return group;\n}\n\nvar BASE_LAYER = 'base';\n\n\nvar REQUIRED_MODEL_ATTRS = {\n  shape: [ 'x', 'y', 'width', 'height' ],\n  connection: [ 'waypoints' ]\n};\n\n/**\n * The main drawing canvas.\n *\n * @class\n * @constructor\n *\n * @emits Canvas#canvas.init\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {GraphicsFactory} graphicsFactory\n * @param {ElementRegistry} elementRegistry\n */\nfunction Canvas(config, eventBus, graphicsFactory, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n  this._graphicsFactory = graphicsFactory;\n\n  this._init(config || {});\n}\n\nCanvas.$inject = [ 'config.canvas', 'eventBus', 'graphicsFactory', 'elementRegistry' ];\n\nmodule.exports = Canvas;\n\n\nCanvas.prototype._init = function(config) {\n\n  var eventBus = this._eventBus;\n\n  // Creates a <svg> element that is wrapped into a <div>.\n  // This way we are always able to correctly figure out the size of the svg element\n  // by querying the parent node.\n  //\n  // (It is not possible to get the size of a svg element cross browser @ 2014-04-01)\n  //\n  // <div class=\"djs-container\" style=\"width: {desired-width}, height: {desired-height}\">\n  //   <svg width=\"100%\" height=\"100%\">\n  //    ...\n  //   </svg>\n  // </div>\n\n  // html container\n  var container = this._container = createContainer(config);\n\n  var svg = this._svg = svgCreate('svg');\n  svgAttr(svg, { width: '100%', height: '100%' });\n\n  svgAppend(container, svg);\n\n  var viewport = this._viewport = createGroup(svg, 'viewport');\n\n  this._layers = {};\n\n  // debounce canvas.viewbox.changed events\n  // for smoother diagram interaction\n  if (config.deferUpdate !== false) {\n    this._viewboxChanged = debounce(this._viewboxChanged, 300);\n  }\n\n  eventBus.on('diagram.init', function() {\n\n    /**\n     * An event indicating that the canvas is ready to be drawn on.\n     *\n     * @memberOf Canvas\n     *\n     * @event canvas.init\n     *\n     * @type {Object}\n     * @property {Snap<SVGSVGElement>} svg the created svg element\n     * @property {Snap<SVGGroup>} viewport the direct parent of diagram elements and shapes\n     */\n    eventBus.fire('canvas.init', {\n      svg: svg,\n      viewport: viewport\n    });\n\n    // fire this in order for certain components to check\n    // if they need to be adjusted due the canvas size\n    this.resized();\n\n  }, this);\n\n  eventBus.on('diagram.destroy', 500, this._destroy, this);\n  eventBus.on('diagram.clear', 500, this._clear, this);\n};\n\nCanvas.prototype._destroy = function(emit) {\n  this._eventBus.fire('canvas.destroy', {\n    svg: this._svg,\n    viewport: this._viewport\n  });\n\n  var parent = this._container.parentNode;\n\n  if (parent) {\n    parent.removeChild(this._container);\n  }\n\n  delete this._svg;\n  delete this._container;\n  delete this._layers;\n  delete this._rootElement;\n  delete this._viewport;\n};\n\nCanvas.prototype._clear = function() {\n\n  var self = this;\n\n  var allElements = this._elementRegistry.getAll();\n\n  // remove all elements\n  allElements.forEach(function(element) {\n    var type = Elements.getType(element);\n\n    if (type === 'root') {\n      self.setRootElement(null, true);\n    } else {\n      self._removeElement(element, type);\n    }\n  });\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n};\n\n/**\n * Returns the default layer on which\n * all elements are drawn.\n *\n * @returns {Snap<SVGGroup>}\n */\nCanvas.prototype.getDefaultLayer = function() {\n  return this.getLayer(BASE_LAYER);\n};\n\n/**\n * Returns a layer that is used to draw elements\n * or annotations on it.\n *\n * @param  {String} name\n *\n * @returns {Snap<SVGGroup>}\n */\nCanvas.prototype.getLayer = function(name) {\n\n  if (!name) {\n    throw new Error('must specify a name');\n  }\n\n  var layer = this._layers[name];\n  if (!layer) {\n    layer = this._layers[name] = createGroup(this._viewport, 'layer-' + name);\n  }\n\n  return layer;\n};\n\n\n/**\n * Returns the html element that encloses the\n * drawing canvas.\n *\n * @return {DOMNode}\n */\nCanvas.prototype.getContainer = function() {\n  return this._container;\n};\n\n\n/////////////// markers ///////////////////////////////////\n\nCanvas.prototype._updateMarker = function(element, marker, add) {\n  var container;\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  // we need to access all\n  container = this._elementRegistry._elements[element.id];\n\n  if (!container) {\n    return;\n  }\n\n  forEach([ container.gfx, container.secondaryGfx ], function(gfx) {\n    if (gfx) {\n      // invoke either addClass or removeClass based on mode\n      if (add) {\n        svgClasses(gfx).add(marker);\n      } else {\n        svgClasses(gfx).remove(marker);\n      }\n    }\n  });\n\n  /**\n   * An event indicating that a marker has been updated for an element\n   *\n   * @event element.marker.update\n   * @type {Object}\n   * @property {djs.model.Element} element the shape\n   * @property {Object} gfx the graphical representation of the shape\n   * @property {String} marker\n   * @property {Boolean} add true if the marker was added, false if it got removed\n   */\n  this._eventBus.fire('element.marker.update', { element: element, gfx: container.gfx, marker: marker, add: !!add });\n};\n\n\n/**\n * Adds a marker to an element (basically a css class).\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @example\n * canvas.addMarker('foo', 'some-marker');\n *\n * var fooGfx = canvas.getGraphics('foo');\n *\n * fooGfx; // <g class=\"... some-marker\"> ... </g>\n *\n * @param {String|djs.model.Base} element\n * @param {String} marker\n */\nCanvas.prototype.addMarker = function(element, marker) {\n  this._updateMarker(element, marker, true);\n};\n\n\n/**\n * Remove a marker from an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.removeMarker = function(element, marker) {\n  this._updateMarker(element, marker, false);\n};\n\n/**\n * Check the existence of a marker on element.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.hasMarker = function(element, marker) {\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  var gfx = this.getGraphics(element);\n\n  return svgClasses(gfx).has(marker);\n};\n\n/**\n * Toggles a marker on an element.\n *\n * Fires the element.marker.update event, making it possible to\n * integrate extension into the marker life-cycle, too.\n *\n * @param  {String|djs.model.Base} element\n * @param  {String} marker\n */\nCanvas.prototype.toggleMarker = function(element, marker) {\n  if (this.hasMarker(element, marker)) {\n    this.removeMarker(element, marker);\n  } else {\n    this.addMarker(element, marker);\n  }\n};\n\nCanvas.prototype.getRootElement = function() {\n  if (!this._rootElement) {\n    this.setRootElement({ id: '__implicitroot', children: [] });\n  }\n\n  return this._rootElement;\n};\n\n\n\n//////////////// root element handling ///////////////////////////\n\n/**\n * Sets a given element as the new root element for the canvas\n * and returns the new root element.\n *\n * @param {Object|djs.model.Root} element\n * @param {Boolean} [override] whether to override the current root element, if any\n *\n * @return {Object|djs.model.Root} new root element\n */\nCanvas.prototype.setRootElement = function(element, override) {\n\n  if (element) {\n    this._ensureValid('root', element);\n  }\n\n  var currentRoot = this._rootElement,\n      elementRegistry = this._elementRegistry,\n      eventBus = this._eventBus;\n\n  if (currentRoot) {\n    if (!override) {\n      throw new Error('rootElement already set, need to specify override');\n    }\n\n    // simulate element remove event sequence\n    eventBus.fire('root.remove', { element: currentRoot });\n    eventBus.fire('root.removed', { element: currentRoot });\n\n    elementRegistry.remove(currentRoot);\n  }\n\n  if (element) {\n    var gfx = this.getDefaultLayer();\n\n    // resemble element add event sequence\n    eventBus.fire('root.add', { element: element });\n\n    elementRegistry.add(element, gfx, this._svg);\n\n    eventBus.fire('root.added', { element: element, gfx: gfx });\n  }\n\n  this._rootElement = element;\n\n  return element;\n};\n\n\n\n///////////// add functionality ///////////////////////////////\n\nCanvas.prototype._ensureValid = function(type, element) {\n  if (!element.id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elementRegistry.get(element.id)) {\n    throw new Error('element with id ' + element.id + ' already exists');\n  }\n\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\n\n  var valid = every(requiredAttrs, function(attr) {\n    return typeof element[attr] !== 'undefined';\n  });\n\n  if (!valid) {\n    throw new Error(\n      'must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\n  }\n};\n\nCanvas.prototype._setParent = function(element, parent, parentIndex) {\n  Collections.add(parent.children, element, parentIndex);\n  element.parent = parent;\n};\n\n/**\n * Adds an element to the canvas.\n *\n * This wires the parent <-> child relationship between the element and\n * a explicitly specified parent or an implicit root element.\n *\n * During add it emits the events\n *\n *  * <{type}.add> (element, parent)\n *  * <{type}.added> (element, gfx)\n *\n * Extensions may hook into these events to perform their magic.\n *\n * @param {String} type\n * @param {Object|djs.model.Base} element\n * @param {Object|djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {Object|djs.model.Base} the added element\n */\nCanvas.prototype._addElement = function(type, element, parent, parentIndex) {\n\n  parent = parent || this.getRootElement();\n\n  var eventBus = this._eventBus,\n      graphicsFactory = this._graphicsFactory;\n\n  this._ensureValid(type, element);\n\n  eventBus.fire(type + '.add', { element: element, parent: parent });\n\n  this._setParent(element, parent, parentIndex);\n\n  // create graphics\n  var gfx = graphicsFactory.create(type, element);\n\n  this._elementRegistry.add(element, gfx);\n\n  // update its visual\n  graphicsFactory.update(type, element, gfx);\n\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\n\n  return element;\n};\n\n/**\n * Adds a shape to the canvas\n *\n * @param {Object|djs.model.Shape} shape to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {djs.model.Shape} the added shape\n */\nCanvas.prototype.addShape = function(shape, parent, parentIndex) {\n  return this._addElement('shape', shape, parent, parentIndex);\n};\n\n/**\n * Adds a connection to the canvas\n *\n * @param {Object|djs.model.Connection} connection to add to the diagram\n * @param {djs.model.Base} [parent]\n * @param {Number} [parentIndex]\n *\n * @return {djs.model.Connection} the added connection\n */\nCanvas.prototype.addConnection = function(connection, parent, parentIndex) {\n  return this._addElement('connection', connection, parent, parentIndex);\n};\n\n\n/**\n * Internal remove element\n */\nCanvas.prototype._removeElement = function(element, type) {\n\n  var elementRegistry = this._elementRegistry,\n      graphicsFactory = this._graphicsFactory,\n      eventBus = this._eventBus;\n\n  element = elementRegistry.get(element.id || element);\n\n  if (!element) {\n    // element was removed already\n    return;\n  }\n\n  eventBus.fire(type + '.remove', { element: element });\n\n  graphicsFactory.remove(element);\n\n  // unset parent <-> child relationship\n  Collections.remove(element.parent && element.parent.children, element);\n  element.parent = null;\n\n  eventBus.fire(type + '.removed', { element: element });\n\n  elementRegistry.remove(element);\n\n  return element;\n};\n\n\n/**\n * Removes a shape from the canvas\n *\n * @param {String|djs.model.Shape} shape or shape id to be removed\n *\n * @return {djs.model.Shape} the removed shape\n */\nCanvas.prototype.removeShape = function(shape) {\n\n  /**\n   * An event indicating that a shape is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.remove\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n\n  /**\n   * An event indicating that a shape has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event shape.removed\n   * @type {Object}\n   * @property {djs.model.Shape} element the shape descriptor\n   * @property {Object} gfx the graphical representation of the shape\n   */\n  return this._removeElement(shape, 'shape');\n};\n\n\n/**\n * Removes a connection from the canvas\n *\n * @param {String|djs.model.Connection} connection or connection id to be removed\n *\n * @return {djs.model.Connection} the removed connection\n */\nCanvas.prototype.removeConnection = function(connection) {\n\n  /**\n   * An event indicating that a connection is about to be removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.remove\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n\n  /**\n   * An event indicating that a connection has been removed from the canvas.\n   *\n   * @memberOf Canvas\n   *\n   * @event connection.removed\n   * @type {Object}\n   * @property {djs.model.Connection} element the connection descriptor\n   * @property {Object} gfx the graphical representation of the connection\n   */\n  return this._removeElement(connection, 'connection');\n};\n\n\n/**\n * Return the graphical object underlaying a certain diagram element\n *\n * @param {String|djs.model.Base} element descriptor of the element\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nCanvas.prototype.getGraphics = function(element, secondary) {\n  return this._elementRegistry.getGraphics(element, secondary);\n};\n\n\n/**\n * Perform a viewbox update via a given change function.\n *\n * @param {Function} changeFn\n */\nCanvas.prototype._changeViewbox = function(changeFn) {\n\n  // notify others of the upcoming viewbox change\n  this._eventBus.fire('canvas.viewbox.changing');\n\n  // perform actual change\n  changeFn.apply(this);\n\n  // reset the cached viewbox so that\n  // a new get operation on viewbox or zoom\n  // triggers a viewbox re-computation\n  this._cachedViewbox = null;\n\n  // notify others of the change; this step\n  // may or may not be debounced\n  this._viewboxChanged();\n};\n\nCanvas.prototype._viewboxChanged = function() {\n  this._eventBus.fire('canvas.viewbox.changed', { viewbox: this.viewbox() });\n};\n\n\n/**\n * Gets or sets the view box of the canvas, i.e. the\n * area that is currently displayed.\n *\n * The getter may return a cached viewbox (if it is currently\n * changing). To force a recomputation, pass `false` as the first argument.\n *\n * @example\n *\n * canvas.viewbox({ x: 100, y: 100, width: 500, height: 500 })\n *\n * // sets the visible area of the diagram to (100|100) -> (600|100)\n * // and and scales it according to the diagram width\n *\n * var viewbox = canvas.viewbox(); // pass `false` to force recomputing the box.\n *\n * console.log(viewbox);\n * // {\n * //   inner: Dimensions,\n * //   outer: Dimensions,\n * //   scale,\n * //   x, y,\n * //   width, height\n * // }\n *\n * @param  {Object} [box] the new view box to set\n * @param  {Number} box.x the top left X coordinate of the canvas visible in view box\n * @param  {Number} box.y the top left Y coordinate of the canvas visible in view box\n * @param  {Number} box.width the visible width\n * @param  {Number} box.height\n *\n * @return {Object} the current view box\n */\nCanvas.prototype.viewbox = function(box) {\n\n  if (box === undefined && this._cachedViewbox) {\n    return this._cachedViewbox;\n  }\n\n  var viewport = this._viewport,\n      innerBox,\n      outerBox = this.getSize(),\n      matrix,\n      scale,\n      x, y;\n\n  if (!box) {\n    // compute the inner box based on the\n    // diagrams default layer. This allows us to exclude\n    // external components, such as overlays\n    innerBox = this.getDefaultLayer().getBBox();\n\n    var transform = svgTransform(viewport);\n    matrix = transform ? transform.matrix : createMatrix();\n    scale = round(matrix.a, 1000);\n\n    x = round(-matrix.e || 0, 1000);\n    y = round(-matrix.f || 0, 1000);\n\n    box = this._cachedViewbox = {\n      x: x ? x / scale : 0,\n      y: y ? y / scale : 0,\n      width: outerBox.width / scale,\n      height: outerBox.height / scale,\n      scale: scale,\n      inner: {\n        width: innerBox.width,\n        height: innerBox.height,\n        x: innerBox.x,\n        y: innerBox.y\n      },\n      outer: outerBox\n    };\n\n    return box;\n  } else {\n\n    this._changeViewbox(function() {\n      scale = Math.min(outerBox.width / box.width, outerBox.height / box.height);\n\n      var matrix = this._svg.createSVGMatrix()\n        .scale(scale)\n        .translate(-box.x, -box.y);\n\n      svgTransform(viewport, matrix);\n    });\n  }\n\n  return box;\n};\n\n\n/**\n * Gets or sets the scroll of the canvas.\n *\n * @param {Object} [delta] the new scroll to apply.\n *\n * @param {Number} [delta.dx]\n * @param {Number} [delta.dy]\n */\nCanvas.prototype.scroll = function(delta) {\n\n  var node = this._viewport;\n  var matrix = node.getCTM();\n\n  if (delta) {\n    this._changeViewbox(function() {\n      delta = assign({ dx: 0, dy: 0 }, delta || {});\n\n      matrix = this._svg.createSVGMatrix().translate(delta.dx, delta.dy).multiply(matrix);\n\n      setCTM(node, matrix);\n    });\n  }\n\n  return { x: matrix.e, y: matrix.f };\n};\n\n\n/**\n * Gets or sets the current zoom of the canvas, optionally zooming\n * to the specified position.\n *\n * The getter may return a cached zoom level. Call it with `false` as\n * the first argument to force recomputation of the current level.\n *\n * @param {String|Number} [newScale] the new zoom level, either a number, i.e. 0.9,\n *                                   or `fit-viewport` to adjust the size to fit the current viewport\n * @param {String|Point} [center] the reference point { x: .., y: ..} to zoom to, 'auto' to zoom into mid or null\n *\n * @return {Number} the current scale\n */\nCanvas.prototype.zoom = function(newScale, center) {\n\n  if (!newScale) {\n    return this.viewbox(newScale).scale;\n  }\n\n  if (newScale === 'fit-viewport') {\n    return this._fitViewport(center);\n  }\n\n  var outer,\n      matrix;\n\n  this._changeViewbox(function() {\n\n    if (typeof center !== 'object') {\n      outer = this.viewbox().outer;\n\n      center = {\n        x: outer.width / 2,\n        y: outer.height / 2\n      };\n    }\n\n    matrix = this._setZoom(newScale, center);\n  });\n\n  return round(matrix.a, 1000);\n};\n\nfunction setCTM(node, m) {\n  var mstr = 'matrix(' + m.a + ',' + m.b + ',' + m.c + ',' + m.d + ',' + m.e + ',' + m.f + ')';\n  node.setAttribute('transform', mstr);\n}\n\nCanvas.prototype._fitViewport = function(center) {\n\n  var vbox = this.viewbox(),\n      outer = vbox.outer,\n      inner = vbox.inner,\n      newScale,\n      newViewbox;\n\n  // display the complete diagram without zooming in.\n  // instead of relying on internal zoom, we perform a\n  // hard reset on the canvas viewbox to realize this\n  //\n  // if diagram does not need to be zoomed in, we focus it around\n  // the diagram origin instead\n\n  if (inner.x >= 0 &&\n      inner.y >= 0 &&\n      inner.x + inner.width <= outer.width &&\n      inner.y + inner.height <= outer.height &&\n      !center) {\n\n    newViewbox = {\n      x: 0,\n      y: 0,\n      width: Math.max(inner.width + inner.x, outer.width),\n      height: Math.max(inner.height + inner.y, outer.height)\n    };\n  } else {\n\n    newScale = Math.min(1, outer.width / inner.width, outer.height / inner.height);\n    newViewbox = {\n      x: inner.x + (center ? inner.width / 2 - outer.width / newScale / 2 : 0),\n      y: inner.y + (center ? inner.height / 2 - outer.height / newScale / 2 : 0),\n      width: outer.width / newScale,\n      height: outer.height / newScale\n    };\n  }\n\n  this.viewbox(newViewbox);\n\n  return this.viewbox(false).scale;\n};\n\n\nCanvas.prototype._setZoom = function(scale, center) {\n\n  var svg = this._svg,\n      viewport = this._viewport;\n\n  var matrix = svg.createSVGMatrix();\n  var point = svg.createSVGPoint();\n\n  var centerPoint,\n      originalPoint,\n      currentMatrix,\n      scaleMatrix,\n      newMatrix;\n\n  currentMatrix = viewport.getCTM();\n\n  var currentScale = currentMatrix.a;\n\n  if (center) {\n    centerPoint = assign(point, center);\n\n    // revert applied viewport transformations\n    originalPoint = centerPoint.matrixTransform(currentMatrix.inverse());\n\n    // create scale matrix\n    scaleMatrix = matrix\n                    .translate(originalPoint.x, originalPoint.y)\n                    .scale(1 / currentScale * scale)\n                    .translate(-originalPoint.x, -originalPoint.y);\n\n    newMatrix = currentMatrix.multiply(scaleMatrix);\n  } else {\n    newMatrix = matrix.scale(scale);\n  }\n\n  setCTM(this._viewport, newMatrix);\n\n  return newMatrix;\n};\n\n\n/**\n * Returns the size of the canvas\n *\n * @return {Dimensions}\n */\nCanvas.prototype.getSize = function() {\n  return {\n    width: this._container.clientWidth,\n    height: this._container.clientHeight\n  };\n};\n\n\n/**\n * Return the absolute bounding box for the given element\n *\n * The absolute bounding box may be used to display overlays in the\n * callers (browser) coordinate system rather than the zoomed in/out\n * canvas coordinates.\n *\n * @param  {ElementDescriptor} element\n * @return {Bounds} the absolute bounding box\n */\nCanvas.prototype.getAbsoluteBBox = function(element) {\n  var vbox = this.viewbox();\n  var bbox;\n\n  // connection\n  // use svg bbox\n  if (element.waypoints) {\n    var gfx = this.getGraphics(element);\n\n    var transformBBox = gfx.getBBox(true);\n    bbox = gfx.getBBox();\n\n    bbox.x -= transformBBox.x;\n    bbox.y -= transformBBox.y;\n\n    bbox.width += 2 * transformBBox.x;\n    bbox.height +=  2 * transformBBox.y;\n  }\n  // shapes\n  // use data\n  else {\n    bbox = element;\n  }\n\n  var x = bbox.x * vbox.scale - vbox.x * vbox.scale;\n  var y = bbox.y * vbox.scale - vbox.y * vbox.scale;\n\n  var width = bbox.width * vbox.scale;\n  var height = bbox.height * vbox.scale;\n\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n};\n\n/**\n * Fires an event in order other modules can react to the\n * canvas resizing\n */\nCanvas.prototype.resized = function() {\n\n  // force recomputation of view box\n  delete this._cachedViewbox;\n\n  this._eventBus.fire('canvas.resized');\n};\n","'use strict';\n\nvar Model = require(103);\n\nvar assign = require(250);\n\n/**\n * A factory for diagram-js shapes\n */\nfunction ElementFactory() {\n  this._uid = 12;\n}\n\nmodule.exports = ElementFactory;\n\n\nElementFactory.prototype.createRoot = function(attrs) {\n  return this.create('root', attrs);\n};\n\nElementFactory.prototype.createLabel = function(attrs) {\n  return this.create('label', attrs);\n};\n\nElementFactory.prototype.createShape = function(attrs) {\n  return this.create('shape', attrs);\n};\n\nElementFactory.prototype.createConnection = function(attrs) {\n  return this.create('connection', attrs);\n};\n\n/**\n * Create a model element with the given type and\n * a number of pre-set attributes.\n *\n * @param  {String} type\n * @param  {Object} attrs\n * @return {djs.model.Base} the newly created model instance\n */\nElementFactory.prototype.create = function(type, attrs) {\n\n  attrs = assign({}, attrs || {});\n\n  if (!attrs.id) {\n    attrs.id = type + '_' + (this._uid++);\n  }\n\n  return Model.create(type, attrs);\n};","'use strict';\n\nvar ELEMENT_ID = 'data-element-id';\n\nvar svgAttr = require(322);\n\n\n/**\n * @class\n *\n * A registry that keeps track of all shapes in the diagram.\n */\nfunction ElementRegistry() {\n  this._elements = {};\n}\n\nmodule.exports = ElementRegistry;\n\n/**\n * Register a pair of (element, gfx, (secondaryGfx)).\n *\n * @param {djs.model.Base} element\n * @param {SVGElement} gfx\n * @param {SVGElement} [secondaryGfx] optional other element to register, too\n */\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\n\n  var id = element.id;\n\n  this._validateId(id);\n\n  // associate dom node with element\n  svgAttr(gfx, ELEMENT_ID, id);\n\n  if (secondaryGfx) {\n    svgAttr(secondaryGfx, ELEMENT_ID, id);\n  }\n\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\n};\n\n/**\n * Removes an element from the registry.\n *\n * @param {djs.model.Base} element\n */\nElementRegistry.prototype.remove = function(element) {\n  var elements = this._elements,\n      id = element.id || element,\n      container = id && elements[id];\n\n  if (container) {\n\n    // unset element id on gfx\n    svgAttr(container.gfx, ELEMENT_ID, '');\n\n    if (container.secondaryGfx) {\n      svgAttr(container.secondaryGfx, ELEMENT_ID, '');\n    }\n\n    delete elements[id];\n  }\n};\n\n/**\n * Update the id of an element\n *\n * @param {djs.model.Base} element\n * @param {String} newId\n */\nElementRegistry.prototype.updateId = function(element, newId) {\n\n  this._validateId(newId);\n\n  if (typeof element === 'string') {\n    element = this.get(element);\n  }\n\n  var gfx = this.getGraphics(element),\n      secondaryGfx = this.getGraphics(element, true);\n\n  this.remove(element);\n\n  element.id = newId;\n\n  this.add(element, gfx, secondaryGfx);\n};\n\n/**\n * Return the model element for a given id or graphics.\n *\n * @example\n *\n * elementRegistry.get('SomeElementId_1');\n * elementRegistry.get(gfx);\n *\n *\n * @param {String|SVGElement} filter for selecting the element\n *\n * @return {djs.model.Base}\n */\nElementRegistry.prototype.get = function(filter) {\n  var id;\n\n  if (typeof filter === 'string') {\n    id = filter;\n  } else {\n    id = filter && svgAttr(filter, ELEMENT_ID);\n  }\n\n  var container = this._elements[id];\n  return container && container.element;\n};\n\n/**\n * Return all elements that match a given filter function.\n *\n * @param {Function} fn\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.filter = function(fn) {\n\n  var filtered = [];\n\n  this.forEach(function(element, gfx) {\n    if (fn(element, gfx)) {\n      filtered.push(element);\n    }\n  });\n\n  return filtered;\n};\n\n/**\n * Return all rendered model elements.\n *\n * @return {Array<djs.model.Base>}\n */\nElementRegistry.prototype.getAll = function() {\n  return this.filter(function(e) { return e; });\n};\n\n/**\n * Iterate over all diagram elements.\n *\n * @param {Function} fn\n */\nElementRegistry.prototype.forEach = function(fn) {\n\n  var map = this._elements;\n\n  Object.keys(map).forEach(function(id) {\n    var container = map[id],\n        element = container.element,\n        gfx = container.gfx;\n\n    return fn(element, gfx);\n  });\n};\n\n/**\n * Return the graphical representation of an element or its id.\n *\n * @example\n * elementRegistry.getGraphics('SomeElementId_1');\n * elementRegistry.getGraphics(rootElement); // <g ...>\n *\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\n *\n *\n * @param {String|djs.model.Base} filter\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\n *\n * @return {SVGElement}\n */\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\n  var id = filter.id || filter;\n\n  var container = this._elements[id];\n  return container && (secondary ? container.secondaryGfx : container.gfx);\n};\n\n/**\n * Validate the suitability of the given id and signals a problem\n * with an exception.\n *\n * @param {String} id\n *\n * @throws {Error} if id is empty or already assigned\n */\nElementRegistry.prototype._validateId = function(id) {\n  if (!id) {\n    throw new Error('element must have an id');\n  }\n\n  if (this._elements[id]) {\n    throw new Error('element with id ' + id + ' already added');\n  }\n};\n","'use strict';\n\nvar isFunction = require(242),\n    isArray = require(241),\n    isNumber = require(244),\n    bind = require(142),\n    assign = require(250);\n\nvar FN_REF = '__fn';\n\nvar DEFAULT_PRIORITY = 1000;\n\nvar slice = Array.prototype.slice;\n\n/**\n * A general purpose event bus.\n *\n * This component is used to communicate across a diagram instance.\n * Other parts of a diagram can use it to listen to and broadcast events.\n *\n *\n * ## Registering for Events\n *\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\n * methods to register for events. {@link EventBus#off} can be used to\n * remove event registrations. Listeners receive an instance of {@link Event}\n * as the first argument. It allows them to hook into the event execution.\n *\n * ```javascript\n *\n * // listen for event\n * eventBus.on('foo', function(event) {\n *\n *   // access event type\n *   event.type; // 'foo'\n *\n *   // stop propagation to other listeners\n *   event.stopPropagation();\n *\n *   // prevent event default\n *   event.preventDefault();\n * });\n *\n * // listen for event with custom payload\n * eventBus.on('bar', function(event, payload) {\n *   console.log(payload);\n * });\n *\n * // listen for event returning value\n * eventBus.on('foobar', function(event) {\n *\n *   // stop event propagation + prevent default\n *   return false;\n *\n *   // stop event propagation + return custom result\n *   return {\n *     complex: 'listening result'\n *   };\n * });\n *\n *\n * // listen with custom priority (default=1000, higher is better)\n * eventBus.on('priorityfoo', 1500, function(event) {\n *   console.log('invoked first!');\n * });\n *\n *\n * // listen for event and pass the context (`this`)\n * eventBus.on('foobar', function(event) {\n *   this.foo();\n * }, this);\n * ```\n *\n *\n * ## Emitting Events\n *\n * Events can be emitted via the event bus using {@link EventBus#fire}.\n *\n * ```javascript\n *\n * // false indicates that the default action\n * // was prevented by listeners\n * if (eventBus.fire('foo') === false) {\n *   console.log('default has been prevented!');\n * };\n *\n *\n * // custom args + return value listener\n * eventBus.on('sum', function(event, a, b) {\n *   return a + b;\n * });\n *\n * // you can pass custom arguments + retrieve result values.\n * var sum = eventBus.fire('sum', 1, 2);\n * console.log(sum); // 3\n * ```\n */\nfunction EventBus() {\n  this._listeners = {};\n\n  // cleanup on destroy on lowest priority to allow\n  // message passing until the bitter end\n  this.on('diagram.destroy', 1, this._destroy, this);\n}\n\nmodule.exports = EventBus;\n\n\n/**\n * Register an event listener for events with the given name.\n *\n * The callback will be invoked with `event, ...additionalArguments`\n * that have been passed to {@link EventBus#fire}.\n *\n * Returning false from a listener will prevent the events default action\n * (if any is specified). To stop an event from being processed further in\n * other listeners execute {@link Event#stopPropagation}.\n *\n * Returning anything but `undefined` from a listener will stop the listener propagation.\n *\n * @param {String|Array<String>} events\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.on = function(events, priority, callback, that) {\n\n  events = isArray(events) ? events : [ events ];\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  var actualCallback = callback;\n\n  if (that) {\n    actualCallback = bind(callback, that);\n\n    // make sure we remember and are able to remove\n    // bound callbacks via {@link #off} using the original\n    // callback\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\n  }\n\n  var self = this,\n      listener = { priority: priority, callback: actualCallback };\n\n  events.forEach(function(e) {\n    self._addListener(e, listener);\n  });\n};\n\n\n/**\n * Register an event listener that is executed only once.\n *\n * @param {String} event the event name to register for\n * @param {Function} callback the callback to execute\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.once = function(event, priority, callback, that) {\n  var self = this;\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  function wrappedCallback() {\n    self.off(event, wrappedCallback);\n    return callback.apply(that, arguments);\n  }\n\n  // make sure we remember and are able to remove\n  // bound callbacks via {@link #off} using the original\n  // callback\n  wrappedCallback[FN_REF] = callback;\n\n  this.on(event, priority, wrappedCallback);\n};\n\n\n/**\n * Removes event listeners by event and callback.\n *\n * If no callback is given, all listeners for a given event name are being removed.\n *\n * @param {String} event\n * @param {Function} [callback]\n */\nEventBus.prototype.off = function(event, callback) {\n  var listeners = this._getListeners(event),\n      listener,\n      listenerCallback,\n      idx;\n\n  if (callback) {\n\n    // move through listeners from back to front\n    // and remove matching listeners\n    for (idx = listeners.length - 1; (listener = listeners[idx]); idx--) {\n      listenerCallback = listener.callback;\n\n      if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\n        listeners.splice(idx, 1);\n      }\n    }\n  } else {\n    // clear listeners\n    listeners.length = 0;\n  }\n};\n\n\n/**\n * Fires a named event.\n *\n * @example\n *\n * // fire event by name\n * events.fire('foo');\n *\n * // fire event object with nested type\n * var event = { type: 'foo' };\n * events.fire(event);\n *\n * // fire event with explicit type\n * var event = { x: 10, y: 20 };\n * events.fire('element.moved', event);\n *\n * // pass additional arguments to the event\n * events.on('foo', function(event, bar) {\n *   alert(bar);\n * });\n *\n * events.fire({ type: 'foo' }, 'I am bar!');\n *\n * @param {String} [name] the optional event name\n * @param {Object} [event] the event object\n * @param {...Object} additional arguments to be passed to the callback functions\n *\n * @return {Boolean} the events return value, if specified or false if the\n *                   default action was prevented by listeners\n */\nEventBus.prototype.fire = function(type, data) {\n\n  var event,\n      listeners,\n      returnValue,\n      args;\n\n  args = slice.call(arguments);\n\n  if (typeof type === 'object') {\n    event = type;\n    type = event.type;\n  }\n\n  if (!type) {\n    throw new Error('no event type specified');\n  }\n\n  listeners = this._listeners[type];\n\n  if (!listeners) {\n    return;\n  }\n\n  // we make sure we fire instances of our home made\n  // events here. We wrap them only once, though\n  if (data instanceof Event) {\n    // we are fine, we alread have an event\n    event = data;\n  } else {\n    event = new Event();\n    event.init(data);\n  }\n\n  // ensure we pass the event as the first parameter\n  args[0] = event;\n\n  // original event type (in case we delegate)\n  var originalType = event.type;\n\n  // update event type before delegation\n  if (type !== originalType) {\n    event.type = type;\n  }\n\n  try {\n    returnValue = this._invokeListeners(event, args, listeners);\n  } finally {\n    // reset event type after delegation\n    if (type !== originalType) {\n      event.type = originalType;\n    }\n  }\n\n  // set the return value to false if the event default\n  // got prevented and no other return value exists\n  if (returnValue === undefined && event.defaultPrevented) {\n    returnValue = false;\n  }\n\n  return returnValue;\n};\n\n\nEventBus.prototype.handleError = function(error) {\n  return this.fire('error', { error: error }) === false;\n};\n\n\nEventBus.prototype._destroy = function() {\n  this._listeners = {};\n};\n\nEventBus.prototype._invokeListeners = function(event, args, listeners) {\n\n  var idx,\n      listener,\n      returnValue;\n\n  for (idx = 0; (listener = listeners[idx]); idx++) {\n\n    // handle stopped propagation\n    if (event.cancelBubble) {\n      break;\n    }\n\n    returnValue = this._invokeListener(event, args, listener);\n  }\n\n  return returnValue;\n};\n\nEventBus.prototype._invokeListener = function(event, args, listener) {\n\n  var returnValue;\n\n  try {\n    // returning false prevents the default action\n    returnValue = invokeFunction(listener.callback, args);\n\n    // stop propagation on return value\n    if (returnValue !== undefined) {\n      event.returnValue = returnValue;\n      event.stopPropagation();\n    }\n\n    // prevent default on return false\n    if (returnValue === false) {\n      event.preventDefault();\n    }\n  } catch (e) {\n    if (!this.handleError(e)) {\n      console.error('unhandled error in event listener');\n      console.error(e.stack);\n\n      throw e;\n    }\n  }\n\n  return returnValue;\n};\n\n/*\n * Add new listener with a certain priority to the list\n * of listeners (for the given event).\n *\n * The semantics of listener registration / listener execution are\n * first register, first serve: New listeners will always be inserted\n * after existing listeners with the same priority.\n *\n * Example: Inserting two listeners with priority 1000 and 1300\n *\n *    * before: [ 1500, 1500, 1000, 1000 ]\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\n *\n * @param {String} event\n * @param {Object} listener { priority, callback }\n */\nEventBus.prototype._addListener = function(event, newListener) {\n\n  var listeners = this._getListeners(event),\n      existingListener,\n      idx;\n\n  // ensure we order listeners by priority from\n  // 0 (high) to n > 0 (low)\n  for (idx = 0; (existingListener = listeners[idx]); idx++) {\n    if (existingListener.priority < newListener.priority) {\n\n      // prepend newListener at before existingListener\n      listeners.splice(idx, 0, newListener);\n      return;\n    }\n  }\n\n  listeners.push(newListener);\n};\n\n\nEventBus.prototype._getListeners = function(name) {\n  var listeners = this._listeners[name];\n\n  if (!listeners) {\n    this._listeners[name] = listeners = [];\n  }\n\n  return listeners;\n};\n\n\n/**\n * A event that is emitted via the event bus.\n */\nfunction Event() { }\n\nmodule.exports.Event = Event;\n\nEvent.prototype.stopPropagation = function() {\n  this.cancelBubble = true;\n};\n\nEvent.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n};\n\nEvent.prototype.init = function(data) {\n  assign(this, data || {});\n};\n\n\n/**\n * Invoke function. Be fast...\n *\n * @param {Function} fn\n * @param {Array<Object>} args\n *\n * @return {Any}\n */\nfunction invokeFunction(fn, args) {\n  return fn.apply(null, args);\n}\n","'use strict';\n\nvar forEach = require(136),\n    reduce = require(139);\n\nvar GraphicsUtil = require(107);\n\nvar translate = require(112).translate;\n\nvar domClear = require(262);\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgClasses = require(323),\n    svgCreate = require(325),\n    svgRemove = require(328);\n\n\n/**\n * A factory that creates graphical elements\n *\n * @param {EventBus} eventBus\n * @param {ElementRegistry} elementRegistry\n */\nfunction GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\n\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\n\nmodule.exports = GraphicsFactory;\n\n\nGraphicsFactory.prototype._getChildren = function(element) {\n\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  var childrenGfx;\n\n  // root element\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = GraphicsUtil.getChildren(gfx);\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n\n  return childrenGfx;\n};\n\n/**\n * Clears the graphical representation of the element and returns the\n * cleared visual (the <g class=\"djs-visual\" /> element).\n */\nGraphicsFactory.prototype._clear = function(gfx) {\n  var visual = GraphicsUtil.getVisual(gfx);\n\n  domClear(visual);\n\n  return visual;\n};\n\n/**\n * Creates a gfx container for shapes and connections\n *\n * The layout is as follows:\n *\n * <g class=\"djs-group\">\n *\n *   <!-- the gfx -->\n *   <g class=\"djs-element djs-(shape|connection)\">\n *     <g class=\"djs-visual\">\n *       <!-- the renderer draws in here -->\n *     </g>\n *\n *     <!-- extensions (overlays, click box, ...) goes here\n *   </g>\n *\n *   <!-- the gfx child nodes -->\n *   <g class=\"djs-children\"></g>\n * </g>\n *\n * @param {Object} parent\n * @param {String} type the type of the element, i.e. shape | connection\n */\nGraphicsFactory.prototype._createContainer = function(type, parentGfx) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group');\n\n  svgAppend(parentGfx, outerGfx);\n\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n\n  svgAppend(outerGfx, gfx);\n\n  // create visual\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n\n  svgAppend(gfx, visual);\n\n  return gfx;\n};\n\nGraphicsFactory.prototype.create = function(type, element) {\n  var childrenGfx = this._getChildren(element.parent);\n  return this._createContainer(type, childrenGfx);\n};\n\nGraphicsFactory.prototype.updateContainments = function(elements) {\n\n  var self = this,\n      elementRegistry = this._elementRegistry,\n      parents;\n\n  parents = reduce(elements, function(map, e) {\n\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n\n    return map;\n  }, {});\n\n  // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n  forEach(parents, function(parent) {\n\n    var childGfx = self._getChildren(parent),\n        children = parent.children;\n\n    if (!children) {\n      return;\n    }\n\n    forEach(children.slice().reverse(), function(c) {\n      var gfx = elementRegistry.getGraphics(c);\n\n      prependTo(gfx.parentNode, childGfx);\n    });\n  });\n};\n\nGraphicsFactory.prototype.drawShape = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getShapePath = function(element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getShapePath', element);\n};\n\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\n};\n\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\n  var eventBus = this._eventBus;\n\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\n\nGraphicsFactory.prototype.update = function(type, element, gfx) {\n  // Do not update root element\n  if (!element.parent) {\n    return;\n  }\n\n  var visual = this._clear(gfx);\n\n  // redraw\n  if (type === 'shape') {\n    this.drawShape(visual, element);\n\n    // update positioning\n    translate(gfx, element.x, element.y);\n  } else\n  if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\n\nGraphicsFactory.prototype.remove = function(element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  // remove\n  svgRemove(gfx.parentNode);\n};\n\n////////// helpers ///////////\n\nfunction prependTo(newNode, parentNode) {\n  parentNode.insertBefore(newNode, parentNode.firstChild);\n}\n","module.exports = {\n  __depends__: [ require(85) ],\n  __init__: [ 'canvas' ],\n  canvas: [ 'type', require(76) ],\n  elementRegistry: [ 'type', require(78) ],\n  elementFactory: [ 'type', require(77) ],\n  eventBus: [ 'type', require(79) ],\n  graphicsFactory: [ 'type', require(80) ]\n};","'use strict';\n\nvar DEFAULT_RENDER_PRIORITY = 1000;\n\n/**\n * The base implementation of shape and connection renderers.\n *\n * @param {EventBus} eventBus\n * @param {Number} [renderPriority=1000]\n */\nfunction BaseRenderer(eventBus, renderPriority) {\n  var self = this;\n\n  renderPriority = renderPriority || DEFAULT_RENDER_PRIORITY;\n\n  eventBus.on([ 'render.shape', 'render.connection' ], renderPriority, function(evt, context) {\n    var type = evt.type,\n        element = context.element,\n        visuals = context.gfx;\n\n    if (self.canRender(element)) {\n      if (type === 'render.shape') {\n        return self.drawShape(visuals, element);\n      } else {\n        return self.drawConnection(visuals, element);\n      }\n    }\n  });\n\n  eventBus.on([ 'render.getShapePath', 'render.getConnectionPath'], renderPriority, function(evt, element) {\n    if (self.canRender(element)) {\n      if (evt.type === 'render.getShapePath') {\n        return self.getShapePath(element);\n      } else {\n        return self.getConnectionPath(element);\n      }\n    }\n  });\n}\n\n/**\n * Should check whether *this* renderer can render\n * the element/connection.\n *\n * @param {element} element\n *\n * @returns {Boolean}\n */\nBaseRenderer.prototype.canRender = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Shape} shape\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawShape = function() {};\n\n/**\n * Provides the shape's snap svg element to be drawn on the `canvas`.\n *\n * @param {djs.Graphics} visuals\n * @param {Connection} connection\n *\n * @returns {Snap.svg} [returns a Snap.svg paper element ]\n */\nBaseRenderer.prototype.drawConnection = function() {};\n\n/**\n * Gets the SVG path of a shape that represents it's visual bounds.\n *\n * @param {Shape} shape\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getShapePath = function() {};\n\n/**\n * Gets the SVG path of a connection that represents it's visual bounds.\n *\n * @param {Connection} connection\n *\n * @return {string} svg path\n */\nBaseRenderer.prototype.getConnectionPath = function() {};\n\nmodule.exports = BaseRenderer;\n","'use strict';\n\nvar inherits = require(126);\n\nvar BaseRenderer = require(82);\n\nvar renderUtil = require(111);\n\nvar componentsToPath = renderUtil.componentsToPath,\n    createLine = renderUtil.createLine;\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgCreate = require(325);\n\n// apply default renderer with lowest possible priority\n// so that it only kicks in if noone else could render\nvar DEFAULT_RENDER_PRIORITY = 1;\n\n/**\n * The default renderer used for shapes and connections.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n */\nfunction DefaultRenderer(eventBus, styles) {\n  //\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\n\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\n}\n\ninherits(DefaultRenderer, BaseRenderer);\n\n\nDefaultRenderer.prototype.canRender = function() {\n  return true;\n};\n\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element) {\n\n  var rect = svgCreate('rect');\n  svgAttr(rect, {\n    x: 0,\n    y: 0,\n    width: element.width || 0,\n    height: element.height || 0\n  });\n  svgAttr(rect, this.SHAPE_STYLE);\n\n  svgAppend(visuals, rect);\n\n  return rect;\n};\n\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection) {\n\n  var line = createLine(connection.waypoints, this.CONNECTION_STYLE);\n  svgAppend(visuals, line);\n\n  return line;\n};\n\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\n\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var shapePath = [\n    ['M', x, y],\n    ['l', width, 0],\n    ['l', 0, height],\n    ['l', -width, 0],\n    ['z']\n  ];\n\n  return componentsToPath(shapePath);\n};\n\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\n  var waypoints = connection.waypoints;\n\n  var idx, point, connectionPath = [];\n\n  for (idx = 0; (point = waypoints[idx]); idx++) {\n\n    // take invisible docking into account\n    // when creating the path\n    point = point.original || point;\n\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\n  }\n\n  return componentsToPath(connectionPath);\n};\n\n\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\n\nmodule.exports = DefaultRenderer;\n","'use strict';\n\nvar isArray = require(241),\n    assign = require(250),\n    reduce = require(139);\n\n\n/**\n * A component that manages shape styles\n */\nfunction Styles() {\n\n  var defaultTraits = {\n\n    'no-fill': {\n      fill: 'none'\n    },\n    'no-border': {\n      strokeOpacity: 0.0\n    },\n    'no-events': {\n      pointerEvents: 'none'\n    }\n  };\n\n  var self = this;\n\n  /**\n   * Builds a style definition from a className, a list of traits and an object of additional attributes.\n   *\n   * @param  {String} className\n   * @param  {Array<String>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.cls = function(className, traits, additionalAttrs) {\n    var attrs = this.style(traits, additionalAttrs);\n\n    return assign(attrs, { 'class': className });\n  };\n\n  /**\n   * Builds a style definition from a list of traits and an object of additional attributes.\n   *\n   * @param  {Array<String>} traits\n   * @param  {Object} additionalAttrs\n   *\n   * @return {Object} the style defintion\n   */\n  this.style = function(traits, additionalAttrs) {\n\n    if (!isArray(traits) && !additionalAttrs) {\n      additionalAttrs = traits;\n      traits = [];\n    }\n\n    var attrs = reduce(traits, function(attrs, t) {\n      return assign(attrs, defaultTraits[t] || {});\n    }, {});\n\n    return additionalAttrs ? assign(attrs, additionalAttrs) : attrs;\n  };\n\n  this.computeStyle = function(custom, traits, defaultStyles) {\n    if (!isArray(traits)) {\n      defaultStyles = traits;\n      traits = [];\n    }\n\n    return self.style(traits || [], assign({}, defaultStyles, custom || {}));\n  };\n}\n\nmodule.exports = Styles;\n","module.exports = {\n  __init__: [ 'defaultRenderer' ],\n  defaultRenderer: [ 'type', require(83) ],\n  styles: [ 'type', require(84) ]\n};\n","'use strict';\n\nvar isFunction = require(242),\n    isArray = require(241),\n    forEach = require(136),\n\n    domDelegate = require(263),\n    domEvent = require(265),\n    domAttr = require(260),\n    domQuery = require(266),\n    domClasses = require(261),\n    domify = require(264);\n\n\nvar entrySelector = '.entry';\n\n\n/**\n * A context pad that displays element specific, contextual actions next\n * to a diagram element.\n *\n * @param {EventBus} eventBus\n * @param {Overlays} overlays\n */\nfunction ContextPad(eventBus, overlays) {\n\n  this._providers = [];\n\n  this._eventBus = eventBus;\n  this._overlays = overlays;\n\n  this._current = null;\n\n  this._init();\n}\n\nContextPad.$inject = [ 'eventBus', 'overlays' ];\n\nmodule.exports = ContextPad;\n\n\n/**\n * Registers events needed for interaction with other components\n */\nContextPad.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n  eventBus.on('selection.changed', function(e) {\n\n    var selection = e.newSelection;\n\n    if (selection.length === 1) {\n      self.open(selection[0]);\n    } else {\n      self.close();\n    }\n  });\n\n  eventBus.on('elements.delete', function(event) {\n    var elements = event.elements;\n\n    forEach(elements, function(e) {\n      if (self.isOpen(e)) {\n        self.close();\n      }\n    });\n  });\n\n  eventBus.on('element.changed', function(event) {\n    var element = event.element,\n        current = self._current;\n\n    // force reopen if element for which we are currently opened changed\n    if (current && current.element === element) {\n      self.open(element, true);\n    }\n  });\n};\n\n\n/**\n * Register a provider with the context pad\n *\n * @param  {ContextPadProvider} provider\n */\nContextPad.prototype.registerProvider = function(provider) {\n  this._providers.push(provider);\n};\n\n\n/**\n * Returns the context pad entries for a given element\n *\n * @param {djs.element.Base} element\n *\n * @return {Array<ContextPadEntryDescriptor>} list of entries\n */\nContextPad.prototype.getEntries = function(element) {\n  var entries = {};\n\n  // loop through all providers and their entries.\n  // group entries by id so that overriding an entry is possible\n  forEach(this._providers, function(provider) {\n    var e = provider.getContextPadEntries(element);\n\n    forEach(e, function(entry, id) {\n      entries[id] = entry;\n    });\n  });\n\n  return entries;\n};\n\n\n/**\n * Trigger an action available on the opened context pad\n *\n * @param  {String} action\n * @param  {Event} event\n * @param  {Boolean} [autoActivate=false]\n */\nContextPad.prototype.trigger = function(action, event, autoActivate) {\n\n  var element = this._current.element,\n      entries = this._current.entries,\n      entry,\n      handler,\n      originalEvent,\n      button = event.delegateTarget || event.target;\n\n  if (!button) {\n    return event.preventDefault();\n  }\n\n  entry = entries[domAttr(button, 'data-action')];\n  handler = entry.action;\n\n  originalEvent = event.originalEvent || event;\n\n  // simple action (via callback function)\n  if (isFunction(handler)) {\n    if (action === 'click') {\n      return handler(originalEvent, element, autoActivate);\n    }\n  } else {\n    if (handler[action]) {\n      return handler[action](originalEvent, element, autoActivate);\n    }\n  }\n\n  // silence other actions\n  event.preventDefault();\n};\n\n\n/**\n * Open the context pad for the given element\n *\n * @param {djs.model.Base} element\n * @param {Boolean} force if true, force reopening the context pad\n */\nContextPad.prototype.open = function(element, force) {\n  if (!force && this.isOpen(element)) {\n    return;\n  }\n\n  this.close();\n  this._updateAndOpen(element);\n};\n\n\nContextPad.prototype._updateAndOpen = function(element) {\n\n  var entries = this.getEntries(element),\n      pad = this.getPad(element),\n      html = pad.html;\n\n  forEach(entries, function(entry, id) {\n    var grouping = entry.group || 'default',\n        control = domify(entry.html || '<div class=\"entry\" draggable=\"true\"></div>'),\n        container;\n\n    domAttr(control, 'data-action', id);\n\n    container = domQuery('[data-group=' + grouping + ']', html);\n    if (!container) {\n      container = domify('<div class=\"group\" data-group=\"' + grouping + '\"></div>');\n      html.appendChild(container);\n    }\n\n    container.appendChild(control);\n\n    if (entry.className) {\n      addClasses(control, entry.className);\n    }\n\n    if (entry.title) {\n      domAttr(control, 'title', entry.title);\n    }\n\n    if (entry.imageUrl) {\n      control.appendChild(domify('<img src=\"' + entry.imageUrl + '\">'));\n    }\n  });\n\n  domClasses(html).add('open');\n\n  this._current = {\n    element: element,\n    pad: pad,\n    entries: entries\n  };\n\n  this._eventBus.fire('contextPad.open', { current: this._current });\n};\n\n\nContextPad.prototype.getPad = function(element) {\n  if (this.isOpen()) {\n    return this._current.pad;\n  }\n\n  var self = this;\n\n  var overlays = this._overlays;\n\n  var html = domify('<div class=\"djs-context-pad\"></div>');\n\n  domDelegate.bind(html, entrySelector, 'click', function(event) {\n    self.trigger('click', event);\n  });\n\n  domDelegate.bind(html, entrySelector, 'dragstart', function(event) {\n    self.trigger('dragstart', event);\n  });\n\n  // stop propagation of mouse events\n  domEvent.bind(html, 'mousedown', function(event) {\n    event.stopPropagation();\n  });\n\n  this._overlayId = overlays.add(element, 'context-pad', {\n    position: {\n      right: -9,\n      top: -6\n    },\n    html: html\n  });\n\n  var pad = overlays.get(this._overlayId);\n\n  this._eventBus.fire('contextPad.create', { element: element, pad: pad });\n\n  return pad;\n};\n\n\n/**\n * Close the context pad\n */\nContextPad.prototype.close = function() {\n  if (!this.isOpen()) {\n    return;\n  }\n\n  this._overlays.remove(this._overlayId);\n\n  this._overlayId = null;\n\n  this._eventBus.fire('contextPad.close', { current: this._current });\n\n  this._current = null;\n};\n\n/**\n * Check if pad is open. If element is given, will check\n * if pad is opened with given element.\n *\n * @param {Element} element\n * @return {Boolean}\n */\nContextPad.prototype.isOpen = function(element) {\n  return !!this._current && (!element ? true : this._current.element === element);\n};\n\n\n\n\n////////// helpers /////////////////////////////\n\nfunction addClasses(element, classNames) {\n\n  var classes = domClasses(element);\n\n  var actualClassNames = isArray(classNames) ? classNames : classNames.split(//s+/g);\n  actualClassNames.forEach(function(cls) {\n    classes.add(cls);\n  });\n}","module.exports = {\n  __depends__: [\n    require(89),\n    require(93)\n  ],\n  contextPad: [ 'type', require(86) ]\n};","'use strict';\n\nvar forEach = require(136),\n    domDelegate = require(263);\n\nvar isPrimaryButton = require(109).isPrimaryButton;\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgCreate = require(325);\n\nvar domQuery = require(266);\n\nvar renderUtil = require(111);\n\nvar createLine = renderUtil.createLine,\n    updateLine = renderUtil.updateLine;\n\nvar LOW_PRIORITY = 500;\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.hover\n *   * element.out\n *   * element.click\n *   * element.dblclick\n *   * element.mousedown\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault() prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nfunction InteractionEvents(eventBus, elementRegistry, styles) {\n\n  var HIT_STYLE = styles.cls('djs-hit', [ 'no-fill', 'no-border' ], {\n    stroke: 'white',\n    strokeWidth: 15\n  });\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {String} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n\n    // only react on left mouse button interactions\n    // for interaction events\n    if (!isPrimaryButton(event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, { element: element, gfx: gfx, originalEvent: event });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n\n  function mouseHandler(type) {\n\n    var fn = handlers[type];\n\n    if (!fn) {\n      fn = handlers[type] = function(event) {\n        fire(type, event);\n      };\n    }\n\n    return fn;\n  }\n\n  var bindings = {\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    click: 'element.click',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mouseup: 'element.mouseup'\n  };\n\n\n  ///// manual event trigger\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {String} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n\n  var elementSelector = 'svg, .djs-element';\n\n  ///// event registration\n\n  function registerEvent(node, event, localEvent) {\n    var handler = mouseHandler(localEvent);\n    handler.$delegate = domDelegate.bind(node, elementSelector, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n    domDelegate.unbind(node, event, mouseHandler(localEvent).$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function(val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function(val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function(event) {\n    unregisterEvents(event.svg);\n  });\n\n  eventBus.on('canvas.init', function(event) {\n    registerEvents(event.svg);\n  });\n\n\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx,\n        hit;\n\n    if (element.waypoints) {\n      hit = createLine(element.waypoints);\n    } else {\n      hit = svgCreate('rect');\n      svgAttr(hit, {\n        x: 0,\n        y: 0,\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    svgAttr(hit, HIT_STYLE);\n\n    svgAppend(gfx, hit);\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on('shape.changed', LOW_PRIORITY, function(event) {\n\n    var element = event.element,\n        gfx = event.gfx,\n        hit = domQuery('.djs-hit', gfx);\n\n    svgAttr(hit, {\n      width: element.width,\n      height: element.height\n    });\n  });\n\n  eventBus.on('connection.changed', function(event) {\n\n    var element = event.element,\n        gfx = event.gfx,\n        hit = domQuery('.djs-hit', gfx);\n\n    updateLine(hit, element.waypoints);\n  });\n\n\n  // API\n\n  this.fire = fire;\n\n  this.triggerMouseEvent = triggerMouseEvent;\n\n  this.mouseHandler = mouseHandler;\n\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\n\n\nInteractionEvents.$inject = [ 'eventBus', 'elementRegistry', 'styles' ];\n\nmodule.exports = InteractionEvents;\n\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n","module.exports = {\n  __init__: [ 'interactionEvents' ],\n  interactionEvents: [ 'type', require(88) ]\n};","'use strict';\n\nvar getBBox = require(105).getBBox;\n\nvar LOW_PRIORITY = 500;\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgCreate = require(325);\n\nvar domQuery = require(266);\n\nvar assign = require(250);\n\n\n/**\n * @class\n *\n * A plugin that adds an outline to shapes and connections that may be activated and styled\n * via CSS classes.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n * @param {ElementRegistry} elementRegistry\n */\nfunction Outline(eventBus, styles, elementRegistry) {\n\n  this.offset = 6;\n\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\n\n  var self = this;\n\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n\n    svgAppend(gfx, outline);\n\n    return outline;\n  }\n\n  // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx     = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateShapeOutline(outline, element);\n  });\n\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\n    var element = event.element,\n        gfx     = event.gfx;\n\n    var outline = domQuery('.djs-outline', gfx);\n\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n\n    self.updateConnectionOutline(outline, element);\n  });\n}\n\n\n/**\n * Updates the outline of a shape respecting the dimension of the\n * element and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateShapeOutline = function(outline, element) {\n\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n\n};\n\n\n/**\n * Updates the outline of a connection respecting the bounding box of\n * the connection and an outline offset.\n *\n * @param  {SVGElement} outline\n * @param  {djs.model.Base} element\n */\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\n\n  var bbox = getBBox(connection);\n\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n\n};\n\n\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];\n\nmodule.exports = Outline;\n","'use strict';\n\nmodule.exports = {\n  __init__: [ 'outline' ],\n  outline: [ 'type', require(90) ]\n};","'use strict';\n\nvar isArray = require(241),\n    isString = require(247),\n    isObject = require(245),\n    assign = require(250),\n    forEach = require(136),\n    find = require(135),\n    filter = require(134);\n\nvar domify = require(264),\n    domClasses = require(261),\n    domAttr = require(260),\n    domRemove = require(267),\n    domClear = require(262);\n\nvar getBBox = require(105).getBBox;\n\n// document wide unique overlay ids\nvar ids = new (require(108))('ov');\n\nvar LOW_PRIORITY = 500;\n\n\nfunction createRoot(parent) {\n  var root = domify('<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />');\n  parent.insertBefore(root, parent.firstChild);\n\n  return root;\n}\n\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nfunction Overlays(eventBus, canvas, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  this._overlayDefaults = {\n    show: {\n      minZoom: 0.7,\n      maxZoom: 5.0\n    }\n  };\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [ 'eventBus', 'canvas', 'elementRegistry' ];\n\nmodule.exports = Overlays;\n\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {String} [search.id]\n * @param {String|djs.model.Base} [search.element]\n * @param {String} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, { type: search.type }) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else\n  if (search.type) {\n    return filter(this._overlays, { type: search.type });\n  } else {\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {String|djs.model.Base}   element   attach overlay to this shape\n * @param {String}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {String|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {Number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {Number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {Number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {Number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {Number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {Number}                  [overlay.position.right]     relative to element bbox right attachment\n *\n * @return {String}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {String} [id]\n * @param {Object} [filter]\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n};\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var a = viewbox.scale || 1;\n  var d = viewbox.scale || 1;\n\n  var matrix = 'matrix(' + a + ',0,0,' + d + ',' + (-1 * viewbox.x * a) + ',' + (-1 * viewbox.y * d) + ')';\n\n  this._overlayRoot.style.transform = matrix;\n  this._overlayRoot.style['-ms-transform'] = matrix;\n  this._overlayRoot.style['-webkit-transform'] = matrix;\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\n\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      htmlContainer = overlay.htmlContainer,\n      visible = true;\n\n  if (show) {\n    if (show.minZoom > viewbox.scale ||\n        show.maxZoom < viewbox.scale) {\n      visible = false;\n    }\n\n    setVisible(htmlContainer, visible);\n  }\n};\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n","module.exports = {\n  __init__: [ 'overlays' ],\n  overlays: [ 'type', require(92) ]\n};","\n'use strict';\n\nvar inherits = require(126);\n\nvar CommandInterceptor = require(75);\n\n/**\n * A basic provider that may be extended to implement modeling rules.\n *\n * Extensions should implement the init method to actually add their custom\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\n *\n * @param {EventBus} eventBus\n */\nfunction RuleProvider(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.init();\n}\n\nRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(RuleProvider, CommandInterceptor);\n\nmodule.exports = RuleProvider;\n\n\n/**\n * Adds a modeling rule for the given action, implemented through\n * a callback function.\n *\n * The function will receive the modeling specific action context\n * to perform its check. It must return `false` to disallow the\n * action from happening or `true` to allow the action.\n *\n * A rule provider may pass over the evaluation to lower priority\n * rules by returning return nothing (or <code>undefined</code>).\n *\n * @example\n *\n * ResizableRules.prototype.init = function() {\n *\n *   //**\n *    * Return `true`, `false` or nothing to denote\n *    * _allowed_, _not allowed_ and _continue evaluating_.\n *    *//\n *   this.addRule('shape.resize', function(context) {\n *\n *     var shape = context.shape;\n *\n *     if (!context.newBounds) {\n *       // check general resizability\n *       if (!shape.resizable) {\n *         return false;\n *       }\n *\n *       // not returning anything (read: undefined)\n *       // will continue the evaluation of other rules\n *       // (with lower priority)\n *       return;\n *     } else {\n *       // element must have minimum size of 10*10 points\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\n *     }\n *   });\n * };\n *\n * @param {String|Array<String>} actions the identifier for the modeling action to check\n * @param {Number} [priority] the priority at which this rule is being applied\n * @param {Function} fn the callback function that performs the actual check\n */\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\n\n  var self = this;\n\n  if (typeof actions === 'string') {\n    actions = [ actions ];\n  }\n\n  actions.forEach(function(action) {\n\n    self.canExecute(action, priority, function(context, action, event) {\n      return fn(context);\n    }, true);\n  });\n};\n\n/**\n * Implement this method to add new rules during provider initialization.\n */\nRuleProvider.prototype.init = function() {};","'use strict';\n\n/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nfunction Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\nmodule.exports = Rules;\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {String} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {Boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};","module.exports = {\n  __init__: [ 'rules' ],\n  rules: [ 'type', require(95) ]\n};\n","'use strict';\n\nvar isArray = require(241),\n    forEach = require(136);\n\n\n/**\n * A service that offers the current selection in a diagram.\n * Offers the api to control the selection, too.\n *\n * @class\n *\n * @param {EventBus} eventBus the event bus\n */\nfunction Selection(eventBus) {\n\n  this._eventBus = eventBus;\n\n  this._selectedElements = [];\n\n  var self = this;\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    self.deselect(element);\n  });\n\n  eventBus.on([ 'diagram.clear' ], function(e) {\n    self.select(null);\n  });\n}\n\nSelection.$inject = [ 'eventBus' ];\n\nmodule.exports = Selection;\n\n\nSelection.prototype.deselect = function(element) {\n  var selectedElements = this._selectedElements;\n\n  var idx = selectedElements.indexOf(element);\n\n  if (idx !== -1) {\n    var oldSelection = selectedElements.slice();\n\n    selectedElements.splice(idx, 1);\n\n    this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n  }\n};\n\n\nSelection.prototype.get = function() {\n  return this._selectedElements;\n};\n\nSelection.prototype.isSelected = function(element) {\n  return this._selectedElements.indexOf(element) !== -1;\n};\n\n\n/**\n * This method selects one or more elements on the diagram.\n *\n * By passing an additional add parameter you can decide whether or not the element(s)\n * should be added to the already existing selection or not.\n *\n * @method Selection#select\n *\n * @param  {Object|Object[]} elements element or array of elements to be selected\n * @param  {boolean} [add] whether the element(s) should be appended to the current selection, defaults to false\n */\nSelection.prototype.select = function(elements, add) {\n  var selectedElements = this._selectedElements,\n      oldSelection = selectedElements.slice();\n\n  if (!isArray(elements)) {\n    elements = elements ? [ elements ] : [];\n  }\n\n  // selection may be cleared by passing an empty array or null\n  // to the method\n  if (add) {\n    forEach(elements, function(element) {\n      if (selectedElements.indexOf(element) !== -1) {\n        // already selected\n        return;\n      } else {\n        selectedElements.push(element);\n      }\n    });\n  } else {\n    this._selectedElements = selectedElements = elements.slice();\n  }\n\n  this._eventBus.fire('selection.changed', { oldSelection: oldSelection, newSelection: selectedElements });\n};\n","'use strict';\n\nvar hasPrimaryModifier = require(109).hasPrimaryModifier;\n\nvar find = require(135);\n\n\nfunction SelectionBehavior(eventBus, selection, canvas, elementRegistry) {\n\n  eventBus.on('create.end', 500, function(e) {\n\n    // select the created shape after a\n    // successful create operation\n    if (e.context.canExecute) {\n      selection.select(e.context.shape);\n    }\n  });\n\n  eventBus.on('connect.end', 500, function(e) {\n\n    // select the connect end target\n    // after a connect operation\n    if (e.context.canExecute && e.context.target) {\n      selection.select(e.context.target);\n    }\n  });\n\n  eventBus.on('shape.move.end', 500, function(e) {\n    var previousSelection = e.previousSelection || [];\n\n    var shape = elementRegistry.get(e.context.shape.id);\n\n    // make sure at least the main moved element is being\n    // selected after a move operation\n    var inSelection = find(previousSelection, function(selectedShape) {\n      return shape.id === selectedShape.id;\n    });\n\n    if (!inSelection) {\n      selection.select(shape);\n    }\n  });\n\n  // Shift + click selection\n  eventBus.on('element.click', function(event) {\n\n    var element = event.element;\n\n    // do not select the root element\n    // or connections\n    if (element === canvas.getRootElement()) {\n      element = null;\n    }\n\n    var isSelected = selection.isSelected(element),\n        isMultiSelect = selection.get().length > 1;\n\n    // mouse-event: SELECTION_KEY\n    var add = hasPrimaryModifier(event);\n\n    // select OR deselect element in multi selection\n    if (isSelected && isMultiSelect) {\n      if (add) {\n        return selection.deselect(element);\n      } else {\n        return selection.select(element);\n      }\n    } else\n    if (!isSelected) {\n      selection.select(element, add);\n    } else {\n      selection.deselect(element);\n    }\n  });\n}\n\nSelectionBehavior.$inject = [ 'eventBus', 'selection', 'canvas', 'elementRegistry' ];\nmodule.exports = SelectionBehavior;\n","'use strict';\n\nvar forEach = require(136);\n\nvar MARKER_HOVER = 'hover',\n    MARKER_SELECTED = 'selected';\n\n\n/**\n * A plugin that adds a visible selection UI to shapes and connections\n * by appending the <code>hover</code> and <code>selected</code> classes to them.\n *\n * @class\n *\n * Makes elements selectable, too.\n *\n * @param {EventBus} events\n * @param {SelectionService} selection\n * @param {Canvas} canvas\n */\nfunction SelectionVisuals(events, canvas, selection, styles) {\n\n  this._multiSelectionBox = null;\n\n  function addMarker(e, cls) {\n    canvas.addMarker(e, cls);\n  }\n\n  function removeMarker(e, cls) {\n    canvas.removeMarker(e, cls);\n  }\n\n  events.on('element.hover', function(event) {\n    addMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('element.out', function(event) {\n    removeMarker(event.element, MARKER_HOVER);\n  });\n\n  events.on('selection.changed', function(event) {\n\n    function deselect(s) {\n      removeMarker(s, MARKER_SELECTED);\n    }\n\n    function select(s) {\n      addMarker(s, MARKER_SELECTED);\n    }\n\n    var oldSelection = event.oldSelection,\n        newSelection = event.newSelection;\n\n    forEach(oldSelection, function(e) {\n      if (newSelection.indexOf(e) === -1) {\n        deselect(e);\n      }\n    });\n\n    forEach(newSelection, function(e) {\n      if (oldSelection.indexOf(e) === -1) {\n        select(e);\n      }\n    });\n  });\n}\n\nSelectionVisuals.$inject = [\n  'eventBus',\n  'canvas',\n  'selection',\n  'styles'\n];\n\nmodule.exports = SelectionVisuals;\n","module.exports = {\n  __init__: [ 'selectionVisuals', 'selectionBehavior' ],\n  __depends__: [\n    require(89),\n    require(91)\n  ],\n  selection: [ 'type', require(97) ],\n  selectionVisuals: [ 'type', require(99) ],\n  selectionBehavior: [ 'type', require(98) ]\n};\n","module.exports = {\n  translate: [ 'value', require(102) ]\n};","'use strict';\n\n/**\n * A simple translation stub to be used for multi-language support\n * in diagrams. Can be easily replaced with a more sophisticated\n * solution.\n *\n * @example\n *\n * // use it inside any diagram component by injecting `translate`.\n *\n * function MyService(translate) {\n *   alert(translate('HELLO {you}', { you: 'You!' }));\n * }\n *\n * @param {String} template to interpolate\n * @param {Object} [replacements] a map with substitutes\n *\n * @return {String} the translated string\n */\nmodule.exports = function translate(template, replacements) {\n\n  replacements = replacements || {};\n\n  return template.replace(/{([^}]+)}/g, function(_, key) {\n    return replacements[key] || '{' + key + '}';\n  });\n};","'use strict';\n\nvar assign = require(250),\n    inherits = require(126);\n\nvar Refs = require(280);\n\nvar parentRefs = new Refs({ name: 'children', enumerable: true, collection: true }, { name: 'parent' }),\n    labelRefs = new Refs({ name: 'label', enumerable: true }, { name: 'labelTarget' }),\n    attacherRefs = new Refs({ name: 'attachers', collection: true }, { name: 'host' }),\n    outgoingRefs = new Refs({ name: 'outgoing', collection: true }, { name: 'source' }),\n    incomingRefs = new Refs({ name: 'incoming', collection: true }, { name: 'target' });\n\n/**\n * @namespace djs.model\n */\n\n/**\n * @memberOf djs.model\n */\n\n/**\n * The basic graphical representation\n *\n * @class\n *\n * @abstract\n */\nfunction Base() {\n\n  /**\n   * The object that backs up the shape\n   *\n   * @name Base#businessObject\n   * @type Object\n   */\n  Object.defineProperty(this, 'businessObject', {\n    writable: true\n  });\n\n  /**\n   * The parent shape\n   *\n   * @name Base#parent\n   * @type Shape\n   */\n  parentRefs.bind(this, 'parent');\n\n  /**\n   * @name Base#label\n   * @type Label\n   */\n  labelRefs.bind(this, 'label');\n\n  /**\n   * The list of outgoing connections\n   *\n   * @name Base#outgoing\n   * @type Array<Connection>\n   */\n  outgoingRefs.bind(this, 'outgoing');\n\n  /**\n   * The list of incoming connections\n   *\n   * @name Base#incoming\n   * @type Array<Connection>\n   */\n  incomingRefs.bind(this, 'incoming');\n}\n\n\n/**\n * A graphical object\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nfunction Shape() {\n  Base.call(this);\n\n  /**\n   * The list of children\n   *\n   * @name Shape#children\n   * @type Array<Base>\n   */\n  parentRefs.bind(this, 'children');\n\n  /**\n   * @name Shape#host\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'host');\n\n  /**\n   * @name Shape#attachers\n   * @type Shape\n   */\n  attacherRefs.bind(this, 'attachers');\n}\n\ninherits(Shape, Base);\n\n\n/**\n * A root graphical object\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nfunction Root() {\n  Shape.call(this);\n}\n\ninherits(Root, Shape);\n\n\n/**\n * A label for an element\n *\n * @class\n * @constructor\n *\n * @extends Shape\n */\nfunction Label() {\n  Shape.call(this);\n\n  /**\n   * The labeled element\n   *\n   * @name Label#labelTarget\n   * @type Base\n   */\n  labelRefs.bind(this, 'labelTarget');\n}\n\ninherits(Label, Shape);\n\n\n/**\n * A connection between two elements\n *\n * @class\n * @constructor\n *\n * @extends Base\n */\nfunction Connection() {\n  Base.call(this);\n\n  /**\n   * The element this connection originates from\n   *\n   * @name Connection#source\n   * @type Base\n   */\n  outgoingRefs.bind(this, 'source');\n\n  /**\n   * The element this connection points to\n   *\n   * @name Connection#target\n   * @type Base\n   */\n  incomingRefs.bind(this, 'target');\n}\n\ninherits(Connection, Base);\n\n\nvar types = {\n  connection: Connection,\n  shape: Shape,\n  label: Label,\n  root: Root\n};\n\n/**\n * Creates a new model element of the specified type\n *\n * @method create\n *\n * @example\n *\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\n *\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\n *\n * @param  {String} type lower-cased model name\n * @param  {Object} attrs attributes to initialize the new model instance with\n *\n * @return {Base} the new model instance\n */\nmodule.exports.create = function(type, attrs) {\n  var Type = types[type];\n  if (!Type) {\n    throw new Error('unknown type: <' + type + '>');\n  }\n  return assign(new Type(), attrs);\n};\n\n\nmodule.exports.Base = Base;\nmodule.exports.Root = Root;\nmodule.exports.Shape = Shape;\nmodule.exports.Connection = Connection;\nmodule.exports.Label = Label;\n","'use strict';\n\n/**\n * Failsafe remove an element from a collection\n *\n * @param  {Array<Object>} [collection]\n * @param  {Object} [element]\n *\n * @return {Number} the previous index of the element\n */\nmodule.exports.remove = function(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  var idx = collection.indexOf(element);\n\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n\n  return idx;\n};\n\n/**\n * Fail save add an element to the given connection, ensuring\n * it does not yet exist.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n * @param {Number} idx\n */\nmodule.exports.add = function(collection, element, idx) {\n\n  if (!collection || !element) {\n    return;\n  }\n\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n\n  var currentIdx = collection.indexOf(element);\n\n  if (currentIdx !== -1) {\n\n    if (currentIdx === idx) {\n      // nothing to do, position has not changed\n      return;\n    } else {\n\n      if (idx !== -1) {\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n        // already exists in collection\n        return;\n      }\n    }\n  }\n\n  if (idx !== -1) {\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n    // push to end\n    collection.push(element);\n  }\n};\n\n\n/**\n * Fail save get the index of an element in a collection.\n *\n * @param {Array<Object>} collection\n * @param {Object} element\n *\n * @return {Number} the index or -1 if collection or element do\n *                  not exist or the element is not contained.\n */\nmodule.exports.indexOf = function(collection, element) {\n\n  if (!collection || !element) {\n    return -1;\n  }\n\n  return collection.indexOf(element);\n};\n","'use strict';\n\nvar isArray = require(241),\n    isNumber = require(244),\n    groupBy = require(137),\n    forEach = require(136);\n\n/**\n * Adds an element to a collection and returns true if the\n * element was added.\n *\n * @param {Array<Object>} elements\n * @param {Object} e\n * @param {Boolean} unique\n */\nfunction add(elements, e, unique) {\n  var canAdd = !unique || elements.indexOf(e) === -1;\n\n  if (canAdd) {\n    elements.push(e);\n  }\n\n  return canAdd;\n}\n\n/**\n * Iterate over each element in a collection, calling the iterator function `fn`\n * with (element, index, recursionDepth).\n *\n * Recurse into all elements that are returned by `fn`.\n *\n * @param  {Object|Array<Object>} elements\n * @param  {Function} fn iterator function called with (element, index, recursionDepth)\n * @param  {Number} [depth] maximum recursion depth\n */\nfunction eachElement(elements, fn, depth) {\n\n  depth = depth || 0;\n\n  if (!isArray(elements)) {\n    elements = [ elements ];\n  }\n\n  forEach(elements, function(s, i) {\n    var filter = fn(s, i, depth);\n\n    if (isArray(filter) && filter.length) {\n      eachElement(filter, fn, depth + 1);\n    }\n  });\n}\n\n/**\n * Collects self + child elements up to a given depth from a list of elements.\n *\n * @param  {djs.model.Base|Array<djs.model.Base>} elements the elements to select the children from\n * @param  {Boolean} unique whether to return a unique result set (no duplicates)\n * @param  {Number} maxDepth the depth to search through or -1 for infinite\n *\n * @return {Array<djs.model.Base>} found elements\n */\nfunction selfAndChildren(elements, unique, maxDepth) {\n  var result = [],\n      processedChildren = [];\n\n  eachElement(elements, function(element, i, depth) {\n    add(result, element, unique);\n\n    var children = element.children;\n\n    // max traversal depth not reached yet\n    if (maxDepth === -1 || depth < maxDepth) {\n\n      // children exist && children not yet processed\n      if (children && add(processedChildren, children, unique)) {\n        return children;\n      }\n    }\n  });\n\n  return result;\n}\n\n/**\n * Return self + direct children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nfunction selfAndDirectChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, 1);\n}\n\n/**\n * Return self + ALL children for a number of elements\n *\n * @param  {Array<djs.model.Base>} elements to query\n * @param  {Boolean} allowDuplicates to allow duplicates in the result set\n *\n * @return {Array<djs.model.Base>} the collected elements\n */\nfunction selfAndAllChildren(elements, allowDuplicates) {\n  return selfAndChildren(elements, !allowDuplicates, -1);\n}\n\n/**\n * Gets the the closure for all selected elements,\n * their connections and their attachment's connections\n *\n * @param {Array<djs.model.Base>} elements\n * @return {Object} enclosure\n */\nfunction getClosure(elements) {\n\n  // original elements passed to this function\n  var topLevel = groupBy(elements, function(e) { return e.id; });\n\n  var allShapes = {},\n      allConnections = {},\n      enclosedElements = {},\n      enclosedConnections = {};\n\n  function handleConnection(c) {\n    if (topLevel[c.source.id] && topLevel[c.target.id]) {\n      topLevel[c.id] = c;\n    }\n\n    // not enclosed as a child, but maybe logically\n    // (connecting two moved elements?)\n    if (allShapes[c.source.id] && allShapes[c.target.id]) {\n      enclosedConnections[c.id] = enclosedElements[c.id] = c;\n    }\n\n    allConnections[c.id] = c;\n  }\n\n  function handleElement(element) {\n\n    enclosedElements[element.id] = element;\n\n    if (element.waypoints) {\n      // remember connection\n      enclosedConnections[element.id] = allConnections[element.id] = element;\n    } else {\n      // remember shape\n      allShapes[element.id] = element;\n\n      // remember all connections\n      forEach(element.incoming, handleConnection);\n\n      forEach(element.outgoing, handleConnection);\n\n      // recurse into children\n      return element.children;\n    }\n  }\n\n  eachElement(elements, handleElement);\n\n  return {\n    allShapes: allShapes,\n    allConnections: allConnections,\n    topLevel: topLevel,\n    enclosedConnections: enclosedConnections,\n    enclosedElements: enclosedElements\n  };\n}\n\n/**\n * Returns the surrounding bbox for all elements in\n * the array or the element primitive.\n *\n * @param {Array<djs.model.Shape>|djs.model.Shape} elements\n * @param {Boolean} stopRecursion\n */\nfunction getBBox(elements, stopRecursion) {\n\n  stopRecursion = !!stopRecursion;\n  if (!isArray(elements)) {\n    elements = [elements];\n  }\n\n  var minX,\n      minY,\n      maxX,\n      maxY;\n\n  forEach(elements, function(element) {\n\n    // If element is a connection the bbox must be computed first\n    var bbox = element;\n    if (element.waypoints && !stopRecursion) {\n      bbox = getBBox(element.waypoints, true);\n    }\n\n    var x = bbox.x,\n        y = bbox.y,\n        height = bbox.height || 0,\n        width  = bbox.width  || 0;\n\n    if (x < minX || minX === undefined) {\n      minX = x;\n    }\n    if (y < minY || minY === undefined) {\n      minY = y;\n    }\n\n    if ((x + width) > maxX || maxX === undefined) {\n      maxX = x + width;\n    }\n    if ((y + height) > maxY || maxY === undefined) {\n      maxY = y + height;\n    }\n  });\n\n  return {\n    x: minX,\n    y: minY,\n    height: maxY - minY,\n    width: maxX - minX\n  };\n}\n\n\n/**\n * Returns all elements that are enclosed from the bounding box.\n *\n *   * If bbox.(width|height) is not specified the method returns\n *     all elements with element.x/y > bbox.x/y\n *   * If only bbox.x or bbox.y is specified, method return all elements with\n *     e.x > bbox.x or e.y > bbox.y\n *\n * @param {Array<djs.model.Shape>} elements List of Elements to search through\n * @param {djs.model.Shape} bbox the enclosing bbox.\n *\n * @return {Array<djs.model.Shape>} enclosed elements\n */\nfunction getEnclosedElements(elements, bbox) {\n\n  var filteredElements = {};\n\n  forEach(elements, function(element) {\n\n    var e = element;\n\n    if (e.waypoints) {\n      e = getBBox(e);\n    }\n\n    if (!isNumber(bbox.y) && (e.x > bbox.x)) {\n      filteredElements[element.id] = element;\n    }\n    if (!isNumber(bbox.x) && (e.y > bbox.y)) {\n      filteredElements[element.id] = element;\n    }\n    if (e.x > bbox.x && e.y > bbox.y) {\n      if (isNumber(bbox.width) && isNumber(bbox.height) &&\n          e.width  + e.x < bbox.width  + bbox.x &&\n          e.height + e.y < bbox.height + bbox.y) {\n\n        filteredElements[element.id] = element;\n      } else if (!isNumber(bbox.width) || !isNumber(bbox.height)) {\n        filteredElements[element.id] = element;\n      }\n    }\n  });\n\n  return filteredElements;\n}\n\n\nmodule.exports.add = add;\nmodule.exports.eachElement = eachElement;\nmodule.exports.selfAndDirectChildren = selfAndDirectChildren;\nmodule.exports.selfAndAllChildren = selfAndAllChildren;\nmodule.exports.getBBox = getBBox;\nmodule.exports.getEnclosedElements = getEnclosedElements;\n\nmodule.exports.getClosure = getClosure;\n\n\nfunction getElementType(element) {\n\n  if ('waypoints' in element) {\n    return 'connection';\n  }\n\n  if ('x' in element) {\n    return 'shape';\n  }\n\n  return 'root';\n}\n\nmodule.exports.getType = getElementType;","'use strict';\n\nfunction __preventDefault(event) {\n  return event && event.preventDefault();\n}\n\nfunction __stopPropagation(event, immediate) {\n  if (!event) {\n    return;\n  }\n\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n\n  if (immediate && event.stopImmediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}\n\n\nfunction getOriginal(event) {\n  return event.originalEvent || event.srcEvent;\n}\n\nmodule.exports.getOriginal = getOriginal;\n\n\nfunction stopEvent(event, immediate) {\n  stopPropagation(event, immediate);\n  preventDefault(event);\n}\n\nmodule.exports.stopEvent = stopEvent;\n\n\nfunction preventDefault(event) {\n  __preventDefault(event);\n  __preventDefault(getOriginal(event));\n}\n\nmodule.exports.preventDefault = preventDefault;\n\n\nfunction stopPropagation(event, immediate) {\n  __stopPropagation(event, immediate);\n  __stopPropagation(getOriginal(event), immediate);\n}\n\nmodule.exports.stopPropagation = stopPropagation;\n\n\nfunction toPoint(event) {\n\n  if (event.pointers && event.pointers.length) {\n    event = event.pointers[0];\n  }\n\n  if (event.touches && event.touches.length) {\n    event = event.touches[0];\n  }\n\n  return event ? {\n    x: event.clientX,\n    y: event.clientY\n  } : null;\n}\n\nmodule.exports.toPoint = toPoint;\n","'use strict';\n\nvar domQuery = require(266);\n\n/**\n * SVGs for elements are generated by the {@link GraphicsFactory}.\n *\n * This utility gives quick access to the important semantic\n * parts of an element.\n */\n\n/**\n * Returns the visual part of a diagram element\n *\n * @param {Snap<SVGElement>} gfx\n *\n * @return {Snap<SVGElement>}\n */\nfunction getVisual(gfx) {\n  return domQuery('.djs-visual', gfx);\n}\n\n/**\n * Returns the children for a given diagram element.\n *\n * @param {Snap<SVGElement>} gfx\n * @return {Snap<SVGElement>}\n */\nfunction getChildren(gfx) {\n  return gfx.parentNode.childNodes[1];\n}\n\nmodule.exports.getVisual = getVisual;\nmodule.exports.getChildren = getChildren;\n","'use strict';\n\n/**\n * Util that provides unique IDs.\n *\n * @class djs.util.IdGenerator\n * @constructor\n * @memberOf djs.util\n *\n * The ids can be customized via a given prefix and contain a random value to avoid collisions.\n *\n * @param {String} prefix a prefix to prepend to generated ids (for better readability)\n */\nfunction IdGenerator(prefix) {\n\n  this._counter = 0;\n  this._prefix = (prefix ? prefix + '-' : '') + Math.floor(Math.random() * 1000000000) + '-';\n}\n\nmodule.exports = IdGenerator;\n\n/**\n * Returns a next unique ID.\n *\n * @method djs.util.IdGenerator#next\n *\n * @returns {String} the id\n */\nIdGenerator.prototype.next = function() {\n  return this._prefix + (++this._counter);\n};\n","'use strict';\n\nvar getOriginalEvent = require(106).getOriginal;\n\nvar isMac = require(110).isMac;\n\n\nfunction isPrimaryButton(event) {\n  // button === 0 -> left áka primary mouse button\n  return !(getOriginalEvent(event) || event).button;\n}\n\nmodule.exports.isPrimaryButton = isPrimaryButton;\n\nmodule.exports.isMac = isMac;\n\nmodule.exports.hasPrimaryModifier = function(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  if (!isPrimaryButton(event)) {\n    return false;\n  }\n\n  // Use alt as primary modifier key for mac OS\n  if (isMac()) {\n    return originalEvent.metaKey;\n  } else {\n    return originalEvent.ctrlKey;\n  }\n};\n\n\nmodule.exports.hasSecondaryModifier = function(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  return isPrimaryButton(event) && originalEvent.shiftKey;\n};\n","'use strict';\n\nmodule.exports.isMac = function isMac() {\n  return (/mac/i).test(navigator.platform);\n};","'use strict';\n\nvar svgAttr = require(322),\n    svgCreate = require(325);\n\n\nmodule.exports.componentsToPath = function(elements) {\n  return elements.join(',').replace(/,?([A-z]),?/g, '$1');\n};\n\nfunction toSVGPoints(points) {\n  var result = '';\n\n  for (var i = 0, p; (p = points[i]); i++) {\n    result += p.x + ',' + p.y + ' ';\n  }\n\n  return result;\n}\n\nmodule.exports.toSVGPoints = toSVGPoints;\n\nmodule.exports.createLine = function(points, attrs) {\n\n  var line = svgCreate('polyline');\n  svgAttr(line, { points: toSVGPoints(points) });\n\n  if (attrs) {\n    svgAttr(line, attrs);\n  }\n\n  return line;\n};\n\nmodule.exports.updateLine = function(gfx, points) {\n  svgAttr(gfx, { points: toSVGPoints(points) });\n\n  return gfx;\n};\n","'use strict';\r\n\r\nvar svgTransform = require(329);\r\n\r\nvar createTransform = require(326).createTransform;\r\n\r\n\r\n/**\r\n * @param {<SVGElement>} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} angle\r\n * @param {Number} amount\r\n */\r\nmodule.exports.transform = function(gfx, x, y, angle, amount) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  var scale = createTransform();\r\n  scale.setScale(amount || 1, amount || 1);\r\n\r\n  svgTransform(gfx, [ translate, rotate, scale ]);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nmodule.exports.translate = function(gfx, x, y) {\r\n  var translate = createTransform();\r\n  translate.setTranslate(x, y);\r\n\r\n  svgTransform(gfx, translate);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} angle\r\n */\r\nmodule.exports.rotate = function(gfx, angle) {\r\n  var rotate = createTransform();\r\n  rotate.setRotate(angle, 0, 0);\r\n\r\n  svgTransform(gfx, rotate);\r\n};\r\n\r\n\r\n/**\r\n * @param {SVGElement} element\r\n * @param {Number} amount\r\n */\r\nmodule.exports.scale = function(gfx, amount) {\r\n  var scale = createTransform();\r\n  scale.setScale(amount, amount);\r\n\r\n  svgTransform(gfx, scale);\r\n};\r\n","'use strict';\n\nvar isObject = require(245),\n    assign = require(250),\n    pick = require(256),\n    forEach = require(136),\n    reduce = require(139),\n    merge = require(253);\n\nvar svgAppend = require(320),\n    svgAttr = require(322),\n    svgCreate = require(325),\n    svgRemove = require(328);\n\nvar DEFAULT_BOX_PADDING = 0;\n\nvar DEFAULT_LABEL_SIZE = {\n  width: 150,\n  height: 50\n};\n\n\nfunction parseAlign(align) {\n\n  var parts = align.split('-');\n\n  return {\n    horizontal: parts[0] || 'center',\n    vertical: parts[1] || 'top'\n  };\n}\n\nfunction parsePadding(padding) {\n\n  if (isObject(padding)) {\n    return assign({ top: 0, left: 0, right: 0, bottom: 0 }, padding);\n  } else {\n    return {\n      top: padding,\n      left: padding,\n      right: padding,\n      bottom: padding\n    };\n  }\n}\n\nfunction getTextBBox(text, fakeText) {\n\n  fakeText.textContent = text;\n\n  try {\n    var bbox,\n        emptyLine = text === '';\n\n    // add dummy text, when line is empty to determine correct height\n    fakeText.textContent = emptyLine ? 'dummy' : text;\n\n    bbox = pick(fakeText.getBBox(), [ 'width', 'height' ]);\n\n    if (emptyLine) {\n      // correct width\n      bbox.width = 0;\n    }\n\n    return bbox;\n  } catch (e) {\n    return { width: 0, height: 0 };\n  }\n}\n\n\n/**\n * Layout the next line and return the layouted element.\n *\n * Alters the lines passed.\n *\n * @param  {Array<String>} lines\n * @return {Object} the line descriptor, an object { width, height, text }\n */\nfunction layoutNext(lines, maxWidth, fakeText) {\n\n  var originalLine = lines.shift(),\n      fitLine = originalLine;\n\n  var textBBox;\n\n  for (;;) {\n    textBBox = getTextBBox(fitLine, fakeText);\n\n    textBBox.width = fitLine ? textBBox.width : 0;\n\n    // try to fit\n    if (fitLine === ' ' || fitLine === '' || textBBox.width < Math.round(maxWidth) || fitLine.length < 4) {\n      return fit(lines, fitLine, originalLine, textBBox);\n    }\n\n    fitLine = shortenLine(fitLine, textBBox.width, maxWidth);\n  }\n}\n\nfunction fit(lines, fitLine, originalLine, textBBox) {\n  if (fitLine.length < originalLine.length) {\n    var nextLine = lines[0] || '',\n        remainder = originalLine.slice(fitLine.length).trim();\n\n    if (/-/s*$/.test(remainder)) {\n      nextLine = remainder + nextLine.replace(/^/s+/, '');\n    } else {\n      nextLine = remainder + ' ' + nextLine;\n    }\n\n    lines[0] = nextLine;\n  }\n  return { width: textBBox.width, height: textBBox.height, text: fitLine };\n}\n\n\n/**\n * Shortens a line based on spacing and hyphens.\n * Returns the shortened result on success.\n *\n * @param  {String} line\n * @param  {Number} maxLength the maximum characters of the string\n * @return {String} the shortened string\n */\nfunction semanticShorten(line, maxLength) {\n  var parts = line.split(/(/s|-)/g),\n      part,\n      shortenedParts = [],\n      length = 0;\n\n  // try to shorten via spaces + hyphens\n  if (parts.length > 1) {\n    while ((part = parts.shift())) {\n      if (part.length + length < maxLength) {\n        shortenedParts.push(part);\n        length += part.length;\n      } else {\n        // remove previous part, too if hyphen does not fit anymore\n        if (part === '-') {\n          shortenedParts.pop();\n        }\n\n        break;\n      }\n    }\n  }\n\n  return shortenedParts.join('');\n}\n\n\nfunction shortenLine(line, width, maxWidth) {\n  var length = Math.max(line.length * (maxWidth / width), 1);\n\n  // try to shorten semantically (i.e. based on spaces and hyphens)\n  var shortenedLine = semanticShorten(line, length);\n\n  if (!shortenedLine) {\n\n    // force shorten by cutting the long word\n    shortenedLine = line.slice(0, Math.max(Math.round(length - 1), 1));\n  }\n\n  return shortenedLine;\n}\n\n\n/**\n * Creates a new label utility\n *\n * @param {Object} config\n * @param {Dimensions} config.size\n * @param {Number} config.padding\n * @param {Object} config.style\n * @param {String} config.align\n */\nfunction Text(config) {\n\n  this._config = assign({}, {\n    size: DEFAULT_LABEL_SIZE,\n    padding: DEFAULT_BOX_PADDING,\n    style: {},\n    align: 'center-top'\n  }, config || {});\n}\n\n\n/**\n * Create a label in the parent node.\n *\n * @method Text#createText\n *\n * @param {SVGElement} parent the parent to draw the label on\n * @param {String} text the text to render on the label\n * @param {Object} options\n * @param {String} options.align how to align in the bounding box.\n *                             Any of { 'center-middle', 'center-top' }, defaults to 'center-top'.\n * @param {String} options.style style to be applied to the text\n *\n * @return {SVGText} the text element created\n */\nText.prototype.createText = function(parent, text, options) {\n\n  var box = merge({}, this._config.size, options.box || {}),\n      style = merge({}, this._config.style, options.style || {}),\n      align = parseAlign(options.align || this._config.align),\n      padding = parsePadding(options.padding !== undefined ? options.padding : this._config.padding);\n\n  var lines = text.split(//r?/n/g),\n      layouted = [];\n\n  var maxWidth = box.width - padding.left - padding.right;\n\n  // FF regression: ensure text is shown during rendering\n  // by attaching it directly to the body\n  var fakeText = svgCreate('text');\n  svgAttr(fakeText, { x: 0, y: 0 });\n  svgAttr(fakeText, style);\n\n  svgAppend(parent, fakeText);\n\n  while (lines.length) {\n    layouted.push(layoutNext(lines, maxWidth, fakeText));\n  }\n\n  var totalHeight = reduce(layouted, function(sum, line, idx) {\n    return sum + line.height;\n  }, 0);\n\n  // the y position of the next line\n  var y, x;\n\n  switch (align.vertical) {\n  case 'middle':\n    y = (box.height - totalHeight) / 2 - layouted[0].height / 4;\n    break;\n\n  default:\n    y = padding.top;\n  }\n\n  var textElement = svgCreate('text');\n\n  svgAttr(textElement, style);\n\n  svgAppend(parent, textElement);\n\n  forEach(layouted, function(line) {\n    y += line.height;\n\n    switch (align.horizontal) {\n    case 'left':\n      x = padding.left;\n      break;\n\n    case 'right':\n      x = (maxWidth - padding.right - line.width);\n      break;\n\n    default:\n        // aka center\n      x = Math.max(((maxWidth - line.width) / 2 + padding.left), 0);\n    }\n\n    var tspan = svgCreate('tspan');\n    svgAttr(tspan, { x: x, y: y });\n\n    tspan.textContent = line.text;\n\n    svgAppend(textElement, tspan);\n  });\n\n  // remove fake text\n  svgRemove(fakeText);\n\n  return textElement;\n};\n\n\nmodule.exports = Text;\n","\nvar isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nvar annotate = function() {\n  var args = Array.prototype.slice.call(arguments);\n  \n  if (args.length === 1 && isArray(args[0])) {\n    args = args[0];\n  }\n\n  var fn = args.pop();\n\n  fn.$inject = args;\n\n  return fn;\n};\n\n\n// Current limitations:\n// - can't put into \"function arg\" comments\n// function /* (no parenthesis like this) */ (){}\n// function abc( /* xx (no parenthesis like this) */ a, b) {}\n//\n// Just put the comment before function or inside:\n// /* (((this is fine))) */ function(a, b) {}\n// function abc(a) { /* (((this is fine))) */}\n\nvar FN_ARGS = /^function/s*[^/(]*/(/s*([^/)]*)/)/m;\nvar FN_ARG = ////*([^/*]*)/*///m;\n\nvar parse = function(fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('Cannot annotate \"' + fn + '\". Expected a function!');\n  }\n\n  var match = fn.toString().match(FN_ARGS);\n  return match[1] && match[1].split(',').map(function(arg) {\n    match = arg.match(FN_ARG);\n    return match ? match[1].trim() : arg.trim();\n  }) || [];\n};\n\n\nexports.annotate = annotate;\nexports.parse = parse;\nexports.isArray = isArray;\n","module.exports = {\n  annotate: require(114).annotate,\n  Module: require(117),\n  Injector: require(116)\n};\n","var Module = require(117);\nvar autoAnnotate = require(114).parse;\nvar annotate = require(114).annotate;\nvar isArray = require(114).isArray;\n\n\nvar Injector = function(modules, parent) {\n  parent = parent || {\n    get: function(name, strict) {\n      currentlyResolving.push(name);\n\n      if (strict === false) {\n        return null;\n      } else {\n        throw error('No provider for \"' + name + '\"!');\n      }\n    }\n  };\n\n  var currentlyResolving = [];\n  var providers = this._providers = Object.create(parent._providers || null);\n  var instances = this._instances = Object.create(null);\n\n  var self = instances.injector = this;\n\n  var error = function(msg) {\n    var stack = currentlyResolving.join(' -> ');\n    currentlyResolving.length = 0;\n    return new Error(stack ? msg + ' (Resolving: ' + stack + ')' : msg);\n  };\n\n  /**\n   * Return a named service.\n   *\n   * @param {String} name\n   * @param {Boolean} [strict=true] if false, resolve missing services to null\n   *\n   * @return {Object}\n   */\n  var get = function(name, strict) {\n    if (!providers[name] && name.indexOf('.') !== -1) {\n      var parts = name.split('.');\n      var pivot = get(parts.shift());\n\n      while(parts.length) {\n        pivot = pivot[parts.shift()];\n      }\n\n      return pivot;\n    }\n\n    if (Object.hasOwnProperty.call(instances, name)) {\n      return instances[name];\n    }\n\n    if (Object.hasOwnProperty.call(providers, name)) {\n      if (currentlyResolving.indexOf(name) !== -1) {\n        currentlyResolving.push(name);\n        throw error('Cannot resolve circular dependency!');\n      }\n\n      currentlyResolving.push(name);\n      instances[name] = providers[name][0](providers[name][1]);\n      currentlyResolving.pop();\n\n      return instances[name];\n    }\n\n    return parent.get(name, strict);\n  };\n\n  var instantiate = function(Type) {\n    var instance = Object.create(Type.prototype);\n    var returned = invoke(Type, instance);\n\n    return typeof returned === 'object' ? returned : instance;\n  };\n\n  var invoke = function(fn, context) {\n    if (typeof fn !== 'function') {\n      if (isArray(fn)) {\n        fn = annotate(fn.slice());\n      } else {\n        throw new Error('Cannot invoke \"' + fn + '\". Expected a function!');\n      }\n    }\n\n    var inject = fn.$inject && fn.$inject || autoAnnotate(fn);\n    var dependencies = inject.map(function(dep) {\n      return get(dep);\n    });\n\n    // TODO(vojta): optimize without apply\n    return fn.apply(context, dependencies);\n  };\n\n\n  var createPrivateInjectorFactory = function(privateChildInjector) {\n    return annotate(function(key) {\n      return privateChildInjector.get(key);\n    });\n  };\n\n  var createChild = function(modules, forceNewInstances) {\n    if (forceNewInstances && forceNewInstances.length) {\n      var fromParentModule = Object.create(null);\n      var matchedScopes = Object.create(null);\n\n      var privateInjectorsCache = [];\n      var privateChildInjectors = [];\n      var privateChildFactories = [];\n\n      var provider;\n      var cacheIdx;\n      var privateChildInjector;\n      var privateChildInjectorFactory;\n      for (var name in providers) {\n        provider = providers[name];\n\n        if (forceNewInstances.indexOf(name) !== -1) {\n          if (provider[2] === 'private') {\n            cacheIdx = privateInjectorsCache.indexOf(provider[3]);\n            if (cacheIdx === -1) {\n              privateChildInjector = provider[3].createChild([], forceNewInstances);\n              privateChildInjectorFactory = createPrivateInjectorFactory(privateChildInjector);\n              privateInjectorsCache.push(provider[3]);\n              privateChildInjectors.push(privateChildInjector);\n              privateChildFactories.push(privateChildInjectorFactory);\n              fromParentModule[name] = [privateChildInjectorFactory, name, 'private', privateChildInjector];\n            } else {\n              fromParentModule[name] = [privateChildFactories[cacheIdx], name, 'private', privateChildInjectors[cacheIdx]];\n            }\n          } else {\n            fromParentModule[name] = [provider[2], provider[1]];\n          }\n          matchedScopes[name] = true;\n        }\n\n        if ((provider[2] === 'factory' || provider[2] === 'type') && provider[1].$scope) {\n          /*jshint -W083 */\n          forceNewInstances.forEach(function(scope) {\n            if (provider[1].$scope.indexOf(scope) !== -1) {\n              fromParentModule[name] = [provider[2], provider[1]];\n              matchedScopes[scope] = true;\n            }\n          });\n        }\n      }\n\n      forceNewInstances.forEach(function(scope) {\n        if (!matchedScopes[scope]) {\n          throw new Error('No provider for \"' + scope + '\". Cannot use provider from the parent!');\n        }\n      });\n\n      modules.unshift(fromParentModule);\n    }\n\n    return new Injector(modules, self);\n  };\n\n  var factoryMap = {\n    factory: invoke,\n    type: instantiate,\n    value: function(value) {\n      return value;\n    }\n  };\n\n  modules.forEach(function(module) {\n\n    function arrayUnwrap(type, value) {\n      if (type !== 'value' && isArray(value)) {\n        value = annotate(value.slice());\n      }\n\n      return value;\n    }\n\n    // TODO(vojta): handle wrong inputs (modules)\n    if (module instanceof Module) {\n      module.forEach(function(provider) {\n        var name = provider[0];\n        var type = provider[1];\n        var value = provider[2];\n\n        providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n      });\n    } else if (typeof module === 'object') {\n      if (module.__exports__) {\n        var clonedModule = Object.keys(module).reduce(function(m, key) {\n          if (key.substring(0, 2) !== '__') {\n            m[key] = module[key];\n          }\n          return m;\n        }, Object.create(null));\n\n        var privateInjector = new Injector((module.__modules__ || []).concat([clonedModule]), self);\n        var getFromPrivateInjector = annotate(function(key) {\n          return privateInjector.get(key);\n        });\n        module.__exports__.forEach(function(key) {\n          providers[key] = [getFromPrivateInjector, key, 'private', privateInjector];\n        });\n      } else {\n        Object.keys(module).forEach(function(name) {\n          if (module[name][2] === 'private') {\n            providers[name] = module[name];\n            return;\n          }\n\n          var type = module[name][0];\n          var value = module[name][1];\n\n          providers[name] = [factoryMap[type], arrayUnwrap(type, value), type];\n        });\n      }\n    }\n  });\n\n  // public API\n  this.get = get;\n  this.invoke = invoke;\n  this.instantiate = instantiate;\n  this.createChild = createChild;\n};\n\nmodule.exports = Injector;\n","var Module = function() {\n  var providers = [];\n\n  this.factory = function(name, factory) {\n    providers.push([name, 'factory', factory]);\n    return this;\n  };\n\n  this.value = function(name, value) {\n    providers.push([name, 'value', value]);\n    return this;\n  };\n\n  this.type = function(name, type) {\n    providers.push([name, 'type', type]);\n    return this;\n  };\n\n  this.forEach = function(iterator) {\n    providers.forEach(iterator);\n  };\n};\n\nmodule.exports = Module;\n","module.exports = require(120);","'use strict';\n\nvar isString = require(247),\n    isFunction = require(242),\n    assign = require(250);\n\nvar Moddle = require(271),\n    XmlReader = require(269),\n    XmlWriter = require(270);\n\n/**\n * A sub class of {@link Moddle} with support for import and export of DMN xml files.\n *\n * @class DmnModdle\n * @extends Moddle\n *\n * @param {Object|Array} packages to use for instantiating the model\n * @param {Object} [options] additional options to pass over\n */\nfunction DmnModdle(packages, options) {\n  Moddle.call(this, packages, options);\n}\n\nDmnModdle.prototype = Object.create(Moddle.prototype);\n\nmodule.exports = DmnModdle;\n\n\n/**\n * Instantiates a DMN model tree from a given xml string.\n *\n * @param {String}   xmlStr\n * @param {String}   [typeName='dmn:Definitions'] name of the root element\n * @param {Object}   [options]  options to pass to the underlying reader\n * @param {Function} done       callback that is invoked with (err, result, parseContext)\n *                              once the import completes\n */\nDmnModdle.prototype.fromXML = function(xmlStr, typeName, options, done) {\n\n  if (!isString(typeName)) {\n    done = options;\n    options = typeName;\n    typeName = 'dmn:Definitions';\n  }\n\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var reader = new XmlReader(assign({ model: this, lax: true }, options));\n  var rootHandler = reader.handler(typeName);\n\n  reader.fromXML(xmlStr, rootHandler, done);\n};\n\n\n/**\n * Serializes a DMN object tree to XML.\n *\n * @param {String}   element    the root element, typically an instance of `Definitions`\n * @param {Object}   [options]  to pass to the underlying writer\n * @param {Function} done       callback invoked with (err, xmlStr) once the import completes\n */\nDmnModdle.prototype.toXML = function(element, options, done) {\n\n  if (isFunction(options)) {\n    done = options;\n    options = {};\n  }\n\n  var writer = new XmlWriter(options);\n  try {\n    var result = writer.toXML(element);\n    done(null, result);\n  } catch (e) {\n    done(e);\n  }\n};\n","'use strict';\n\nvar assign = require(250);\n\nvar DmnModdle = require(119);\n\nvar packages = {\n  dmn: require(124),\n  camunda: require(123),\n  dc: require(122),\n  biodi: require(121)\n};\n\nmodule.exports = function(additionalPackages, options) {\n  return new DmnModdle(assign({}, packages, additionalPackages), options);\n};\n","module.exports={\n  \"name\": \"bpmn.io DI for DMN\",\n  \"uri\": \"http://bpmn.io/schema/dmn/biodi/1.0\",\n  \"prefix\": \"biodi\",\n  \"xml\": {\n    \"tagAlias\": \"lowerCase\"\n  },\n  \"types\": [\n    {\n      \"name\": \"Edge\",\n      \"superClass\": [\n        \"Element\"\n      ],\n      \"properties\": [\n        { \"name\": \"source\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        },\n        { \"name\": \"waypoints\",\n          \"type\": \"Waypoint\",\n          \"isMany\": true,\n          \"xml\": { \"serialize\": \"property\" }\n        }\n      ]\n    },\n    {\n      \"name\": \"Bounds\",\n      \"superClass\": [\n        \"dc:Bounds\",\n        \"Element\"\n      ]\n    },\n    {\n      \"name\": \"Waypoint\",\n      \"superClass\": [\n        \"dc:Point\"\n      ]\n    }\n  ]\n}\n","module.exports={\n  \"name\": \"DC\",\n  \"uri\": \"http://www.omg.org/spec/DD/20100524/DC\",\n  \"types\": [\n    {\n      \"name\": \"Boolean\"\n    },\n    {\n      \"name\": \"Integer\"\n    },\n    {\n      \"name\": \"Real\"\n    },\n    {\n      \"name\": \"String\"\n    },\n    {\n      \"name\": \"Font\",\n      \"properties\": [\n        {\n          \"name\": \"name\",\n          \"type\": \"String\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"size\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isBold\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isItalic\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isUnderline\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"isStrikeThrough\",\n          \"type\": \"Boolean\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Point\",\n      \"properties\": [\n        {\n          \"name\": \"x\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Bounds\",\n      \"properties\": [\n        {\n          \"name\": \"x\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"y\",\n          \"type\": \"Real\",\n          \"default\": \"0\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"width\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        },\n        {\n          \"name\": \"height\",\n          \"type\": \"Real\",\n          \"isAttr\": true\n        }\n      ]\n    }\n  ],\n  \"prefix\": \"dc\",\n  \"associations\": []\n}\n","module.exports={\n  \"name\": \"Camunda\",\n  \"uri\": \"http://camunda.org/schema/1.0/dmn\",\n  \"prefix\": \"camunda\",\n  \"xml\": {\n    \"tagAlias\": \"lowerCase\"\n  },\n  \"types\": [\n    {\n      \"name\": \"InputVariable\",\n      \"extends\": [\n        \"dmn:InputClause\"\n      ],\n      \"properties\": [\n        {\n          \"name\": \"inputVariable\",\n          \"isAttr\": true,\n          \"type\": \"String\"\n        }\n      ]\n    }\n  ]\n}\n","module.exports={\n  \"name\": \"DMN\",\n  \"uri\": \"http://www.omg.org/spec/DMN/20151101/dmn.xsd\",\n  \"xml\": {\n    \"tagAlias\": \"lowerCase\"\n  },\n  \"prefix\": \"dmn\",\n  \"types\": [\n    {\n      \"name\": \"DMNElement\",\n      \"isAbstract\": true,\n      \"properties\": [\n        { \"name\": \"description\", \"type\": \"String\" },\n        { \"name\": \"id\", \"type\": \"String\", \"isAttr\": true, \"isId\": true },\n        { \"name\": \"label\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"extensionElements\", \"type\": \"ExtensionElements\" }\n      ]\n    },\n    {\n      \"name\": \"NamedElement\",\n      \"isAbstract\": true,\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"name\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"DMNElementReference\",\n      \"properties\": [\n        { \"name\": \"href\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"ExtensionElements\",\n      \"properties\": [\n        {\n          \"name\": \"values\",\n          \"type\": \"Element\",\n          \"isMany\": true\n        }\n      ]\n    },\n    {\n      \"name\": \"Definitions\",\n      \"superClass\": [ \"NamedElement\" ],\n      \"properties\": [\n        { \"name\": \"namespace\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"typeLanguage\", \"type\": \"String\", \"isAttr\": true, \"default\": \"http://www.omg.org/spec/FEEL/20140401\" },\n        { \"name\": \"expressionLanguage\", \"type\": \"String\", \"isAttr\": true, \"default\": \"http://www.omg.org/spec/FEEL/20140401\" },\n        { \"name\": \"exporter\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"exporterVersion\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"itemDefinition\", \"type\": \"ItemDefinition\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"drgElements\", \"type\": \"DRGElement\", \"isMany\": true },\n        { \"name\": \"artifacts\", \"type\": \"Artifact\", \"isMany\": true }\n      ]\n    },\n    {\n      \"name\": \"Import\",\n      \"properties\": [\n        { \"name\": \"namespace\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"locationURI\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"importType\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"DRGElement\",\n      \"isAbstract\": true,\n      \"superClass\": [ \"NamedElement\" ]\n    },\n    {\n      \"name\": \"Decision\",\n      \"superClass\": [ \"DRGElement\" ],\n      \"properties\": [\n        { \"name\": \"question\", \"type\": \"String\" },\n        { \"name\": \"allowedAnswers\", \"type\": \"String\" },\n        { \"name\": \"variable\", \"type\": \"InformationItem\", \"xml\": { \"serialize\": \"property\" }  },\n        { \"name\": \"informationRequirement\", \"type\": \"InformationRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"knowledgeRequirement\", \"type\": \"KnowledgeRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"authorityRequirement\", \"type\": \"AuthorityRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"decisionTable\", \"type\": \"DecisionTable\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"literalExpression\", \"type\": \"LiteralExpression\", \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"BusinessKnowledgeModel\",\n      \"superClass\": [ \"DRGElement\" ],\n      \"properties\": [\n        { \"name\": \"encapsulatedLogic\", \"type\": \"FunctionDefinition\" },\n        { \"name\": \"variable\", \"type\": \"InformationItem\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"knowledgeRequirement\", \"type\": \"KnowledgeRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"authorityRequirement\", \"type\": \"AuthorityRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"InputData\",\n      \"superClass\": [ \"DRGElement\" ],\n      \"properties\": [\n        { \"name\": \"variable\", \"type\": \"InformationItem\", \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"KnowledgeSource\",\n      \"superClass\": [ \"DRGElement\" ],\n      \"properties\": [\n        { \"name\": \"authorityRequirement\", \"type\": \"AuthorityRequirement\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"type\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"owner\", \"type\": \"DMNElementReference\", \"isAttr\": true },\n        { \"name\": \"locationURI\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"InformationRequirement\",\n      \"properties\": [\n        { \"name\": \"requiredDecision\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"requiredInput\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"KnowledgeRequirement\",\n      \"properties\": [\n        { \"name\": \"requiredKnowledge\", \"type\": \"DMNElementReference\", \"isUnique\": true, \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"AuthorityRequirement\",\n      \"properties\": [\n        { \"name\": \"requiredDecision\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"requiredInput\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"requiredAuthority\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"Expression\",\n      \"isAbstract\": true,\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"typeRef\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"ItemDefinition\",\n      \"superClass\": [ \"NamedElement\" ],\n      \"properties\": [\n        { \"name\": \"typeLanguage\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"isCollection\", \"type\": \"Boolean\", \"isAttr\": true, \"default\": false },\n        { \"name\": \"typeRef\", \"type\": \"String\" },\n        { \"name\": \"allowedValues\", \"type\": \"UnaryTests\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"LiteralExpression\",\n      \"superClass\": [ \"Expression\" ],\n      \"properties\": [\n        { \"name\": \"expressionLanguage\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"importedValues\", \"type\": \"ImportedValues\" },\n        { \"name\": \"text\", \"type\": \"String\" }\n      ]\n    },\n    {\n      \"name\": \"InformationItem\",\n      \"superClass\": [ \"NamedElement\" ],\n      \"properties\": [\n        { \"name\": \"typeRef\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"DecisionTable\",\n      \"superClass\": [ \"Expression\" ],\n      \"properties\": [\n        { \"name\": \"input\", \"type\": \"InputClause\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"output\", \"type\": \"OutputClause\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"rule\", \"type\": \"DecisionRule\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"hitPolicy\", \"type\": \"HitPolicy\", \"isAttr\": true , \"default\": \"UNIQUE\" },\n        { \"name\": \"aggregation\", \"type\": \"BuiltinAggregator\", \"isAttr\": true },\n        { \"name\": \"preferredOrientation\", \"type\": \"DecisionTableOrientation\", \"isAttr\": true, \"default\": \"Rule-as-Row\" },\n        { \"name\": \"outputLabel\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"DecisionRule\",\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"inputEntry\", \"type\": \"UnaryTests\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"outputEntry\", \"type\": \"LiteralExpression\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"ImportedValues\",\n      \"superClass\": [ \"Import\" ],\n      \"properties\": [\n        { \"name\": \"importedElement\", \"type\": \"String\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"expressionLanguage\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"Artifact\",\n      \"isAbstract\": true,\n      \"superClass\": [ \"DMNElement\" ]\n    },\n    {\n      \"name\": \"TextAnnotation\",\n      \"superClass\": [ \"Artifact\" ],\n      \"properties\": [\n        { \"name\": \"text\", \"type\": \"String\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"textFormat\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"Association\",\n      \"superClass\": [ \"Artifact\" ],\n      \"properties\": [\n        { \"name\": \"sourceRef\", \"type\": \"DMNElementReference\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"targetRef\", \"type\": \"DMNElementReference\" , \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"associationDirection\", \"type\": \"AssociationDirection\", \"isAttr\": true, \"default\": \"None\" }\n      ]\n    },\n    {\n      \"name\": \"InputClause\",\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"inputExpression\", \"type\": \"LiteralExpression\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"inputValues\", \"type\": \"UnaryTests\", \"xml\": { \"serialize\": \"property\" } }\n      ]\n    },\n    {\n      \"name\": \"OutputClause\",\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"outputValues\", \"type\": \"UnaryTests\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"defaultOutputEntry\", \"type\": \"LiteralExpression\", \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"name\", \"type\": \"String\", \"isAttr\": true },\n        { \"name\": \"typeRef\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"UnaryTests\",\n      \"superClass\": [ \"DMNElement\" ],\n      \"properties\": [\n        { \"name\": \"text\", \"type\": \"String\" },\n        { \"name\": \"expressionLanguage\", \"type\": \"String\", \"isAttr\": true }\n      ]\n    },\n    {\n      \"name\": \"FunctionDefinition\",\n      \"superClass\": [ \"Expression\" ],\n      \"properties\": [\n        { \"name\": \"formalParameter\", \"type\": \"InformationItem\", \"isMany\": true, \"xml\": { \"serialize\": \"property\" } },\n        { \"name\": \"expression\", \"type\": \"String\", \"isReference\": true, \"xml\": { \"serialize\": \"property\" } }\n      ]\n    }\n  ],\n  \"emumerations\": [\n    {\n      \"name\": \"AssociationDirection\",\n      \"literalValues\": [\n        {\n          \"name\": \"None\"\n        },\n        {\n          \"name\": \"One\"\n        },\n        {\n          \"name\": \"Both\"\n        }\n      ]\n    },\n    {\n      \"name\": \"HitPolicy\",\n      \"literalValues\": [\n        {\n          \"name\": \"UNIQUE\"\n        },\n        {\n          \"name\": \"FIRST\"\n        },\n        {\n          \"name\": \"PRIORITY\"\n        },\n        {\n          \"name\": \"ANY\"\n        },\n        {\n          \"name\": \"COLLECT\"\n        },\n        {\n          \"name\": \"RULE ORDER\"\n        },\n        {\n          \"name\": \"OUTPUT ORDER\"\n        }\n      ]\n    },\n    {\n      \"name\": \"BuiltinAggregator\",\n      \"literalValues\": [\n        {\n          \"name\": \"SUM\"\n        },\n        {\n          \"name\": \"COUNT\"\n        },\n        {\n          \"name\": \"MIN\"\n        },\n        {\n          \"name\": \"MAX\"\n        }\n      ]\n    },\n    {\n      \"name\": \"DecisionTableOrientation\",\n      \"literalValues\": [\n        {\n          \"name\": \"Rule-as-Row\"\n        },\n        {\n          \"name\": \"Rule-as-Column\"\n        },\n        {\n          \"name\": \"CrossTable\"\n        }\n      ]\n    }\n  ]\n}\n","\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Tests for browser support.\n */\n\nvar innerHTMLBug = false;\nvar bugTestDiv;\nif (typeof document !== 'undefined') {\n  bugTestDiv = document.createElement('div');\n  // Setup\n  bugTestDiv.innerHTML = '  <link/><table></table><a href=\"/a\">a</a><input type=\"checkbox\"/>';\n  // Make sure that link elements get serialized correctly by innerHTML\n  // This requires a wrapper element in IE\n  innerHTMLBug = !bugTestDiv.getElementsByTagName('link').length;\n  bugTestDiv = undefined;\n}\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  // for script/link/style tags to work in IE6-8, you have to wrap\n  // in a div with a non-whitespace character in front, ha!\n  _default: innerHTMLBug ? [1, 'X<div>', '</div>'] : [0, '', '']\n};\n\nmap.td =\nmap.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option =\nmap.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead =\nmap.tbody =\nmap.colgroup =\nmap.caption =\nmap.tfoot = [1, '<table>', '</table>'];\n\nmap.polyline =\nmap.ellipse =\nmap.polygon =\nmap.circle =\nmap.text =\nmap.line =\nmap.path =\nmap.rect =\nmap.g = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">','</svg>'];\n\n/**\n * Parse `html` and return a DOM Node instance, which could be a TextNode,\n * HTML DOM Node of some kind (<div> for example), or a DocumentFragment\n * instance, depending on the contents of the `html` string.\n *\n * @param {String} html - HTML string to \"domify\"\n * @param {Document} doc - The `document` instance to create the Node for\n * @return {DOMNode} the TextNode, DOM Node, or DocumentFragment instance\n * @api private\n */\n\nfunction parse(html, doc) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // default to the global `document` object\n  if (!doc) doc = document;\n\n  // tag name\n  var m = /<([/w:]+)/.exec(html);\n  if (!m) return doc.createTextNode(html);\n\n  html = html.replace(/^/s+|/s+$/g, ''); // Remove leading/trailing whitespace\n\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = doc.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = doc.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  // one element\n  if (el.firstChild == el.lastChild) {\n    return el.removeChild(el.firstChild);\n  }\n\n  // several elements\n  var fragment = doc.createDocumentFragment();\n  while (el.firstChild) {\n    fragment.appendChild(el.removeChild(el.firstChild));\n  }\n\n  return fragment;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var baseFlatten = require(169),\n    baseUniq = require(191),\n    restParam = require(145);\n\n/**\n * Creates an array of unique values, in order, from all of the provided arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([1, 2], [4, 2], [2, 1]);\n * // => [1, 2, 4]\n */\nvar union = restParam(function(arrays) {\n  return baseUniq(baseFlatten(arrays, false, true));\n});\n\nmodule.exports = union;\n","var baseCallback = require(159),\n    baseUniq = require(191),\n    isIterateeCall = require(221),\n    sortedUniq = require(236);\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurence of each element\n * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n * for sorted arrays. If an iteratee function is provided it's invoked for\n * each element in the array to generate the criterion by which uniqueness\n * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index, array).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias unique\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {boolean} [isSorted] Specify the array is sorted.\n * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new duplicate-value-free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n *\n * // using `isSorted`\n * _.uniq([1, 1, 2], true);\n * // => [1, 2]\n *\n * // using an iteratee function\n * _.uniq([1, 2.5, 1.5, 2], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => [1, 2.5]\n *\n * // using the `_.property` callback shorthand\n * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniq(array, isSorted, iteratee, thisArg) {\n  var length = array ? array.length : 0;\n  if (!length) {\n    return [];\n  }\n  if (isSorted != null && typeof isSorted != 'boolean') {\n    thisArg = iteratee;\n    iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n    isSorted = false;\n  }\n  iteratee = iteratee == null ? iteratee : baseCallback(iteratee, thisArg, 3);\n  return (isSorted)\n    ? sortedUniq(array, iteratee)\n    : baseUniq(array, iteratee);\n}\n\nmodule.exports = uniq;\n","module.exports = require(129);\n","var LazyWrapper = require(146),\n    LodashWrapper = require(147),\n    baseLodash = require(178),\n    isArray = require(241),\n    isObjectLike = require(225),\n    wrapperClone = require(239);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n * Methods that operate on and return arrays, collections, and functions can\n * be chained together. Methods that retrieve a single value or may return a\n * primitive value will automatically end the chain returning the unwrapped\n * value. Explicit chaining may be enabled using `_.chain`. The execution of\n * chained methods is lazy, that is, execution is deferred until `_#value`\n * is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n * fusion is an optimization strategy which merge iteratee calls; this can help\n * to avoid the creation of intermediate data structures and greatly reduce the\n * number of iteratee executions.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n * `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n * and `where`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n * `unescape`, `uniqueId`, `value`, and `words`\n *\n * The wrapper method `sample` will return a wrapped value when `n` is provided,\n * otherwise an unwrapped value is returned.\n *\n * @name _\n * @constructor\n * @category Chain\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // returns an unwrapped value\n * wrapped.reduce(function(total, n) {\n *   return total + n;\n * });\n * // => 6\n *\n * // returns a wrapped value\n * var squares = wrapped.map(function(n) {\n *   return n * n;\n * });\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\n\nmodule.exports = lodash;\n","module.exports = require(140);\n","var arrayEvery = require(151),\n    baseCallback = require(159),\n    baseEvery = require(165),\n    isArray = require(241),\n    isIterateeCall = require(221);\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * The predicate is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias all\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'active': false },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.every(users, 'active', false);\n * // => true\n *\n * // using the `_.property` callback shorthand\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n    predicate = undefined;\n  }\n  if (typeof predicate != 'function' || thisArg !== undefined) {\n    predicate = baseCallback(predicate, thisArg, 3);\n  }\n  return func(collection, predicate);\n}\n\nmodule.exports = every;\n","var arrayFilter = require(152),\n    baseCallback = require(159),\n    baseFilter = require(166),\n    isArray = require(241);\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.filter([4, 5, 6], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [4, 6]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.filter(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.filter(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction filter(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, predicate);\n}\n\nmodule.exports = filter;\n","var baseEach = require(164),\n    createFind = require(204);\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.result(_.find(users, function(chr) {\n *   return chr.age < 40;\n * }), 'user');\n * // => 'barney'\n *\n * // using the `_.matches` callback shorthand\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n * // => 'pebbles'\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.result(_.find(users, 'active', false), 'user');\n * // => 'fred'\n *\n * // using the `_.property` callback shorthand\n * _.result(_.find(users, 'active'), 'user');\n * // => 'barney'\n */\nvar find = createFind(baseEach);\n\nmodule.exports = find;\n","var arrayEach = require(150),\n    baseEach = require(164),\n    createForEach = require(205);\n\n/**\n * Iterates over elements of `collection` invoking `iteratee` for each element.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection). Iteratee functions may exit iteration early\n * by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n * may be used for object iteration.\n *\n * @static\n * @memberOf _\n * @alias each\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array|Object|string} Returns `collection`.\n * @example\n *\n * _([1, 2]).forEach(function(n) {\n *   console.log(n);\n * }).value();\n * // => logs each value from left to right and returns the array\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n *   console.log(n, key);\n * });\n * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n */\nvar forEach = createForEach(arrayEach, baseEach);\n\nmodule.exports = forEach;\n","var createAggregator = require(197);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` through `iteratee`. The corresponding value\n * of each key is an array of the elements responsible for generating the key.\n * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n * (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return Math.floor(n);\n * });\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * _.groupBy([4.2, 6.1, 6.4], function(n) {\n *   return this.floor(n);\n * }, Math);\n * // => { '4': [4.2], '6': [6.1, 6.4] }\n *\n * // using the `_.property` callback shorthand\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\nmodule.exports = groupBy;\n","var arrayMap = require(153),\n    baseCallback = require(159),\n    baseMap = require(179),\n    isArray = require(241);\n\n/**\n * Creates an array of values by running each element in `collection` through\n * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n * arguments: (value, index|key, collection).\n *\n * If a property name is provided for `iteratee` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `iteratee` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n * `sum`, `uniq`, and `words`\n *\n * @static\n * @memberOf _\n * @alias collect\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function timesThree(n) {\n *   return n * 3;\n * }\n *\n * _.map([1, 2], timesThree);\n * // => [3, 6]\n *\n * _.map({ 'a': 1, 'b': 2 }, timesThree);\n * // => [3, 6] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // using the `_.property` callback shorthand\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee, thisArg) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  iteratee = baseCallback(iteratee, thisArg, 3);\n  return func(collection, iteratee);\n}\n\nmodule.exports = map;\n","var arrayReduce = require(155),\n    baseEach = require(164),\n    createReduce = require(208);\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` through `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not provided the first element of `collection` is used as the initial\n * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n * and `sortByOrder`\n *\n * @static\n * @memberOf _\n * @alias foldl, inject\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {*} [thisArg] The `this` binding of `iteratee`.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.reduce([1, 2], function(total, n) {\n *   return total + n;\n * });\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n *   result[key] = n * 3;\n *   return result;\n * }, {});\n * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n */\nvar reduce = createReduce(arrayReduce, baseEach);\n\nmodule.exports = reduce;\n","var arraySome = require(156),\n    baseCallback = require(159),\n    baseSome = require(189),\n    isArray = require(241),\n    isIterateeCall = require(221);\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * The function returns as soon as it finds a passing value and does not iterate\n * over the entire collection. The predicate is bound to `thisArg` and invoked\n * with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias any\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.some(users, 'active', false);\n * // => true\n *\n * // using the `_.property` callback shorthand\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n    predicate = undefined;\n  }\n  if (typeof predicate != 'function' || thisArg !== undefined) {\n    predicate = baseCallback(predicate, thisArg, 3);\n  }\n  return func(collection, predicate);\n}\n\nmodule.exports = some;\n","var getNative = require(217);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeNow = getNative(Date, 'now');\n\n/**\n * Gets the number of milliseconds that have elapsed since the Unix epoch\n * (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @category Date\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => logs the number of milliseconds it took for the deferred function to be invoked\n */\nvar now = nativeNow || function() {\n  return new Date().getTime();\n};\n\nmodule.exports = now;\n","var createWrapper = require(209),\n    replaceHolders = require(233),\n    restParam = require(145);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and prepends any additional `_.bind` arguments to those provided to the\n * bound function.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var greet = function(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * };\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // using placeholders\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = restParam(function(func, thisArg, partials) {\n  var bitmask = BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, bind.placeholder);\n    bitmask |= PARTIAL_FLAG;\n  }\n  return createWrapper(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nmodule.exports = bind;\n","var isObject = require(245),\n    now = require(141);\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed invocations. Provide an options object to indicate that `func`\n * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n * Subsequent calls to the debounced function return the result of the last\n * `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the debounced function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=false] Specify invoking on the leading\n *  edge of the timeout.\n * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n *  delayed before it's invoked.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // avoid costly calculations while the window size is in flux\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // ensure `batchLog` is invoked once after 1 second of debounced calls\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', _.debounce(batchLog, 250, {\n *   'maxWait': 1000\n * }));\n *\n * // cancel a debounced call\n * var todoChanges = _.debounce(batchLog, 1000);\n * Object.observe(models.todo, todoChanges);\n *\n * Object.observe(models, function(changes) {\n *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n *     todoChanges.cancel();\n *   }\n * }, ['delete']);\n *\n * // ...at some point `models.todo` is changed\n * models.todo.completed = true;\n *\n * // ...before 1 second has passed `models.todo` is deleted\n * // which cancels the debounced `todoChanges` call\n * delete models.todo;\n */\nfunction debounce(func, wait, options) {\n  var args,\n      maxTimeoutId,\n      result,\n      stamp,\n      thisArg,\n      timeoutId,\n      trailingCall,\n      lastCalled = 0,\n      maxWait = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = wait < 0 ? 0 : (+wait || 0);\n  if (options === true) {\n    var leading = true;\n    trailing = false;\n  } else if (isObject(options)) {\n    leading = !!options.leading;\n    maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    if (maxTimeoutId) {\n      clearTimeout(maxTimeoutId);\n    }\n    lastCalled = 0;\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n  }\n\n  function complete(isCalled, id) {\n    if (id) {\n      clearTimeout(id);\n    }\n    maxTimeoutId = timeoutId = trailingCall = undefined;\n    if (isCalled) {\n      lastCalled = now();\n      result = func.apply(thisArg, args);\n      if (!timeoutId && !maxTimeoutId) {\n        args = thisArg = undefined;\n      }\n    }\n  }\n\n  function delayed() {\n    var remaining = wait - (now() - stamp);\n    if (remaining <= 0 || remaining > wait) {\n      complete(trailingCall, maxTimeoutId);\n    } else {\n      timeoutId = setTimeout(delayed, remaining);\n    }\n  }\n\n  function maxDelayed() {\n    complete(trailing, timeoutId);\n  }\n\n  function debounced() {\n    args = arguments;\n    stamp = now();\n    thisArg = this;\n    trailingCall = trailing && (timeoutId || !leading);\n\n    if (maxWait === false) {\n      var leadingCall = leading && !timeoutId;\n    } else {\n      if (!maxTimeoutId && !leading) {\n        lastCalled = stamp;\n      }\n      var remaining = maxWait - (stamp - lastCalled),\n          isCalled = remaining <= 0 || remaining > maxWait;\n\n      if (isCalled) {\n        if (maxTimeoutId) {\n          maxTimeoutId = clearTimeout(maxTimeoutId);\n        }\n        lastCalled = stamp;\n        result = func.apply(thisArg, args);\n      }\n      else if (!maxTimeoutId) {\n        maxTimeoutId = setTimeout(maxDelayed, remaining);\n      }\n    }\n    if (isCalled && timeoutId) {\n      timeoutId = clearTimeout(timeoutId);\n    }\n    else if (!timeoutId && wait !== maxWait) {\n      timeoutId = setTimeout(delayed, wait);\n    }\n    if (leadingCall) {\n      isCalled = true;\n      result = func.apply(thisArg, args);\n    }\n    if (isCalled && !timeoutId && !maxTimeoutId) {\n      args = thisArg = undefined;\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseDelay = require(162),\n    restParam = require(145);\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke the function with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // logs 'deferred' after one or more milliseconds\n */\nvar defer = restParam(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nmodule.exports = defer;\n","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n","var baseCreate = require(161),\n    baseLodash = require(178);\n\n/** Used as references for `-Infinity` and `Infinity`. */\nvar POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = POSITIVE_INFINITY;\n  this.__views__ = [];\n}\n\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var baseCreate = require(161),\n    baseLodash = require(178);\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n */\nfunction LodashWrapper(value, chainAll, actions) {\n  this.__wrapped__ = value;\n  this.__actions__ = actions || [];\n  this.__chain__ = !!chainAll;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var cachePush = require('./cachePush'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n *\n * Creates a cache object to store unique values.\n *\n * @private\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var length = values ? values.length : 0;\n\n  this.data = { 'hash': nativeCreate(null), 'set': new Set };\n  while (length--) {\n    this.push(values[length]);\n  }\n}\n\n// Add functions to the `Set` cache.\nSetCache.prototype.push = cachePush;\n\nmodule.exports = SetCache;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.every` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = arrayEvery;\n","/**\n * A specialized version of `_.filter` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/**\n * A specialized version of `_.map` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.reduce` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initFromArray] Specify using the first element of `array`\n *  as the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initFromArray) {\n  var index = -1,\n      length = array.length;\n\n  if (initFromArray && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var keys = require(251);\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\nmodule.exports = assignWith;\n","var baseCopy = require(160),\n    keys = require(251);\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var baseMatches = require(180),\n    baseMatchesProperty = require(181),\n    bindCallback = require(192),\n    identity = require(257),\n    property = require(259);\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var isObject = require(245);\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(prototype) {\n    if (isObject(prototype)) {\n      object.prototype = prototype;\n      var result = new object;\n      object.prototype = undefined;\n    }\n    return result || {};\n  };\n}());\n\nmodule.exports = baseCreate;\n","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts an index\n * of where to slice the arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Object} args The arguments provide to `func`.\n * @returns {number} Returns the timer id.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nmodule.exports = baseDelay;\n","var baseIndexOf = require(174),\n    cacheIndexOf = require(193),\n    createCache = require(202);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.difference` which accepts a single array\n * of values to exclude.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values) {\n  var length = array ? array.length : 0,\n      result = [];\n\n  if (!length) {\n    return result;\n  }\n  var index = -1,\n      indexOf = baseIndexOf,\n      isCommon = true,\n      cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n      valuesLength = values.length;\n\n  if (cache) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n    values = cache;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index];\n\n    if (isCommon && value === value) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === value) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (indexOf(values, value, 0) < 0) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","var baseForOwn = require(172),\n    createBaseEach = require(199);\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseEach = require(164);\n\n/**\n * The base implementation of `_.every` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n","var baseEach = require(164);\n\n/**\n * The base implementation of `_.filter` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require(154),\n    isArguments = require(240),\n    isArray = require(241),\n    isArrayLike = require(219),\n    isObjectLike = require(225);\n\n/**\n * The base implementation of `_.flatten` with added support for restricting\n * flattening and specifying the start index.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {boolean} [isDeep] Specify a deep flatten.\n * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, isDeep, isStrict, result) {\n  result || (result = []);\n\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    if (isObjectLike(value) && isArrayLike(value) &&\n        (isStrict || isArray(value) || isArguments(value))) {\n      if (isDeep) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, isDeep, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require(200);\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require(170),\n    keysIn = require(252);\n\n/**\n * The base implementation of `_.forIn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForIn(object, iteratee) {\n  return baseFor(object, iteratee, keysIn);\n}\n\nmodule.exports = baseForIn;\n","var baseFor = require(170),\n    keys = require(251);\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var toObject = require(237);\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var indexOfNaN = require(218);\n\n/**\n * The base implementation of `_.indexOf` without support for binary searches.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return indexOfNaN(array, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOf;\n","var baseIsEqualDeep = require(176),\n    isObject = require(245),\n    isObjectLike = require(225);\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n","var equalArrays = require(210),\n    equalByTag = require(211),\n    equalObjects = require(212),\n    isArray = require(241),\n    isTypedArray = require(248);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nmodule.exports = baseIsEqualDeep;\n","var baseIsEqual = require(175),\n    toObject = require(237);\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The function whose prototype all chaining wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var baseEach = require(164),\n    isArrayLike = require(219);\n\n/**\n * The base implementation of `_.map` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseIsMatch = require(177),\n    getMatchData = require(216),\n    toObject = require(237);\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseGet = require(173),\n    baseIsEqual = require(175),\n    baseSlice = require(188),\n    isArray = require(241),\n    isKey = require(222),\n    isStrictComparable = require(226),\n    last = require(127),\n    toObject = require(237),\n    toPath = require(238);\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var arrayEach = require(150),\n    baseMergeDeep = require(183),\n    isArray = require(241),\n    isArrayLike = require(219),\n    isObject = require(245),\n    isObjectLike = require(225),\n    isTypedArray = require(248),\n    keys = require(251);\n\n/**\n * The base implementation of `_.merge` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {Object} Returns `object`.\n */\nfunction baseMerge(object, source, customizer, stackA, stackB) {\n  if (!isObject(object)) {\n    return object;\n  }\n  var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n      props = isSrcArr ? undefined : keys(source);\n\n  arrayEach(props || source, function(srcValue, key) {\n    if (props) {\n      key = srcValue;\n      srcValue = source[key];\n    }\n    if (isObjectLike(srcValue)) {\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n      baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n    }\n    else {\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n      }\n      if ((result !== undefined || (isSrcArr && !(key in object))) &&\n          (isCommon || (result === result ? (result !== value) : (value === value)))) {\n        object[key] = result;\n      }\n    }\n  });\n  return object;\n}\n\nmodule.exports = baseMerge;\n","var arrayCopy = require(149),\n    isArguments = require(240),\n    isArray = require(241),\n    isArrayLike = require(219),\n    isPlainObject = require(246),\n    isTypedArray = require(248),\n    toPlainObject = require(249);\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates values with source counterparts.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n  var length = stackA.length,\n      srcValue = source[key];\n\n  while (length--) {\n    if (stackA[length] == srcValue) {\n      object[key] = stackB[length];\n      return;\n    }\n  }\n  var value = object[key],\n      result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n      isCommon = result === undefined;\n\n  if (isCommon) {\n    result = srcValue;\n    if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n      result = isArray(value)\n        ? value\n        : (isArrayLike(value) ? arrayCopy(value) : []);\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      result = isArguments(value)\n        ? toPlainObject(value)\n        : (isPlainObject(value) ? value : {});\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate\n  // it with its merged value.\n  stackA.push(srcValue);\n  stackB.push(result);\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n  } else if (result === result ? (result !== value) : (value === value)) {\n    object[key] = result;\n  }\n}\n\nmodule.exports = baseMergeDeep;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require(173),\n    toPath = require(238);\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","/**\n * The base implementation of `_.reduce` and `_.reduceRight` without support\n * for callback shorthands and `this` binding, which iterates over `collection`\n * using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initFromCollection Specify using the first or last element\n *  of `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initFromCollection\n      ? (initFromCollection = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n","var identity = require(257),\n    metaMap = require(228);\n\n/**\n * The base implementation of `setData` without support for hot loop detection.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var baseEach = require(164);\n\n/**\n * The base implementation of `_.some` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n","/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n","var baseIndexOf = require(174),\n    cacheIndexOf = require(193),\n    createCache = require(202);\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniq` without support for callback shorthands\n * and `this` binding.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee) {\n  var index = -1,\n      indexOf = baseIndexOf,\n      length = array.length,\n      isCommon = true,\n      isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n      seen = isLarge ? createCache() : null,\n      result = [];\n\n  if (seen) {\n    indexOf = cacheIndexOf;\n    isCommon = false;\n  } else {\n    isLarge = false;\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value, index, array) : value;\n\n    if (isCommon && value === value) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (indexOf(seen, computed, 0) < 0) {\n      if (iteratee || isLarge) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var identity = require(257);\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","var isObject = require(245);\n\n/**\n * Checks if `value` is in `cache` mimicking the return signature of\n * `_.indexOf` by returning `0` if the value is found, else `-1`.\n *\n * @private\n * @param {Object} cache The cache to search.\n * @param {*} value The value to search for.\n * @returns {number} Returns `0` if `value` is found, else `-1`.\n */\nfunction cacheIndexOf(cache, value) {\n  var data = cache.data,\n      result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n  return result ? 0 : -1;\n}\n\nmodule.exports = cacheIndexOf;\n","var isObject = require(245);\n\n/**\n * Adds `value` to the cache.\n *\n * @private\n * @name push\n * @memberOf SetCache\n * @param {*} value The value to cache.\n */\nfunction cachePush(value) {\n  var data = this.data;\n  if (typeof value == 'string' || isObject(value)) {\n    data.set.add(value);\n  } else {\n    data.hash[value] = true;\n  }\n}\n\nmodule.exports = cachePush;\n","/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders) {\n  var holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      leftIndex = -1,\n      leftLength = partials.length,\n      result = Array(leftLength + argsLength);\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    result[holders[argsIndex]] = args[argsIndex];\n  }\n  while (argsLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array|Object} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders) {\n  var holdersIndex = -1,\n      holdersLength = holders.length,\n      argsIndex = -1,\n      argsLength = nativeMax(args.length - holdersLength, 0),\n      rightIndex = -1,\n      rightLength = partials.length,\n      result = Array(argsLength + rightLength);\n\n  while (++argsIndex < argsLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    result[offset + holders[holdersIndex]] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","var baseCallback = require(159),\n    baseEach = require(164),\n    isArray = require(241);\n\n/**\n * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n *\n * @private\n * @param {Function} setter The function to set keys and values of the accumulator object.\n * @param {Function} [initializer] The function to initialize the accumulator object.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee, thisArg) {\n    var result = initializer ? initializer() : {};\n    iteratee = baseCallback(iteratee, thisArg, 3);\n\n    if (isArray(collection)) {\n      var index = -1,\n          length = collection.length;\n\n      while (++index < length) {\n        var value = collection[index];\n        setter(result, value, iteratee(value, index, collection), collection);\n      }\n    } else {\n      baseEach(collection, function(value, key, collection) {\n        setter(result, value, iteratee(value, key, collection), collection);\n      });\n    }\n    return result;\n  };\n}\n\nmodule.exports = createAggregator;\n","var bindCallback = require(192),\n    isIterateeCall = require(221),\n    restParam = require(145);\n\n/**\n * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","var getLength = require(215),\n    isLength = require(224),\n    toObject = require(237);\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var toObject = require(237);\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createCtorWrapper = require('./createCtorWrapper');\n\n/**\n * Creates a function that wraps `func` and invokes it with the `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new bound function.\n */\nfunction createBindWrapper(func, thisArg) {\n  var Ctor = createCtorWrapper(func);\n\n  function wrapper() {\n    var fn = (this && this !== global && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(thisArg, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBindWrapper;\n","var SetCache = require('./SetCache'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a `Set` cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [values] The values to cache.\n * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n */\nfunction createCache(values) {\n  return (nativeCreate && Set) ? new SetCache(values) : null;\n}\n\nmodule.exports = createCache;\n","var baseCreate = require(161),\n    isObject = require(245);\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtorWrapper(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors.\n    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtorWrapper;\n","var baseCallback = require(159),\n    baseFind = require(167),\n    baseFindIndex = require(168),\n    isArray = require(241);\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n","var bindCallback = require(192),\n    isArray = require(241);\n\n/**\n * Creates a function for `_.forEach` or `_.forEachRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createForEach(arrayFunc, eachFunc) {\n  return function(collection, iteratee, thisArg) {\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee)\n      : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n  };\n}\n\nmodule.exports = createForEach;\n","var arrayCopy = require('./arrayCopy'),\n    composeArgs = require('./composeArgs'),\n    composeArgsRight = require('./composeArgsRight'),\n    createCtorWrapper = require('./createCtorWrapper'),\n    isLaziable = require('./isLaziable'),\n    reorder = require('./reorder'),\n    replaceHolders = require('./replaceHolders'),\n    setData = require('./setData');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    CURRY_RIGHT_FLAG = 16,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64,\n    ARY_FLAG = 128;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that wraps `func` and invokes it with optional `this`\n * binding of, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & ARY_FLAG,\n      isBind = bitmask & BIND_FLAG,\n      isBindKey = bitmask & BIND_KEY_FLAG,\n      isCurry = bitmask & CURRY_FLAG,\n      isCurryBound = bitmask & CURRY_BOUND_FLAG,\n      isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n      Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it to other functions.\n    var length = arguments.length,\n        index = length,\n        args = Array(length);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight);\n    }\n    if (isCurry || isCurryRight) {\n      var placeholder = wrapper.placeholder,\n          argsHolders = replaceHolders(args, placeholder);\n\n      length -= argsHolders.length;\n      if (length < arity) {\n        var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n            newArity = nativeMax(arity - length, 0),\n            newsHolders = isCurry ? argsHolders : undefined,\n            newHoldersRight = isCurry ? undefined : argsHolders,\n            newPartials = isCurry ? args : undefined,\n            newPartialsRight = isCurry ? undefined : args;\n\n        bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n        bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n        if (!isCurryBound) {\n          bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n        }\n        var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n            result = createHybridWrapper.apply(undefined, newData);\n\n        if (isLaziable(func)) {\n          setData(result, newData);\n        }\n        result.placeholder = placeholder;\n        return result;\n      }\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    if (argPos) {\n      args = reorder(args, argPos);\n    }\n    if (isAry && ary < args.length) {\n      args.length = ary;\n    }\n    if (this && this !== global && this instanceof wrapper) {\n      fn = Ctor || createCtorWrapper(func);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybridWrapper;\n","var createCtorWrapper = require('./createCtorWrapper');\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` and invokes it with the optional `this`\n * binding of `thisArg` and the `partials` prepended to those provided to\n * the wrapper.\n *\n * @private\n * @param {Function} func The function to partially apply arguments to.\n * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to the new function.\n * @returns {Function} Returns the new bound function.\n */\nfunction createPartialWrapper(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & BIND_FLAG,\n      Ctor = createCtorWrapper(func);\n\n  function wrapper() {\n    // Avoid `arguments` object use disqualifying optimizations by\n    // converting it to an array before providing it `func`.\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength);\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    var fn = (this && this !== global && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartialWrapper;\n","var baseCallback = require(159),\n    baseReduce = require(186),\n    isArray = require(241);\n\n/**\n * Creates a function for `_.reduce` or `_.reduceRight`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over an array.\n * @param {Function} eachFunc The function to iterate over a collection.\n * @returns {Function} Returns the new each function.\n */\nfunction createReduce(arrayFunc, eachFunc) {\n  return function(collection, iteratee, accumulator, thisArg) {\n    var initFromArray = arguments.length < 3;\n    return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n      ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n      : baseReduce(collection, baseCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n  };\n}\n\nmodule.exports = createReduce;\n","var baseSetData = require(187),\n    createBindWrapper = require(201),\n    createHybridWrapper = require(206),\n    createPartialWrapper = require(207),\n    getData = require(213),\n    mergeData = require(227),\n    setData = require(234);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    BIND_KEY_FLAG = 2,\n    PARTIAL_FLAG = 32,\n    PARTIAL_RIGHT_FLAG = 64;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to reference.\n * @param {number} bitmask The bitmask of flags.\n *  The bitmask may be composed of the following flags:\n *     1 - `_.bind`\n *     2 - `_.bindKey`\n *     4 - `_.curry` or `_.curryRight` of a bound function\n *     8 - `_.curry`\n *    16 - `_.curryRight`\n *    32 - `_.partial`\n *    64 - `_.partialRight`\n *   128 - `_.rearg`\n *   256 - `_.ary`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  length -= (holders ? holders.length : 0);\n  if (bitmask & PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func),\n      newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n  if (data) {\n    mergeData(newData, data);\n    bitmask = newData[1];\n    arity = newData[9];\n  }\n  newData[9] = arity == null\n    ? (isBindKey ? 0 : func.length)\n    : (nativeMax(arity - length, 0) || 0);\n\n  if (bitmask == BIND_FLAG) {\n    var result = createBindWrapper(newData[0], newData[2]);\n  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n    result = createPartialWrapper.apply(undefined, newData);\n  } else {\n    result = createHybridWrapper.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setter(result, newData);\n}\n\nmodule.exports = createWrapper;\n","var arraySome = require(156);\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalArrays;\n","/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var keys = require(251);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n","var metaMap = require(228),\n    noop = require(258);\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require(231);\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = array ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","var baseProperty = require(184);\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isStrictComparable = require(226),\n    pairs = require(255);\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var isNative = require(243);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/**\n * Gets the index at which the first occurrence of `NaN` is found in `array`.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n */\nfunction indexOfNaN(array, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 0 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    var other = array[index];\n    if (other !== other) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = indexOfNaN;\n","var getLength = require(215),\n    isLength = require(224);\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^/d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var isArrayLike = require(219),\n    isIndex = require(220),\n    isObject = require(245);\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var isArray = require(241),\n    toObject = require(237);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = //.|/[(?:[^[/]]*|([\"'])(?:(?!/1)[^/n//]|//.)*?/1)/]/,\n    reIsPlainProp = /^/w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n","var LazyWrapper = require(146),\n    getData = require(213),\n    getFuncName = require(214),\n    lodash = require(131);\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var isObject = require(245);\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var arrayCopy = require(149),\n    composeArgs = require(195),\n    composeArgsRight = require(196),\n    replaceHolders = require(233);\n\n/** Used to compose bitmasks for wrapper metadata. */\nvar BIND_FLAG = 1,\n    CURRY_BOUND_FLAG = 4,\n    CURRY_FLAG = 8,\n    ARY_FLAG = 128,\n    REARG_FLAG = 256;\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers required to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n * augment function arguments, making the order in which they are executed important,\n * preventing the merging of metadata. However, we make an exception for a safe\n * common case where curried functions have `_.ary` and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < ARY_FLAG;\n\n  var isCombo =\n    (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n    (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n    (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = arrayCopy(value);\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var getNative = require('./getNative');\n\n/** Native method references. */\nvar WeakMap = getNative(global, 'WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","var toObject = require(237);\n\n/**\n * A specialized version of `_.pick` which picks `object` properties specified\n * by `props`.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property names to pick.\n * @returns {Object} Returns the new object.\n */\nfunction pickByArray(object, props) {\n  object = toObject(object);\n\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index];\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = pickByArray;\n","var baseForIn = require(171);\n\n/**\n * A specialized version of `_.pick` which picks `object` properties `predicate`\n * returns truthy for.\n *\n * @private\n * @param {Object} object The source object.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Object} Returns the new object.\n */\nfunction pickByCallback(object, predicate) {\n  var result = {};\n  baseForIn(object, function(value, key, object) {\n    if (predicate(value, key, object)) {\n      result[key] = value;\n    }\n  });\n  return result;\n}\n\nmodule.exports = pickByCallback;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var arrayCopy = require(149),\n    isIndex = require(220);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = arrayCopy(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    if (array[index] === placeholder) {\n      array[index] = PLACEHOLDER;\n      result[++resIndex] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var baseSetData = require(187),\n    now = require(141);\n\n/** Used to detect when a function becomes hot. */\nvar HOT_COUNT = 150,\n    HOT_SPAN = 16;\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity function\n * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = (function() {\n  var count = 0,\n      lastCalled = 0;\n\n  return function(key, value) {\n    var stamp = now(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return key;\n      }\n    } else {\n      count = 0;\n    }\n    return baseSetData(key, value);\n  };\n}());\n\nmodule.exports = setData;\n","var isArguments = require(240),\n    isArray = require(241),\n    isIndex = require(220),\n    isLength = require(224),\n    keysIn = require(252);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","/**\n * An implementation of `_.uniq` optimized for sorted arrays without support\n * for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The function invoked per iteration.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction sortedUniq(array, iteratee) {\n  var seen,\n      index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value, index, array) : value;\n\n    if (!index || seen !== computed) {\n      seen = computed;\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = sortedUniq;\n","var isObject = require(245);\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n","var baseToString = require(190),\n    isArray = require(241);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[/]]+|/[(?:(-?/d+(?:/./d+)?)|([\"'])((?:(?!/2)[^/n//]|//.)*?)/2)/]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = ///(//)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n","var LazyWrapper = require(146),\n    LodashWrapper = require(147),\n    arrayCopy = require(149);\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  return wrapper instanceof LazyWrapper\n    ? wrapper.clone()\n    : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n}\n\nmodule.exports = wrapperClone;\n","var isArrayLike = require(219),\n    isObjectLike = require(225);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var getNative = require(217),\n    isLength = require(224),\n    isObjectLike = require(225);\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isObject = require(245);\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require(242),\n    isObjectLike = require(225);\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^/[object .+?Constructor/]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[//^$.*+?()[/]{}|]/g, '//$&')\n  .replace(/hasOwnProperty|(function).*?(?=///()| for .+?(?=///])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","var isObjectLike = require(225);\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(8.4);\n * // => true\n *\n * _.isNumber(NaN);\n * // => true\n *\n * _.isNumber('8.4');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseForIn = require(171),\n    isArguments = require(240),\n    isObjectLike = require(225);\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n","var isObjectLike = require(225);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var isLength = require(224),\n    isObjectLike = require(225);\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n","var baseCopy = require(160),\n    keysIn = require(252);\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable\n * properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return baseCopy(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var assignWith = require(157),\n    baseAssign = require(158),\n    createAssigner = require(198);\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it's invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n","var getNative = require(217),\n    isArrayLike = require(219),\n    isObject = require(245),\n    shimKeys = require(235);\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var isArguments = require(240),\n    isArray = require(241),\n    isIndex = require(220),\n    isLength = require(224),\n    isObject = require(245);\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","var baseMerge = require(182),\n    createAssigner = require(198);\n\n/**\n * Recursively merges own enumerable properties of the source object(s), that\n * don't resolve to `undefined` into the destination object. Subsequent sources\n * overwrite property assignments of previous sources. If `customizer` is\n * provided it's invoked to produce the merged values of the destination and\n * source properties. If `customizer` returns `undefined` merging is handled\n * by the method instead. The `customizer` is bound to `thisArg` and invoked\n * with five arguments: (objectValue, sourceValue, key, object, source).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var users = {\n *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n * };\n *\n * var ages = {\n *   'data': [{ 'age': 36 }, { 'age': 40 }]\n * };\n *\n * _.merge(users, ages);\n * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n *\n * // using a customizer callback\n * var object = {\n *   'fruits': ['apple'],\n *   'vegetables': ['beet']\n * };\n *\n * var other = {\n *   'fruits': ['banana'],\n *   'vegetables': ['carrot']\n * };\n *\n * _.merge(object, other, function(a, b) {\n *   if (_.isArray(a)) {\n *     return a.concat(b);\n *   }\n * });\n * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n */\nvar merge = createAssigner(baseMerge);\n\nmodule.exports = merge;\n","var arrayMap = require(153),\n    baseDifference = require(163),\n    baseFlatten = require(169),\n    bindCallback = require(192),\n    keysIn = require(252),\n    pickByArray = require(229),\n    pickByCallback = require(230),\n    restParam = require(145);\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable properties of `object` that are not omitted.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to omit, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.omit(object, 'age');\n * // => { 'user': 'fred' }\n *\n * _.omit(object, _.isNumber);\n * // => { 'user': 'fred' }\n */\nvar omit = restParam(function(object, props) {\n  if (object == null) {\n    return {};\n  }\n  if (typeof props[0] != 'function') {\n    var props = arrayMap(baseFlatten(props), String);\n    return pickByArray(object, baseDifference(keysIn(object), props));\n  }\n  var predicate = bindCallback(props[0], props[1], 3);\n  return pickByCallback(object, function(value, key, object) {\n    return !predicate(value, key, object);\n  });\n});\n\nmodule.exports = omit;\n","var keys = require(251),\n    toObject = require(237);\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n","var baseFlatten = require(169),\n    bindCallback = require(192),\n    pickByArray = require(229),\n    pickByCallback = require(230),\n    restParam = require(145);\n\n/**\n * Creates an object composed of the picked `object` properties. Property\n * names may be specified as individual arguments or as arrays of property\n * names. If `predicate` is provided it's invoked for each property of `object`\n * picking the properties `predicate` returns truthy for. The predicate is\n * bound to `thisArg` and invoked with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {Function|...(string|string[])} [predicate] The function invoked per\n *  iteration or property names to pick, specified as individual property\n *  names or arrays of property names.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'user': 'fred', 'age': 40 };\n *\n * _.pick(object, 'user');\n * // => { 'user': 'fred' }\n *\n * _.pick(object, _.isString);\n * // => { 'user': 'fred' }\n */\nvar pick = restParam(function(object, props) {\n  if (object == null) {\n    return {};\n  }\n  return typeof props[0] == 'function'\n    ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n    : pickByArray(object, baseFlatten(props));\n});\n\nmodule.exports = pick;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * A no-operation function that returns `undefined` regardless of the\n * arguments it receives.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.noop(object) === undefined;\n * // => true\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseProperty = require(184),\n    basePropertyDeep = require(185),\n    isKey = require(222);\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * Set attribute `name` to `val`, or get attr `name`.\n *\n * @param {Element} el\n * @param {String} name\n * @param {String} [val]\n * @api public\n */\n\nmodule.exports = function(el, name, val) {\n  // get\n  if (arguments.length == 2) {\n    return el.getAttribute(name);\n  }\n\n  // remove\n  if (val === null) {\n    return el.removeAttribute(name);\n  }\n\n  // set\n  el.setAttribute(name, val);\n\n  return el;\n};","module.exports = require(66);","module.exports = function(el) {\n\n  var c;\n\n  while (el.childNodes.length) {\n    c = el.childNodes[0];\n    el.removeChild(c);\n  }\n\n  return el;\n};","module.exports = require(68);","module.exports = require(125);","module.exports = require(69);","module.exports = require(72);","module.exports = function(el) {\n  el.parentNode && el.parentNode.removeChild(el);\n};","'use strict';\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction lower(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\nfunction hasLowerCaseAlias(pkg) {\n  return pkg.xml && pkg.xml.tagAlias === 'lowerCase';\n}\n\n\nmodule.exports.aliasToName = function(alias, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return capitalize(alias);\n  } else {\n    return alias;\n  }\n};\n\nmodule.exports.nameToAlias = function(name, pkg) {\n  if (hasLowerCaseAlias(pkg)) {\n    return lower(name);\n  } else {\n    return name;\n  }\n};\n\nmodule.exports.DEFAULT_NS_MAP = {\n  'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n};\n\nvar XSI_TYPE = module.exports.XSI_TYPE = 'xsi:type';\n\nfunction serializeFormat(element) {\n  return element.xml && element.xml.serialize;\n}\n\nmodule.exports.serializeAsType = function(element) {\n  return serializeFormat(element) === XSI_TYPE;\n};\n\nmodule.exports.serializeAsProperty = function(element) {\n  return serializeFormat(element) === 'property';\n};","'use strict';\n\nvar reduce = require(139),\n    forEach = require(136),\n    find = require(135),\n    assign = require(250),\n    defer = require(144);\n\nvar Stack = require(319),\n    SaxParser = require(283).parser,\n    Moddle = require(271),\n    parseNameNs = require(276).parseName,\n    Types = require(279),\n    coerceType = Types.coerceType,\n    isSimpleType = Types.isSimple,\n    common = require(268),\n    XSI_TYPE = common.XSI_TYPE,\n    XSI_URI = common.DEFAULT_NS_MAP.xsi,\n    serializeAsType = common.serializeAsType,\n    aliasToName = common.aliasToName;\n\nfunction parseNodeAttributes(node) {\n  var nodeAttrs = node.attributes;\n\n  return reduce(nodeAttrs, function(result, v, k) {\n    var name, ns;\n\n    if (!v.local) {\n      name = v.prefix;\n    } else {\n      ns = parseNameNs(v.name, v.prefix);\n      name = ns.name;\n    }\n\n    result[name] = v.value;\n    return result;\n  }, {});\n}\n\nfunction normalizeType(node, attr, model) {\n  var nameNs = parseNameNs(attr.value);\n\n  var uri = node.ns[nameNs.prefix || ''],\n      localName = nameNs.localName,\n      pkg = uri && model.getPackage(uri),\n      typePrefix;\n\n  if (pkg) {\n    typePrefix = pkg.xml && pkg.xml.typePrefix;\n\n    if (typePrefix && localName.indexOf(typePrefix) === 0) {\n      localName = localName.slice(typePrefix.length);\n    }\n\n    attr.value = pkg.prefix + ':' + localName;\n  }\n}\n\n/**\n * Normalizes namespaces for a node given an optional default namespace and a\n * number of mappings from uris to default prefixes.\n *\n * @param  {XmlNode} node\n * @param  {Model} model the model containing all registered namespaces\n * @param  {Uri} defaultNsUri\n */\nfunction normalizeNamespaces(node, model, defaultNsUri) {\n  var uri, prefix;\n\n  uri = node.uri || defaultNsUri;\n\n  if (uri) {\n    var pkg = model.getPackage(uri);\n\n    if (pkg) {\n      prefix = pkg.prefix;\n    } else {\n      prefix = node.prefix;\n    }\n\n    node.prefix = prefix;\n    node.uri = uri;\n  }\n\n  forEach(node.attributes, function(attr) {\n\n    // normalize xsi:type attributes because the\n    // assigned type may or may not be namespace prefixed\n    if (attr.uri === XSI_URI && attr.local === 'type') {\n      normalizeType(node, attr, model);\n    }\n\n    normalizeNamespaces(attr, model, null);\n  });\n}\n\n\nfunction error(message) {\n  return new Error(message);\n}\n\n/**\n * Get the moddle descriptor for a given instance or type.\n *\n * @param  {ModdleElement|Function} element\n *\n * @return {Object} the moddle descriptor\n */\nfunction getModdleDescriptor(element) {\n  return element.$descriptor;\n}\n\n/**\n * A parse context.\n *\n * @class\n *\n * @param {Object} options\n * @param {ElementHandler} options.rootHandler the root handler for parsing a document\n * @param {boolean} [options.lax=false] whether or not to ignore invalid elements\n */\nfunction Context(options) {\n\n  /**\n   * @property {ElementHandler} rootHandler\n   */\n\n  /**\n   * @property {Boolean} lax\n   */\n\n  assign(this, options);\n\n  this.elementsById = {};\n  this.references = [];\n  this.warnings = [];\n\n  /**\n   * Add an unresolved reference.\n   *\n   * @param {Object} reference\n   */\n  this.addReference = function(reference) {\n    this.references.push(reference);\n  };\n\n  /**\n   * Add a processed element.\n   *\n   * @param {ModdleElement} element\n   */\n  this.addElement = function(element) {\n\n    if (!element) {\n      throw error('expected element');\n    }\n\n    var elementsById = this.elementsById;\n\n    var descriptor = getModdleDescriptor(element);\n\n    var idProperty = descriptor.idProperty,\n        id;\n\n    if (idProperty) {\n      id = element.get(idProperty.name);\n\n      if (id) {\n\n        if (elementsById[id]) {\n          throw error('duplicate ID <' + id + '>');\n        }\n\n        elementsById[id] = element;\n      }\n    }\n  };\n\n  /**\n   * Add an import warning.\n   *\n   * @param {Object} warning\n   * @param {String} warning.message\n   * @param {Error} [warning.error]\n   */\n  this.addWarning = function(warning) {\n    this.warnings.push(warning);\n  };\n}\n\nfunction BaseHandler() {}\n\nBaseHandler.prototype.handleEnd = function() {};\nBaseHandler.prototype.handleText = function() {};\nBaseHandler.prototype.handleNode = function() {};\n\n\n/**\n * A simple pass through handler that does nothing except for\n * ignoring all input it receives.\n *\n * This is used to ignore unknown elements and\n * attributes.\n */\nfunction NoopHandler() { }\n\nNoopHandler.prototype = Object.create(BaseHandler.prototype);\n\nNoopHandler.prototype.handleNode = function() {\n  return this;\n};\n\nfunction BodyHandler() {}\n\nBodyHandler.prototype = Object.create(BaseHandler.prototype);\n\nBodyHandler.prototype.handleText = function(text) {\n  this.body = (this.body || '') + text;\n};\n\nfunction ReferenceHandler(property, context) {\n  this.property = property;\n  this.context = context;\n}\n\nReferenceHandler.prototype = Object.create(BodyHandler.prototype);\n\nReferenceHandler.prototype.handleNode = function(node) {\n\n  if (this.element) {\n    throw error('expected no sub nodes');\n  } else {\n    this.element = this.createReference(node);\n  }\n\n  return this;\n};\n\nReferenceHandler.prototype.handleEnd = function() {\n  this.element.id = this.body;\n};\n\nReferenceHandler.prototype.createReference = function(node) {\n  return {\n    property: this.property.ns.name,\n    id: ''\n  };\n};\n\nfunction ValueHandler(propertyDesc, element) {\n  this.element = element;\n  this.propertyDesc = propertyDesc;\n}\n\nValueHandler.prototype = Object.create(BodyHandler.prototype);\n\nValueHandler.prototype.handleEnd = function() {\n\n  var value = this.body || '',\n      element = this.element,\n      propertyDesc = this.propertyDesc;\n\n  value = coerceType(propertyDesc.type, value);\n\n  if (propertyDesc.isMany) {\n    element.get(propertyDesc.name).push(value);\n  } else {\n    element.set(propertyDesc.name, value);\n  }\n};\n\n\nfunction BaseElementHandler() {}\n\nBaseElementHandler.prototype = Object.create(BodyHandler.prototype);\n\nBaseElementHandler.prototype.handleNode = function(node) {\n  var parser = this,\n      element = this.element;\n\n  if (!element) {\n    element = this.element = this.createElement(node);\n\n    this.context.addElement(element);\n  } else {\n    parser = this.handleChild(node);\n  }\n\n  return parser;\n};\n\n/**\n * @class XMLReader.ElementHandler\n *\n */\nfunction ElementHandler(model, type, context) {\n  this.model = model;\n  this.type = model.getType(type);\n  this.context = context;\n}\n\nElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nElementHandler.prototype.addReference = function(reference) {\n  this.context.addReference(reference);\n};\n\nElementHandler.prototype.handleEnd = function() {\n\n  var value = this.body,\n      element = this.element,\n      descriptor = getModdleDescriptor(element),\n      bodyProperty = descriptor.bodyProperty;\n\n  if (bodyProperty && value !== undefined) {\n    value = coerceType(bodyProperty.type, value);\n    element.set(bodyProperty.name, value);\n  }\n};\n\n/**\n * Create an instance of the model from the given node.\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.createElement = function(node) {\n  var attributes = parseNodeAttributes(node),\n      Type = this.type,\n      descriptor = getModdleDescriptor(Type),\n      context = this.context,\n      instance = new Type({});\n\n  forEach(attributes, function(value, name) {\n\n    var prop = descriptor.propertiesByName[name],\n        values;\n\n    if (prop && prop.isReference) {\n\n      if (!prop.isMany) {\n        context.addReference({\n          element: instance,\n          property: prop.ns.name,\n          id: value\n        });\n      } else {\n        // IDREFS: parse references as whitespace-separated list\n        values = value.split(' ');\n\n        forEach(values, function(v) {\n          context.addReference({\n            element: instance,\n            property: prop.ns.name,\n            id: v\n          });\n        });\n      }\n\n    } else {\n      if (prop) {\n        value = coerceType(prop.type, value);\n      }\n\n      instance.set(name, value);\n    }\n  });\n\n  return instance;\n};\n\nElementHandler.prototype.getPropertyForNode = function(node) {\n\n  var nameNs = parseNameNs(node.local, node.prefix);\n\n  var type = this.type,\n      model = this.model,\n      descriptor = getModdleDescriptor(type);\n\n  var propertyName = nameNs.name,\n      property = descriptor.propertiesByName[propertyName],\n      elementTypeName,\n      elementType,\n      typeAnnotation;\n\n  // search for properties by name first\n\n  if (property) {\n\n    if (serializeAsType(property)) {\n      typeAnnotation = node.attributes[XSI_TYPE];\n\n      // xsi type is optional, if it does not exists the\n      // default type is assumed\n      if (typeAnnotation) {\n\n        elementTypeName = typeAnnotation.value;\n\n        // TODO: extract real name from attribute\n        elementType = model.getType(elementTypeName);\n\n        return assign({}, property, { effectiveType: getModdleDescriptor(elementType).name });\n      }\n    }\n\n    // search for properties by name first\n    return property;\n  }\n\n\n  var pkg = model.getPackage(nameNs.prefix);\n\n  if (pkg) {\n    elementTypeName = nameNs.prefix + ':' + aliasToName(nameNs.localName, descriptor.$pkg);\n    elementType = model.getType(elementTypeName);\n\n    // search for collection members later\n    property = find(descriptor.properties, function(p) {\n      return !p.isVirtual && !p.isReference && !p.isAttribute && elementType.hasType(p.type);\n    });\n\n    if (property) {\n      return assign({}, property, { effectiveType: getModdleDescriptor(elementType).name });\n    }\n  } else {\n    // parse unknown element (maybe extension)\n    property = find(descriptor.properties, function(p) {\n      return !p.isReference && !p.isAttribute && p.type === 'Element';\n    });\n\n    if (property) {\n      return property;\n    }\n  }\n\n  throw error('unrecognized element <' + nameNs.name + '>');\n};\n\nElementHandler.prototype.toString = function() {\n  return 'ElementDescriptor[' + getModdleDescriptor(this.type).name + ']';\n};\n\nElementHandler.prototype.valueHandler = function(propertyDesc, element) {\n  return new ValueHandler(propertyDesc, element);\n};\n\nElementHandler.prototype.referenceHandler = function(propertyDesc) {\n  return new ReferenceHandler(propertyDesc, this.context);\n};\n\nElementHandler.prototype.handler = function(type) {\n  if (type === 'Element') {\n    return new GenericElementHandler(this.model, type, this.context);\n  } else {\n    return new ElementHandler(this.model, type, this.context);\n  }\n};\n\n/**\n * Handle the child element parsing\n *\n * @param  {Element} node the xml node\n */\nElementHandler.prototype.handleChild = function(node) {\n  var propertyDesc, type, element, childHandler;\n\n  propertyDesc = this.getPropertyForNode(node);\n  element = this.element;\n\n  type = propertyDesc.effectiveType || propertyDesc.type;\n\n  if (isSimpleType(type)) {\n    return this.valueHandler(propertyDesc, element);\n  }\n\n  if (propertyDesc.isReference) {\n    childHandler = this.referenceHandler(propertyDesc).handleNode(node);\n  } else {\n    childHandler = this.handler(type).handleNode(node);\n  }\n\n  var newElement = childHandler.element;\n\n  // child handles may decide to skip elements\n  // by not returning anything\n  if (newElement !== undefined) {\n\n    if (propertyDesc.isMany) {\n      element.get(propertyDesc.name).push(newElement);\n    } else {\n      element.set(propertyDesc.name, newElement);\n    }\n\n    if (propertyDesc.isReference) {\n      assign(newElement, {\n        element: element\n      });\n\n      this.context.addReference(newElement);\n    } else {\n      // establish child -> parent relationship\n      newElement.$parent = element;\n    }\n  }\n\n  return childHandler;\n};\n\n\nfunction GenericElementHandler(model, type, context) {\n  this.model = model;\n  this.context = context;\n}\n\nGenericElementHandler.prototype = Object.create(BaseElementHandler.prototype);\n\nGenericElementHandler.prototype.createElement = function(node) {\n\n  var name = node.name,\n      prefix = node.prefix,\n      uri = node.ns[prefix],\n      attributes = node.attributes;\n\n  return this.model.createAny(name, uri, attributes);\n};\n\nGenericElementHandler.prototype.handleChild = function(node) {\n\n  var handler = new GenericElementHandler(this.model, 'Element', this.context).handleNode(node),\n      element = this.element;\n\n  var newElement = handler.element,\n      children;\n\n  if (newElement !== undefined) {\n    children = element.$children = element.$children || [];\n    children.push(newElement);\n\n    // establish child -> parent relationship\n    newElement.$parent = element;\n  }\n\n  return handler;\n};\n\nGenericElementHandler.prototype.handleText = function(text) {\n  this.body = this.body || '' + text;\n};\n\nGenericElementHandler.prototype.handleEnd = function() {\n  if (this.body) {\n    this.element.$body = this.body;\n  }\n};\n\n/**\n * A reader for a meta-model\n *\n * @param {Object} options\n * @param {Model} options.model used to read xml files\n * @param {Boolean} options.lax whether to make parse errors warnings\n */\nfunction XMLReader(options) {\n\n  if (options instanceof Moddle) {\n    options = {\n      model: options\n    };\n  }\n\n  assign(this, { lax: false }, options);\n}\n\n\n/**\n * Parse the given XML into a moddle document tree.\n *\n * @param {String} xml\n * @param {ElementHandler|Object} options or rootHandler\n * @param  {Function} done\n */\nXMLReader.prototype.fromXML = function(xml, options, done) {\n\n  var rootHandler = options.rootHandler;\n\n  if (options instanceof ElementHandler) {\n    // root handler passed via (xml, { rootHandler: ElementHandler }, ...)\n    rootHandler = options;\n    options = {};\n  } else {\n    if (typeof options === 'string') {\n      // rootHandler passed via (xml, 'someString', ...)\n      rootHandler = this.handler(options);\n      options = {};\n    } else if (typeof rootHandler === 'string') {\n      // rootHandler passed via (xml, { rootHandler: 'someString' }, ...)\n      rootHandler = this.handler(rootHandler);\n    }\n  }\n\n  var model = this.model,\n      lax = this.lax;\n\n  var context = new Context(assign({}, options, { rootHandler: rootHandler })),\n      parser = new SaxParser(true, { xmlns: true, trim: true }),\n      stack = new Stack();\n\n  rootHandler.context = context;\n\n  // push root handler\n  stack.push(rootHandler);\n\n\n  function resolveReferences() {\n\n    var elementsById = context.elementsById;\n    var references = context.references;\n\n    var i, r;\n\n    for (i = 0; !!(r = references[i]); i++) {\n      var element = r.element;\n      var reference = elementsById[r.id];\n      var property = getModdleDescriptor(element).propertiesByName[r.property];\n\n      if (!reference) {\n        context.addWarning({\n          message: 'unresolved reference <' + r.id + '>',\n          element: r.element,\n          property: r.property,\n          value: r.id\n        });\n      }\n\n      if (property.isMany) {\n        var collection = element.get(property.name),\n            idx = collection.indexOf(r);\n\n        // we replace an existing place holder (idx != -1) or\n        // append to the collection instead\n        if (idx === -1) {\n          idx = collection.length;\n        }\n\n        if (!reference) {\n          // remove unresolvable reference\n          collection.splice(idx, 1);\n        } else {\n          // add or update reference in collection\n          collection[idx] = reference;\n        }\n      } else {\n        element.set(property.name, reference);\n      }\n    }\n  }\n\n  function handleClose(tagName) {\n    stack.pop().handleEnd();\n  }\n\n  function handleOpen(node) {\n    var handler = stack.peek();\n\n    normalizeNamespaces(node, model);\n\n    try {\n      stack.push(handler.handleNode(node));\n    } catch (e) {\n\n      var line = this.line,\n          column = this.column;\n\n      var message =\n        'unparsable content <' + node.name + '> detected/n/t' +\n          'line: ' + line + '/n/t' +\n          'column: ' + column + '/n/t' +\n          'nested error: ' + e.message;\n\n      if (lax) {\n        context.addWarning({\n          message: message,\n          error: e\n        });\n\n        console.warn('could not parse node');\n        console.warn(e);\n\n        stack.push(new NoopHandler());\n      } else {\n        console.error('could not parse document');\n        console.error(e);\n\n        throw error(message);\n      }\n    }\n  }\n\n  function handleText(text) {\n    stack.peek().handleText(text);\n  }\n\n  parser.onopentag = handleOpen;\n  parser.oncdata = parser.ontext = handleText;\n  parser.onclosetag = handleClose;\n  parser.onend = resolveReferences;\n\n  // deferred parse XML to make loading really ascnchronous\n  // this ensures the execution environment (node or browser)\n  // is kept responsive and that certain optimization strategies\n  // can kick in\n  defer(function() {\n    var error;\n\n    try {\n      parser.write(xml).close();\n    } catch (e) {\n      error = e;\n    }\n\n    done(error, error ? undefined : rootHandler.element, context);\n  });\n};\n\nXMLReader.prototype.handler = function(name) {\n  return new ElementHandler(this.model, name);\n};\n\nmodule.exports = XMLReader;\nmodule.exports.ElementHandler = ElementHandler;","'use strict';\n\nvar map = require(138),\n    forEach = require(136),\n    isString = require(247),\n    filter = require(134),\n    assign = require(250);\n\nvar Types = require(279),\n    parseNameNs = require(276).parseName,\n    common = require(268),\n    nameToAlias = common.nameToAlias,\n    serializeAsType = common.serializeAsType,\n    serializeAsProperty = common.serializeAsProperty;\n\nvar XML_PREAMBLE = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>/n',\n    ESCAPE_CHARS = /(<|>|'|\"|&|/n/r|/n)/g,\n    DEFAULT_NS_MAP = common.DEFAULT_NS_MAP,\n    XSI_TYPE = common.XSI_TYPE;\n\n\nfunction nsName(ns) {\n  if (isString(ns)) {\n    return ns;\n  } else {\n    return (ns.prefix ? ns.prefix + ':' : '') + ns.localName;\n  }\n}\n\nfunction getNsAttrs(namespaces) {\n\n  function isUsed(ns) {\n    return namespaces.used[ns.uri];\n  }\n\n  function toAttr(ns) {\n    var name = 'xmlns' + (ns.prefix ? ':' + ns.prefix : '');\n    return { name: name, value: ns.uri };\n  }\n\n  var allNs = [].concat(namespaces.wellknown, namespaces.custom);\n\n  return map(filter(allNs, isUsed), toAttr);\n}\n\nfunction getElementNs(ns, descriptor) {\n  if (descriptor.isGeneric) {\n    return descriptor.name;\n  } else {\n    return assign({ localName: nameToAlias(descriptor.ns.localName, descriptor.$pkg) }, ns);\n  }\n}\n\nfunction getPropertyNs(ns, descriptor) {\n  return assign({ localName: descriptor.ns.localName }, ns);\n}\n\nfunction getSerializableProperties(element) {\n  var descriptor = element.$descriptor;\n\n  return filter(descriptor.properties, function(p) {\n    var name = p.name;\n\n    if (p.isVirtual) {\n      return false;\n    }\n\n    // do not serialize defaults\n    if (!element.hasOwnProperty(name)) {\n      return false;\n    }\n\n    var value = element[name];\n\n    // do not serialize default equals\n    if (value === p.default) {\n      return false;\n    }\n\n    // do not serialize null properties\n    if (value === null) {\n      return false;\n    }\n\n    return p.isMany ? value.length : true;\n  });\n}\n\nvar ESCAPE_MAP = {\n  '/n': '10',\n  '/n/r': '10',\n  '\"': '34',\n  '/'': '39',\n  '<': '60',\n  '>': '62',\n  '&': '38'\n};\n\n/**\n * Escape a string attribute to not contain any bad values (line breaks, '\"', ...)\n *\n * @param {String} str the string to escape\n * @return {String} the escaped string\n */\nfunction escapeAttr(str) {\n\n  // ensure we are handling strings here\n  str = isString(str) ? str : '' + str;\n\n  return str.replace(ESCAPE_CHARS, function(str) {\n    return '&#' + ESCAPE_MAP[str] + ';';\n  });\n}\n\nfunction filterAttributes(props) {\n  return filter(props, function(p) { return p.isAttr; });\n}\n\nfunction filterContained(props) {\n  return filter(props, function(p) { return !p.isAttr; });\n}\n\n\nfunction ReferenceSerializer(parent, ns) {\n  this.ns = ns;\n}\n\nReferenceSerializer.prototype.build = function(element) {\n  this.element = element;\n  return this;\n};\n\nReferenceSerializer.prototype.serializeTo = function(writer) {\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns) + '>' + this.element.id + '</' + nsName(this.ns) + '>')\n    .appendNewLine();\n};\n\nfunction BodySerializer() {}\n\nBodySerializer.prototype.serializeValue = BodySerializer.prototype.serializeTo = function(writer) {\n  var escape = this.escape;\n\n  if (escape) {\n    writer.append('<![CDATA[');\n  }\n\n  writer.append(this.value);\n\n  if (escape) {\n    writer.append(']]>');\n  }\n};\n\nBodySerializer.prototype.build = function(prop, value) {\n  this.value = value;\n\n  if (prop.type === 'String' && value.search(ESCAPE_CHARS) !== -1) {\n    this.escape = true;\n  }\n\n  return this;\n};\n\nfunction ValueSerializer(ns) {\n  this.ns = ns;\n}\n\nValueSerializer.prototype = new BodySerializer();\n\nValueSerializer.prototype.serializeTo = function(writer) {\n\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns) + '>');\n\n  this.serializeValue(writer);\n\n  writer\n    .append( '</' + nsName(this.ns) + '>')\n    .appendNewLine();\n};\n\nfunction ElementSerializer(parent, ns) {\n  this.body = [];\n  this.attrs = [];\n\n  this.parent = parent;\n  this.ns = ns;\n}\n\nElementSerializer.prototype.build = function(element) {\n  this.element = element;\n\n  var otherAttrs = this.parseNsAttributes(element);\n\n  if (!this.ns) {\n    this.ns = this.nsTagName(element.$descriptor);\n  }\n\n  if (element.$descriptor.isGeneric) {\n    this.parseGeneric(element);\n  } else {\n    var properties = getSerializableProperties(element);\n\n    this.parseAttributes(filterAttributes(properties));\n    this.parseContainments(filterContained(properties));\n\n    this.parseGenericAttributes(element, otherAttrs);\n  }\n\n  return this;\n};\n\nElementSerializer.prototype.nsTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getElementNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.nsPropertyTagName = function(descriptor) {\n  var effectiveNs = this.logNamespaceUsed(descriptor.ns);\n  return getPropertyNs(effectiveNs, descriptor);\n};\n\nElementSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === this.ns.uri;\n};\n\n/**\n * Get the actual ns attribute name for the given element.\n *\n * @param {Object} element\n * @param {Boolean} [inherited=false]\n *\n * @return {Object} nsName\n */\nElementSerializer.prototype.nsAttributeName = function(element) {\n\n  var ns;\n\n  if (isString(element)) {\n    ns = parseNameNs(element);\n  } else {\n    ns = element.ns;\n  }\n\n  // return just local name for inherited attributes\n  if (element.inherited) {\n    return { localName: ns.localName };\n  }\n\n  // parse + log effective ns\n  var effectiveNs = this.logNamespaceUsed(ns);\n\n  // strip prefix if same namespace like parent\n  if (this.isLocalNs(effectiveNs)) {\n    return { localName: ns.localName };\n  } else {\n    return assign({ localName: ns.localName }, effectiveNs);\n  }\n};\n\nElementSerializer.prototype.parseGeneric = function(element) {\n\n  var self = this,\n      body = this.body,\n      attrs = this.attrs;\n\n  forEach(element, function(val, key) {\n\n    if (key === '$body') {\n      body.push(new BodySerializer().build({ type: 'String' }, val));\n    } else\n    if (key === '$children') {\n      forEach(val, function(child) {\n        body.push(new ElementSerializer(self).build(child));\n      });\n    } else\n    if (key.indexOf('$') !== 0) {\n      attrs.push({ name: key, value: escapeAttr(val) });\n    }\n  });\n};\n\n/**\n * Parse namespaces and return a list of left over generic attributes\n *\n * @param  {Object} element\n * @return {Array<Object>}\n */\nElementSerializer.prototype.parseNsAttributes = function(element) {\n  var self = this;\n\n  var genericAttrs = element.$attrs;\n\n  var model = element.$model;\n\n  var attributes = [];\n\n  // parse namespace attributes first\n  // and log them. push non namespace attributes to a list\n  // and process them later\n  forEach(genericAttrs, function(value, name) {\n    var nameNs = parseNameNs(name);\n\n    var ns;\n\n    // parse xmlns:foo=\"http://foo.bar\"\n    if (nameNs.prefix === 'xmlns') {\n      ns = { prefix: nameNs.localName, uri: value };\n    }\n\n    // parse xmlns=\"http://foo.bar\"\n    if (!nameNs.prefix && nameNs.localName === 'xmlns') {\n      ns = { uri: value };\n    }\n\n    if (ns) {\n      if (model.getPackage(value)) {\n        // register well known namespace\n        self.logNamespace(ns, true);\n      } else {\n        // log custom namespace directly as used\n        self.logNamespaceUsed(ns);\n      }\n    } else {\n      attributes.push({ name: name, value: value });\n    }\n  });\n\n  return attributes;\n};\n\nElementSerializer.prototype.parseGenericAttributes = function(element, attributes) {\n\n  var self = this;\n\n  forEach(attributes, function(attr) {\n\n    // do not serialize xsi:type attribute\n    // it is set manually based on the actual implementation type\n    if (attr.name === XSI_TYPE) {\n      return;\n    }\n\n    try {\n      self.addAttribute(self.nsAttributeName(attr.name), attr.value);\n    } catch (e) {\n      console.warn(\n        'missing namespace information for ',\n        attr.name, '=', attr.value, 'on', element,\n        e);\n    }\n  });\n};\n\nElementSerializer.prototype.parseContainments = function(properties) {\n\n  var self = this,\n      body = this.body,\n      element = this.element;\n\n  forEach(properties, function(p) {\n    var value = element.get(p.name),\n        isReference = p.isReference,\n        isMany = p.isMany;\n\n    var ns = self.nsPropertyTagName(p);\n\n    if (!isMany) {\n      value = [ value ];\n    }\n\n    if (p.isBody) {\n      body.push(new BodySerializer().build(p, value[0]));\n    } else\n    if (Types.isSimple(p.type)) {\n      forEach(value, function(v) {\n        body.push(new ValueSerializer(ns).build(p, v));\n      });\n    } else\n    if (isReference) {\n      forEach(value, function(v) {\n        body.push(new ReferenceSerializer(self, ns).build(v));\n      });\n    } else {\n      // allow serialization via type\n      // rather than element name\n      var asType = serializeAsType(p),\n          asProperty = serializeAsProperty(p);\n\n      forEach(value, function(v) {\n        var serializer;\n\n        if (asType) {\n          serializer = new TypeSerializer(self, ns);\n        } else\n        if (asProperty) {\n          serializer = new ElementSerializer(self, ns);\n        } else {\n          serializer = new ElementSerializer(self);\n        }\n\n        body.push(serializer.build(v));\n      });\n    }\n  });\n};\n\nElementSerializer.prototype.getNamespaces = function() {\n\n  var namespaces = this.namespaces,\n      parent = this.parent;\n\n  if (!namespaces) {\n    namespaces = this.namespaces = parent ? parent.getNamespaces() : {\n      prefixMap: {},\n      uriMap: {},\n      used: {},\n      wellknown: [],\n      custom: []\n    };\n  }\n\n  return namespaces;\n};\n\nElementSerializer.prototype.logNamespace = function(ns, wellknown) {\n  var namespaces = this.getNamespaces();\n\n  var nsUri = ns.uri;\n\n  var existing = namespaces.uriMap[nsUri];\n\n  if (!existing) {\n    namespaces.uriMap[nsUri] = ns;\n\n    if (wellknown) {\n      namespaces.wellknown.push(ns);\n    } else {\n      namespaces.custom.push(ns);\n    }\n  }\n\n  namespaces.prefixMap[ns.prefix] = nsUri;\n\n  return ns;\n};\n\nElementSerializer.prototype.logNamespaceUsed = function(ns) {\n  var element = this.element,\n      model = element.$model,\n      namespaces = this.getNamespaces();\n\n  // ns may be\n  //\n  //   * prefix only\n  //   * prefix:uri\n\n  var prefix = ns.prefix;\n\n  var wellknownUri = DEFAULT_NS_MAP[prefix] || model && (model.getPackage(prefix) || {}).uri;\n\n  var uri = ns.uri || namespaces.prefixMap[prefix] || wellknownUri;\n\n  if (!uri) {\n    throw new Error('no namespace uri given for prefix <' + ns.prefix + '>');\n  }\n\n  ns = namespaces.uriMap[uri];\n\n  if (!ns) {\n    ns = this.logNamespace({ prefix: prefix, uri: uri }, wellknownUri);\n  }\n\n  if (!namespaces.used[ns.uri]) {\n    namespaces.used[ns.uri] = ns;\n  }\n\n  return ns;\n};\n\nElementSerializer.prototype.parseAttributes = function(properties) {\n  var self = this,\n      element = this.element;\n\n  forEach(properties, function(p) {\n\n    var value = element.get(p.name);\n\n    if (p.isReference) {\n\n      if (!p.isMany) {\n        value = value.id;\n      }\n      else {\n        var values = [];\n        forEach(value, function(v) {\n          values.push(v.id);\n        });\n        // IDREFS is a whitespace-separated list of references.\n        value = values.join(' ');\n      }\n\n    }\n\n    self.addAttribute(self.nsAttributeName(p), value);\n  });\n};\n\nElementSerializer.prototype.addAttribute = function(name, value) {\n  var attrs = this.attrs;\n\n  if (isString(value)) {\n    value = escapeAttr(value);\n  }\n\n  attrs.push({ name: name, value: value });\n};\n\nElementSerializer.prototype.serializeAttributes = function(writer) {\n  var attrs = this.attrs,\n      root = !this.parent;\n\n  if (root) {\n    attrs = getNsAttrs(this.namespaces).concat(attrs);\n  }\n\n  forEach(attrs, function(a) {\n    writer\n      .append(' ')\n      .append(nsName(a.name)).append('=\"').append(a.value).append('\"');\n  });\n};\n\nElementSerializer.prototype.serializeTo = function(writer) {\n  var hasBody = this.body.length,\n      indent = !(this.body.length === 1 && this.body[0] instanceof BodySerializer);\n\n  writer\n    .appendIndent()\n    .append('<' + nsName(this.ns));\n\n  this.serializeAttributes(writer);\n\n  writer.append(hasBody ? '>' : ' />');\n\n  if (hasBody) {\n\n    if (indent) {\n      writer\n        .appendNewLine()\n        .indent();\n    }\n\n    forEach(this.body, function(b) {\n      b.serializeTo(writer);\n    });\n\n    if (indent) {\n      writer\n        .unindent()\n        .appendIndent();\n    }\n\n    writer.append('</' + nsName(this.ns) + '>');\n  }\n\n  writer.appendNewLine();\n};\n\n/**\n * A serializer for types that handles serialization of data types\n */\nfunction TypeSerializer(parent, ns) {\n  ElementSerializer.call(this, parent, ns);\n}\n\nTypeSerializer.prototype = new ElementSerializer();\n\nTypeSerializer.prototype.build = function(element) {\n  var descriptor = element.$descriptor;\n\n  this.element = element;\n\n  this.typeNs = this.nsTagName(descriptor);\n\n  // add xsi:type attribute to represent the elements\n  // actual type\n\n  var typeNs = this.typeNs,\n      pkg = element.$model.getPackage(typeNs.uri),\n      typePrefix = (pkg.xml && pkg.xml.typePrefix) || '';\n\n  this.addAttribute(this.nsAttributeName(XSI_TYPE),\n    (typeNs.prefix ? typeNs.prefix + ':' : '') +\n    typePrefix + descriptor.ns.localName);\n\n  // do the usual stuff\n  return ElementSerializer.prototype.build.call(this, element);\n};\n\nTypeSerializer.prototype.isLocalNs = function(ns) {\n  return ns.uri === this.typeNs.uri;\n};\n\nfunction SavingWriter() {\n  this.value = '';\n\n  this.write = function(str) {\n    this.value += str;\n  };\n}\n\nfunction FormatingWriter(out, format) {\n\n  var indent = [''];\n\n  this.append = function(str) {\n    out.write(str);\n\n    return this;\n  };\n\n  this.appendNewLine = function() {\n    if (format) {\n      out.write('/n');\n    }\n\n    return this;\n  };\n\n  this.appendIndent = function() {\n    if (format) {\n      out.write(indent.join('  '));\n    }\n\n    return this;\n  };\n\n  this.indent = function() {\n    indent.push('');\n    return this;\n  };\n\n  this.unindent = function() {\n    indent.pop();\n    return this;\n  };\n}\n\n/**\n * A writer for meta-model backed document trees\n *\n * @param {Object} options output options to pass into the writer\n */\nfunction XMLWriter(options) {\n\n  options = assign({ format: false, preamble: true }, options || {});\n\n  function toXML(tree, writer) {\n    var internalWriter = writer || new SavingWriter();\n    var formatingWriter = new FormatingWriter(internalWriter, options.format);\n\n    if (options.preamble) {\n      formatingWriter.append(XML_PREAMBLE);\n    }\n\n    new ElementSerializer().build(tree).serializeTo(formatingWriter);\n\n    if (!writer) {\n      return internalWriter.value;\n    }\n  }\n\n  return {\n    toXML: toXML\n  };\n}\n\nmodule.exports = XMLWriter;\n","module.exports = require(275);","'use strict';\n\nfunction Base() { }\n\nBase.prototype.get = function(name) {\n  return this.$model.properties.get(this, name);\n};\n\nBase.prototype.set = function(name, value) {\n  this.$model.properties.set(this, name, value);\n};\n\n\nmodule.exports = Base;","'use strict';\n\nvar pick = require(256),\n    assign = require(250),\n    forEach = require(136);\n\nvar parseNameNs = require(276).parseName;\n\n\nfunction DescriptorBuilder(nameNs) {\n  this.ns = nameNs;\n  this.name = nameNs.name;\n  this.allTypes = [];\n  this.properties = [];\n  this.propertiesByName = {};\n}\n\nmodule.exports = DescriptorBuilder;\n\n\nDescriptorBuilder.prototype.build = function() {\n  return pick(this, [\n    'ns',\n    'name',\n    'allTypes',\n    'properties',\n    'propertiesByName',\n    'bodyProperty',\n    'idProperty'\n  ]);\n};\n\n/**\n * Add property at given index.\n *\n * @param {Object} p\n * @param {Number} [idx]\n * @param {Boolean} [validate=true]\n */\nDescriptorBuilder.prototype.addProperty = function(p, idx, validate) {\n\n  if (typeof idx === 'boolean') {\n    validate = idx;\n    idx = undefined;\n  }\n\n  this.addNamedProperty(p, validate !== false);\n\n  var properties = this.properties;\n\n  if (idx !== undefined) {\n    properties.splice(idx, 0, p);\n  } else {\n    properties.push(p);\n  }\n};\n\n\nDescriptorBuilder.prototype.replaceProperty = function(oldProperty, newProperty, replace) {\n  var oldNameNs = oldProperty.ns;\n\n  var props = this.properties,\n      propertiesByName = this.propertiesByName,\n      rename = oldProperty.name !== newProperty.name;\n\n  if (oldProperty.isId) {\n    if (!newProperty.isId) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be id property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    this.setIdProperty(newProperty, false);\n  }\n\n  if (oldProperty.isBody) {\n\n    if (!newProperty.isBody) {\n      throw new Error(\n        'property <' + newProperty.ns.name + '> must be body property ' +\n        'to refine <' + oldProperty.ns.name + '>');\n    }\n\n    // TODO: Check compatibility\n    this.setBodyProperty(newProperty, false);\n  }\n\n  // validate existence and get location of old property\n  var idx = props.indexOf(oldProperty);\n  if (idx === -1) {\n    throw new Error('property <' + oldNameNs.name + '> not found in property list');\n  }\n\n  // remove old property\n  props.splice(idx, 1);\n\n  // replacing the named property is intentional\n  //\n  //  * validate only if this is a \"rename\" operation\n  //  * add at specific index unless we \"replace\"\n  //\n  this.addProperty(newProperty, replace ? undefined : idx, rename);\n\n  // make new property available under old name\n  propertiesByName[oldNameNs.name] = propertiesByName[oldNameNs.localName] = newProperty;\n};\n\n\nDescriptorBuilder.prototype.redefineProperty = function(p, targetPropertyName, replace) {\n\n  var nsPrefix = p.ns.prefix;\n  var parts = targetPropertyName.split('#');\n\n  var name = parseNameNs(parts[0], nsPrefix);\n  var attrName = parseNameNs(parts[1], name.prefix).name;\n\n  var redefinedProperty = this.propertiesByName[attrName];\n  if (!redefinedProperty) {\n    throw new Error('refined property <' + attrName + '> not found');\n  } else {\n    this.replaceProperty(redefinedProperty, p, replace);\n  }\n\n  delete p.redefines;\n};\n\nDescriptorBuilder.prototype.addNamedProperty = function(p, validate) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  if (validate) {\n    this.assertNotDefined(p, ns.name);\n    this.assertNotDefined(p, ns.localName);\n  }\n\n  propsByName[ns.name] = propsByName[ns.localName] = p;\n};\n\nDescriptorBuilder.prototype.removeNamedProperty = function(p) {\n  var ns = p.ns,\n      propsByName = this.propertiesByName;\n\n  delete propsByName[ns.name];\n  delete propsByName[ns.localName];\n};\n\nDescriptorBuilder.prototype.setBodyProperty = function(p, validate) {\n\n  if (validate && this.bodyProperty) {\n    throw new Error(\n      'body property defined multiple times ' +\n      '(<' + this.bodyProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.bodyProperty = p;\n};\n\nDescriptorBuilder.prototype.setIdProperty = function(p, validate) {\n\n  if (validate && this.idProperty) {\n    throw new Error(\n      'id property defined multiple times ' +\n      '(<' + this.idProperty.ns.name + '>, <' + p.ns.name + '>)');\n  }\n\n  this.idProperty = p;\n};\n\nDescriptorBuilder.prototype.assertNotDefined = function(p, name) {\n  var propertyName = p.name,\n      definedProperty = this.propertiesByName[propertyName];\n\n  if (definedProperty) {\n    throw new Error(\n      'property <' + propertyName + '> already defined; ' +\n      'override of <' + definedProperty.definedBy.ns.name + '#' + definedProperty.ns.name + '> by ' +\n      '<' + p.definedBy.ns.name + '#' + p.ns.name + '> not allowed without redefines');\n  }\n};\n\nDescriptorBuilder.prototype.hasProperty = function(name) {\n  return this.propertiesByName[name];\n};\n\nDescriptorBuilder.prototype.addTrait = function(t, inherited) {\n\n  var allTypes = this.allTypes;\n\n  if (allTypes.indexOf(t) !== -1) {\n    return;\n  }\n\n  forEach(t.properties, function(p) {\n\n    // clone property to allow extensions\n    p = assign({}, p, {\n      name: p.ns.localName,\n      inherited: inherited\n    });\n\n    Object.defineProperty(p, 'definedBy', {\n      value: t\n    });\n\n    var replaces = p.replaces,\n        redefines = p.redefines;\n\n    // add replace/redefine support\n    if (replaces || redefines) {\n      this.redefineProperty(p, replaces || redefines, replaces);\n    } else {\n      if (p.isBody) {\n        this.setBodyProperty(p);\n      }\n      if (p.isId) {\n        this.setIdProperty(p);\n      }\n      this.addProperty(p);\n    }\n  }, this);\n\n  allTypes.push(t);\n};\n","'use strict';\n\nvar forEach = require(136);\n\nvar Base = require(272);\n\n\nfunction Factory(model, properties) {\n  this.model = model;\n  this.properties = properties;\n}\n\nmodule.exports = Factory;\n\n\nFactory.prototype.createType = function(descriptor) {\n\n  var model = this.model;\n\n  var props = this.properties,\n      prototype = Object.create(Base.prototype);\n\n  // initialize default values\n  forEach(descriptor.properties, function(p) {\n    if (!p.isMany && p.default !== undefined) {\n      prototype[p.name] = p.default;\n    }\n  });\n\n  props.defineModel(prototype, model);\n  props.defineDescriptor(prototype, descriptor);\n\n  var name = descriptor.ns.name;\n\n  /**\n   * The new type constructor\n   */\n  function ModdleElement(attrs) {\n    props.define(this, '$type', { value: name, enumerable: true });\n    props.define(this, '$attrs', { value: {} });\n    props.define(this, '$parent', { writable: true });\n\n    forEach(attrs, function(val, key) {\n      this.set(key, val);\n    }, this);\n  }\n\n  ModdleElement.prototype = prototype;\n\n  ModdleElement.hasType = prototype.$instanceOf = this.model.hasType;\n\n  // static links\n  props.defineModel(ModdleElement, model);\n  props.defineDescriptor(ModdleElement, descriptor);\n\n  return ModdleElement;\n};","'use strict';\n\nvar isString = require(247),\n    isObject = require(245),\n    forEach = require(136),\n    find = require(135);\n\n\nvar Factory = require(274),\n    Registry = require(278),\n    Properties = require(277);\n\nvar parseNameNs = require(276).parseName;\n\n\n//// Moddle implementation /////////////////////////////////////////////////\n\n/**\n * @class Moddle\n *\n * A model that can be used to create elements of a specific type.\n *\n * @example\n *\n * var Moddle = require('moddle');\n *\n * var pkg = {\n *   name: 'mypackage',\n *   prefix: 'my',\n *   types: [\n *     { name: 'Root' }\n *   ]\n * };\n *\n * var moddle = new Moddle([pkg]);\n *\n * @param {Array<Package>} packages the packages to contain\n */\nfunction Moddle(packages) {\n\n  this.properties = new Properties(this);\n\n  this.factory = new Factory(this, this.properties);\n  this.registry = new Registry(packages, this.properties);\n\n  this.typeCache = {};\n}\n\nmodule.exports = Moddle;\n\n\n/**\n * Create an instance of the specified type.\n *\n * @method Moddle#create\n *\n * @example\n *\n * var foo = moddle.create('my:Foo');\n * var bar = moddle.create('my:Bar', { id: 'BAR_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @param  {Object} attrs   a number of attributes to initialize the model instance with\n * @return {Object}         model instance\n */\nModdle.prototype.create = function(descriptor, attrs) {\n  var Type = this.getType(descriptor);\n\n  if (!Type) {\n    throw new Error('unknown type <' + descriptor + '>');\n  }\n\n  return new Type(attrs);\n};\n\n\n/**\n * Returns the type representing a given descriptor\n *\n * @method Moddle#getType\n *\n * @example\n *\n * var Foo = moddle.getType('my:Foo');\n * var foo = new Foo({ 'id' : 'FOO_1' });\n *\n * @param  {String|Object} descriptor the type descriptor or name know to the model\n * @return {Object}         the type representing the descriptor\n */\nModdle.prototype.getType = function(descriptor) {\n\n  var cache = this.typeCache;\n\n  var name = isString(descriptor) ? descriptor : descriptor.ns.name;\n\n  var type = cache[name];\n\n  if (!type) {\n    descriptor = this.registry.getEffectiveDescriptor(name);\n    type = cache[name] = this.factory.createType(descriptor);\n  }\n\n  return type;\n};\n\n\n/**\n * Creates an any-element type to be used within model instances.\n *\n * This can be used to create custom elements that lie outside the meta-model.\n * The created element contains all the meta-data required to serialize it\n * as part of meta-model elements.\n *\n * @method Moddle#createAny\n *\n * @example\n *\n * var foo = moddle.createAny('vendor:Foo', 'http://vendor', {\n *   value: 'bar'\n * });\n *\n * var container = moddle.create('my:Container', 'http://my', {\n *   any: [ foo ]\n * });\n *\n * // go ahead and serialize the stuff\n *\n *\n * @param  {String} name  the name of the element\n * @param  {String} nsUri the namespace uri of the element\n * @param  {Object} [properties] a map of properties to initialize the instance with\n * @return {Object} the any type instance\n */\nModdle.prototype.createAny = function(name, nsUri, properties) {\n\n  var nameNs = parseNameNs(name);\n\n  var element = {\n    $type: name\n  };\n\n  var descriptor = {\n    name: name,\n    isGeneric: true,\n    ns: {\n      prefix: nameNs.prefix,\n      localName: nameNs.localName,\n      uri: nsUri\n    }\n  };\n\n  this.properties.defineDescriptor(element, descriptor);\n  this.properties.defineModel(element, this);\n  this.properties.define(element, '$parent', { enumerable: false, writable: true });\n\n  forEach(properties, function(a, key) {\n    if (isObject(a) && a.value !== undefined) {\n      element[a.name] = a.value;\n    } else {\n      element[key] = a;\n    }\n  });\n\n  return element;\n};\n\n/**\n * Returns a registered package by uri or prefix\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackage = function(uriOrPrefix) {\n  return this.registry.getPackage(uriOrPrefix);\n};\n\n/**\n * Returns a snapshot of all known packages\n *\n * @return {Object} the package\n */\nModdle.prototype.getPackages = function() {\n  return this.registry.getPackages();\n};\n\n/**\n * Returns the descriptor for an element\n */\nModdle.prototype.getElementDescriptor = function(element) {\n  return element.$descriptor;\n};\n\n/**\n * Returns true if the given descriptor or instance\n * represents the given type.\n *\n * May be applied to this, if element is omitted.\n */\nModdle.prototype.hasType = function(element, type) {\n  if (type === undefined) {\n    type = element;\n    element = this;\n  }\n\n  var descriptor = element.$model.getElementDescriptor(element);\n\n  return !!find(descriptor.allTypes, function(t) {\n    return t.name === type;\n  });\n};\n\n/**\n * Returns the descriptor of an elements named property\n */\nModdle.prototype.getPropertyDescriptor = function(element, property) {\n  return this.getElementDescriptor(element).propertiesByName[property];\n};\n\n/**\n * Returns a mapped type's descriptor\n */\nModdle.prototype.getTypeDescriptor = function(type) {\n  return this.registry.typeMap[type];\n};\n","'use strict';\n\n/**\n * Parses a namespaced attribute name of the form (ns:)localName to an object,\n * given a default prefix to assume in case no explicit namespace is given.\n *\n * @param {String} name\n * @param {String} [defaultPrefix] the default prefix to take, if none is present.\n *\n * @return {Object} the parsed name\n */\nmodule.exports.parseName = function(name, defaultPrefix) {\n  var parts = name.split(/:/),\n      localName, prefix;\n\n  // no prefix (i.e. only local name)\n  if (parts.length === 1) {\n    localName = name;\n    prefix = defaultPrefix;\n  } else\n  // prefix + local name\n  if (parts.length === 2) {\n    localName = parts[1];\n    prefix = parts[0];\n  } else {\n    throw new Error('expected <prefix:localName> or <localName>, got ' + name);\n  }\n\n  name = (prefix ? prefix + ':' : '') + localName;\n\n  return {\n    name: name,\n    prefix: prefix,\n    localName: localName\n  };\n};","'use strict';\n\n\n/**\n * A utility that gets and sets properties of model elements.\n *\n * @param {Model} model\n */\nfunction Properties(model) {\n  this.model = model;\n}\n\nmodule.exports = Properties;\n\n\n/**\n * Sets a named property on the target element.\n * If the value is undefined, the property gets deleted.\n *\n * @param {Object} target\n * @param {String} name\n * @param {Object} value\n */\nProperties.prototype.set = function(target, name, value) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  var propertyName = property && property.name;\n\n  if (isUndefined(value)) {\n    // unset the property, if the specified value is undefined;\n    // delete from $attrs (for extensions) or the target itself\n    if (property) {\n      delete target[propertyName];\n    } else {\n      delete target.$attrs[name];\n    }\n  } else {\n    // set the property, defining well defined properties on the fly\n    // or simply updating them in target.$attrs (for extensions)\n    if (property) {\n      if (propertyName in target) {\n        target[propertyName] = value;\n      } else {\n        defineProperty(target, property, value);\n      }\n    } else {\n      target.$attrs[name] = value;\n    }\n  }\n};\n\n/**\n * Returns the named property of the given element\n *\n * @param  {Object} target\n * @param  {String} name\n *\n * @return {Object}\n */\nProperties.prototype.get = function(target, name) {\n\n  var property = this.model.getPropertyDescriptor(target, name);\n\n  if (!property) {\n    return target.$attrs[name];\n  }\n\n  var propertyName = property.name;\n\n  // check if access to collection property and lazily initialize it\n  if (!target[propertyName] && property.isMany) {\n    defineProperty(target, property, []);\n  }\n\n  return target[propertyName];\n};\n\n\n/**\n * Define a property on the target element\n *\n * @param  {Object} target\n * @param  {String} name\n * @param  {Object} options\n */\nProperties.prototype.define = function(target, name, options) {\n  Object.defineProperty(target, name, options);\n};\n\n\n/**\n * Define the descriptor for an element\n */\nProperties.prototype.defineDescriptor = function(target, descriptor) {\n  this.define(target, '$descriptor', { value: descriptor });\n};\n\n/**\n * Define the model for an element\n */\nProperties.prototype.defineModel = function(target, model) {\n  this.define(target, '$model', { value: model });\n};\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\nfunction defineProperty(target, property, value) {\n  Object.defineProperty(target, property.name, {\n    enumerable: !property.isReference,\n    writable: true,\n    value: value,\n    configurable: true\n  });\n}","'use strict';\n\nvar assign = require(250),\n    forEach = require(136);\n\nvar Types = require(279),\n    DescriptorBuilder = require(273);\n\nvar parseNameNs = require(276).parseName,\n    isBuiltInType = Types.isBuiltIn;\n\n\nfunction Registry(packages, properties) {\n  this.packageMap = {};\n  this.typeMap = {};\n\n  this.packages = [];\n\n  this.properties = properties;\n\n  forEach(packages, this.registerPackage, this);\n}\n\nmodule.exports = Registry;\n\n\nRegistry.prototype.getPackage = function(uriOrPrefix) {\n  return this.packageMap[uriOrPrefix];\n};\n\nRegistry.prototype.getPackages = function() {\n  return this.packages;\n};\n\n\nRegistry.prototype.registerPackage = function(pkg) {\n\n  // copy package\n  pkg = assign({}, pkg);\n\n  // register types\n  forEach(pkg.types, function(descriptor) {\n    this.registerType(descriptor, pkg);\n  }, this);\n\n  this.packageMap[pkg.uri] = this.packageMap[pkg.prefix] = pkg;\n  this.packages.push(pkg);\n};\n\n\n/**\n * Register a type from a specific package with us\n */\nRegistry.prototype.registerType = function(type, pkg) {\n\n  type = assign({}, type, {\n    superClass: (type.superClass || []).slice(),\n    extends: (type.extends || []).slice(),\n    properties: (type.properties || []).slice(),\n    meta: assign(({}, type.meta || {}))\n  });\n\n  var ns = parseNameNs(type.name, pkg.prefix),\n      name = ns.name,\n      propertiesByName = {};\n\n  // parse properties\n  forEach(type.properties, function(p) {\n\n    // namespace property names\n    var propertyNs = parseNameNs(p.name, ns.prefix),\n        propertyName = propertyNs.name;\n\n    // namespace property types\n    if (!isBuiltInType(p.type)) {\n      p.type = parseNameNs(p.type, propertyNs.prefix).name;\n    }\n\n    assign(p, {\n      ns: propertyNs,\n      name: propertyName\n    });\n\n    propertiesByName[propertyName] = p;\n  });\n\n  // update ns + name\n  assign(type, {\n    ns: ns,\n    name: name,\n    propertiesByName: propertiesByName\n  });\n\n  forEach(type.extends, function(extendsName) {\n    var extended = this.typeMap[extendsName];\n\n    extended.traits = extended.traits || [];\n    extended.traits.push(name);\n  }, this);\n\n  // link to package\n  this.definePackage(type, pkg);\n\n  // register\n  this.typeMap[name] = type;\n};\n\n\n/**\n * Traverse the type hierarchy from bottom to top,\n * calling iterator with (type, inherited) for all elements in\n * the inheritance chain.\n *\n * @param {Object} nsName\n * @param {Function} iterator\n * @param {Boolean} [trait=false]\n */\nRegistry.prototype.mapTypes = function(nsName, iterator, trait) {\n\n  var type = isBuiltInType(nsName.name) ? { name: nsName.name } : this.typeMap[nsName.name];\n\n  var self = this;\n\n  /**\n   * Traverse the selected trait.\n   *\n   * @param {String} cls\n   */\n  function traverseTrait(cls) {\n    return traverseSuper(cls, true);\n  }\n\n  /**\n   * Traverse the selected super type or trait\n   *\n   * @param {String} cls\n   * @param {Boolean} [trait=false]\n   */\n  function traverseSuper(cls, trait) {\n    var parentNs = parseNameNs(cls, isBuiltInType(cls) ? '' : nsName.prefix);\n    self.mapTypes(parentNs, iterator, trait);\n  }\n\n  if (!type) {\n    throw new Error('unknown type <' + nsName.name + '>');\n  }\n\n  forEach(type.superClass, trait ? traverseTrait : traverseSuper);\n\n  // call iterator with (type, inherited=!trait)\n  iterator(type, !trait);\n\n  forEach(type.traits, traverseTrait);\n};\n\n\n/**\n * Returns the effective descriptor for a type.\n *\n * @param  {String} type the namespaced name (ns:localName) of the type\n *\n * @return {Descriptor} the resulting effective descriptor\n */\nRegistry.prototype.getEffectiveDescriptor = function(name) {\n\n  var nsName = parseNameNs(name);\n\n  var builder = new DescriptorBuilder(nsName);\n\n  this.mapTypes(nsName, function(type, inherited) {\n    builder.addTrait(type, inherited);\n  });\n\n  var descriptor = builder.build();\n\n  // define package link\n  this.definePackage(descriptor, descriptor.allTypes[descriptor.allTypes.length - 1].$pkg);\n\n  return descriptor;\n};\n\n\nRegistry.prototype.definePackage = function(target, pkg) {\n  this.properties.define(target, '$pkg', { value: pkg });\n};\n","'use strict';\n\n/**\n * Built-in moddle types\n */\nvar BUILTINS = {\n  String: true,\n  Boolean: true,\n  Integer: true,\n  Real: true,\n  Element: true\n};\n\n/**\n * Converters for built in types from string representations\n */\nvar TYPE_CONVERTERS = {\n  String: function(s) { return s; },\n  Boolean: function(s) { return s === 'true'; },\n  Integer: function(s) { return parseInt(s, 10); },\n  Real: function(s) { return parseFloat(s, 10); }\n};\n\n/**\n * Convert a type to its real representation\n */\nmodule.exports.coerceType = function(type, value) {\n\n  var converter = TYPE_CONVERTERS[type];\n\n  if (converter) {\n    return converter(value);\n  } else {\n    return value;\n  }\n};\n\n/**\n * Return whether the given type is built-in\n */\nmodule.exports.isBuiltIn = function(type) {\n  return !!BUILTINS[type];\n};\n\n/**\n * Return whether the given type is simple\n */\nmodule.exports.isSimple = function(type) {\n  return !!TYPE_CONVERTERS[type];\n};","module.exports = require(282);\n\nmodule.exports.Collection = require(281);","'use strict';\n\n/**\n * An empty collection stub. Use {@link RefsCollection.extend} to extend a\n * collection with ref semantics.\n *\n * @class RefsCollection\n */\n\n/**\n * Extends a collection with {@link Refs} aware methods\n *\n * @memberof RefsCollection\n * @static\n *\n * @param  {Array<Object>} collection\n * @param  {Refs} refs instance\n * @param  {Object} property represented by the collection\n * @param  {Object} target object the collection is attached to\n *\n * @return {RefsCollection<Object>} the extended array\n */\nfunction extend(collection, refs, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  /**\n   * Removes the given element from the array and returns it.\n   *\n   * @method RefsCollection#remove\n   *\n   * @param {Object} element the element to remove\n   */\n  Object.defineProperty(collection, 'remove', {\n    value: function(element) {\n      var idx = this.indexOf(element);\n      if (idx !== -1) {\n        this.splice(idx, 1);\n\n        // unset inverse\n        refs.unset(element, inverseProperty, target);\n      }\n\n      return element;\n    }\n  });\n\n  /**\n   * Returns true if the collection contains the given element\n   *\n   * @method RefsCollection#contains\n   *\n   * @param {Object} element the element to check for\n   */\n  Object.defineProperty(collection, 'contains', {\n    value: function(element) {\n      return this.indexOf(element) !== -1;\n    }\n  });\n\n  /**\n   * Adds an element to the array, unless it exists already (set semantics).\n   *\n   * @method RefsCollection#add\n   *\n   * @param {Object} element the element to add\n   */\n  Object.defineProperty(collection, 'add', {\n    value: function(element) {\n\n      if (!this.contains(element)) {\n        this.push(element);\n\n        // set inverse\n        refs.set(element, inverseProperty, target);\n      }\n    }\n  });\n\n  // a simple marker, identifying this element\n  // as being a refs collection\n  Object.defineProperty(collection, '__refs_collection', {\n    value: true\n  });\n\n  return collection;\n}\n\n\nfunction isExtended(collection) {\n  return collection.__refs_collection === true;\n}\n\nmodule.exports.extend = extend;\n\nmodule.exports.isExtended = isExtended;","'use strict';\n\nvar Collection = require(281);\n\nfunction hasOwnProperty(e, property) {\n  return Object.prototype.hasOwnProperty.call(e, property.name || property);\n}\n\nfunction defineCollectionProperty(ref, property, target) {\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n    value: Collection.extend(target[property.name] || [], ref, property, target)\n  });\n}\n\n\nfunction defineProperty(ref, property, target) {\n\n  var inverseProperty = property.inverse;\n\n  var _value = target[property.name];\n\n  Object.defineProperty(target, property.name, {\n    enumerable: property.enumerable,\n\n    get: function() {\n      return _value;\n    },\n\n    set: function(value) {\n\n      // return if we already performed all changes\n      if (value === _value) {\n        return;\n      }\n\n      var old = _value;\n\n      // temporary set null\n      _value = null;\n\n      if (old) {\n        ref.unset(old, inverseProperty, target);\n      }\n\n      // set new value\n      _value = value;\n\n      // set inverse value\n      ref.set(_value, inverseProperty, target);\n    }\n  });\n\n}\n\n/**\n * Creates a new references object defining two inversly related\n * attribute descriptors a and b.\n *\n * <p>\n *   When bound to an object using {@link Refs#bind} the references\n *   get activated and ensure that add and remove operations are applied\n *   reversely, too.\n * </p>\n *\n * <p>\n *   For attributes represented as collections {@link Refs} provides the\n *   {@link RefsCollection#add}, {@link RefsCollection#remove} and {@link RefsCollection#contains} extensions\n *   that must be used to properly hook into the inverse change mechanism.\n * </p>\n *\n * @class Refs\n *\n * @classdesc A bi-directional reference between two attributes.\n *\n * @param {Refs.AttributeDescriptor} a property descriptor\n * @param {Refs.AttributeDescriptor} b property descriptor\n *\n * @example\n *\n * var refs = Refs({ name: 'wheels', collection: true, enumerable: true }, { name: 'car' });\n *\n * var car = { name: 'toyota' };\n * var wheels = [{ pos: 'front-left' }, { pos: 'front-right' }];\n *\n * refs.bind(car, 'wheels');\n *\n * car.wheels // []\n * car.wheels.add(wheels[0]);\n * car.wheels.add(wheels[1]);\n *\n * car.wheels // [{ pos: 'front-left' }, { pos: 'front-right' }]\n *\n * wheels[0].car // { name: 'toyota' };\n * car.wheels.remove(wheels[0]);\n *\n * wheels[0].car // undefined\n */\nfunction Refs(a, b) {\n\n  if (!(this instanceof Refs)) {\n    return new Refs(a, b);\n  }\n\n  // link\n  a.inverse = b;\n  b.inverse = a;\n\n  this.props = {};\n  this.props[a.name] = a;\n  this.props[b.name] = b;\n}\n\n/**\n * Binds one side of a bi-directional reference to a\n * target object.\n *\n * @memberOf Refs\n *\n * @param  {Object} target\n * @param  {String} property\n */\nRefs.prototype.bind = function(target, property) {\n  if (typeof property === 'string') {\n    if (!this.props[property]) {\n      throw new Error('no property <' + property + '> in ref');\n    }\n    property = this.props[property];\n  }\n\n  if (property.collection) {\n    defineCollectionProperty(this, property, target);\n  } else {\n    defineProperty(this, property, target);\n  }\n};\n\nRefs.prototype.ensureRefsCollection = function(target, property) {\n\n  var collection = target[property.name];\n\n  if (!Collection.isExtended(collection)) {\n    defineCollectionProperty(this, property, target);\n  }\n\n  return collection;\n};\n\nRefs.prototype.ensureBound = function(target, property) {\n  if (!hasOwnProperty(target, property)) {\n    this.bind(target, property);\n  }\n};\n\nRefs.prototype.unset = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).remove(value);\n    } else {\n      target[property.name] = undefined;\n    }\n  }\n};\n\nRefs.prototype.set = function(target, property, value) {\n\n  if (target) {\n    this.ensureBound(target, property);\n\n    if (property.collection) {\n      this.ensureRefsCollection(target, property).add(value);\n    } else {\n      target[property.name] = value;\n    }\n  }\n};\n\nmodule.exports = Refs;\n\n\n/**\n * An attribute descriptor to be used specify an attribute in a {@link Refs} instance\n *\n * @typedef {Object} Refs.AttributeDescriptor\n * @property {String} name\n * @property {boolean} [collection=false]\n * @property {boolean} [enumerable=false]\n */","// wrapper for non-node envs\n;(function (sax) {\n\nsax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\nsax.SAXParser = SAXParser\nsax.SAXStream = SAXStream\nsax.createStream = createStream\n\n// When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n// When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n// since that's the earliest that a buffer overrun could occur.  This way, checks are\n// as rare as required, but as often as necessary to ensure never crossing this bound.\n// Furthermore, buffers are only tested at most once per write(), so passing a very\n// large string into write() might have undesirable effects, but this is manageable by\n// the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n// edge case, result in creating at most one complete copy of the string passed in.\n// Set to Infinity to have unlimited buffers.\nsax.MAX_BUFFER_LENGTH = 64 * 1024\n\nvar buffers = [\n  \"comment\", \"sgmlDecl\", \"textNode\", \"tagName\", \"doctype\",\n  \"procInstName\", \"procInstBody\", \"entity\", \"attribName\",\n  \"attribValue\", \"cdata\", \"script\"\n]\n\nsax.EVENTS = // for discoverability.\n  [ \"text\"\n  , \"processinginstruction\"\n  , \"sgmldeclaration\"\n  , \"doctype\"\n  , \"comment\"\n  , \"attribute\"\n  , \"opentag\"\n  , \"closetag\"\n  , \"opencdata\"\n  , \"cdata\"\n  , \"closecdata\"\n  , \"error\"\n  , \"end\"\n  , \"ready\"\n  , \"script\"\n  , \"opennamespace\"\n  , \"closenamespace\"\n  ]\n\nfunction SAXParser (strict, opt) {\n  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)\n\n  var parser = this\n  clearBuffers(parser)\n  parser.q = parser.c = \"\"\n  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n  parser.opt = opt || {}\n  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n  parser.looseCase = parser.opt.lowercase ? \"toLowerCase\" : \"toUpperCase\"\n  parser.tags = []\n  parser.closed = parser.closedRoot = parser.sawRoot = false\n  parser.tag = parser.error = null\n  parser.strict = !!strict\n  parser.noscript = !!(strict || parser.opt.noscript)\n  parser.state = S.BEGIN\n  parser.ENTITIES = Object.create(sax.ENTITIES)\n  parser.attribList = []\n\n  // namespaces form a prototype chain.\n  // it always points at the current tag,\n  // which protos to its parent tag.\n  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)\n\n  // mostly just for error reporting\n  parser.trackPosition = parser.opt.position !== false\n  if (parser.trackPosition) {\n    parser.position = parser.line = parser.column = 0\n  }\n  emit(parser, \"onready\")\n}\n\nif (!Object.create) Object.create = function (o) {\n  function f () { this.__proto__ = o }\n  f.prototype = o\n  return new f\n}\n\nif (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {\n  return o.__proto__\n}\n\nif (!Object.keys) Object.keys = function (o) {\n  var a = []\n  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n  return a\n}\n\nfunction checkBufferLength (parser) {\n  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    , maxActual = 0\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    var len = parser[buffers[i]].length\n    if (len > maxAllowed) {\n      // Text/cdata nodes can get big, and since they're buffered,\n      // we can get here under normal conditions.\n      // Avoid issues by emitting the text node now,\n      // so at least it won't get any bigger.\n      switch (buffers[i]) {\n        case \"textNode\":\n          closeText(parser)\n        break\n\n        case \"cdata\":\n          emitNode(parser, \"oncdata\", parser.cdata)\n          parser.cdata = \"\"\n        break\n\n        case \"script\":\n          emitNode(parser, \"onscript\", parser.script)\n          parser.script = \"\"\n        break\n\n        default:\n          error(parser, \"Max buffer length exceeded: \"+buffers[i])\n      }\n    }\n    maxActual = Math.max(maxActual, len)\n  }\n  // schedule the next check for the earliest possible buffer overrun.\n  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)\n                             + parser.position\n}\n\nfunction clearBuffers (parser) {\n  for (var i = 0, l = buffers.length; i < l; i ++) {\n    parser[buffers[i]] = \"\"\n  }\n}\n\nfunction flushBuffers (parser) {\n  closeText(parser)\n  if (parser.cdata !== \"\") {\n    emitNode(parser, \"oncdata\", parser.cdata)\n    parser.cdata = \"\"\n  }\n  if (parser.script !== \"\") {\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n}\n\nSAXParser.prototype =\n  { end: function () { end(this) }\n  , write: write\n  , resume: function () { this.error = null; return this }\n  , close: function () { return this.write(null) }\n  , flush: function () { flushBuffers(this) }\n  }\n\ntry {\n  var Stream = require(\"stream\").Stream\n} catch (ex) {\n  var Stream = function () {}\n}\n\n\nvar streamWraps = sax.EVENTS.filter(function (ev) {\n  return ev !== \"error\" && ev !== \"end\"\n})\n\nfunction createStream (strict, opt) {\n  return new SAXStream(strict, opt)\n}\n\nfunction SAXStream (strict, opt) {\n  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)\n\n  Stream.apply(this)\n\n  this._parser = new SAXParser(strict, opt)\n  this.writable = true\n  this.readable = true\n\n\n  var me = this\n\n  this._parser.onend = function () {\n    me.emit(\"end\")\n  }\n\n  this._parser.onerror = function (er) {\n    me.emit(\"error\", er)\n\n    // if didn't throw, then means error was handled.\n    // go ahead and clear error, so we can write again.\n    me._parser.error = null\n  }\n\n  this._decoder = null;\n\n  streamWraps.forEach(function (ev) {\n    Object.defineProperty(me, \"on\" + ev, {\n      get: function () { return me._parser[\"on\" + ev] },\n      set: function (h) {\n        if (!h) {\n          me.removeAllListeners(ev)\n          return me._parser[\"on\"+ev] = h\n        }\n        me.on(ev, h)\n      },\n      enumerable: true,\n      configurable: false\n    })\n  })\n}\n\nSAXStream.prototype = Object.create(Stream.prototype,\n  { constructor: { value: SAXStream } })\n\nSAXStream.prototype.write = function (data) {\n  if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n    if (!this._decoder) {\n      var SD = require('string_decoder').StringDecoder\n      this._decoder = new SD('utf8')\n    }\n    data = this._decoder.write(data);\n  }\n\n  this._parser.write(data.toString())\n  this.emit(\"data\", data)\n  return true\n}\n\nSAXStream.prototype.end = function (chunk) {\n  if (chunk && chunk.length) this.write(chunk)\n  this._parser.end()\n  return true\n}\n\nSAXStream.prototype.on = function (ev, handler) {\n  var me = this\n  if (!me._parser[\"on\"+ev] && streamWraps.indexOf(ev) !== -1) {\n    me._parser[\"on\"+ev] = function () {\n      var args = arguments.length === 1 ? [arguments[0]]\n               : Array.apply(null, arguments)\n      args.splice(0, 0, ev)\n      me.emit.apply(me, args)\n    }\n  }\n\n  return Stream.prototype.on.call(me, ev, handler)\n}\n\n\n\n// character classes and tokens\nvar whitespace = \"/r/n/t \"\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  , number = \"0124356789\"\n  , letter = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  // (Letter | \"_\" | \":\")\n  , quote = \"'/\"\"\n  , entity = number+letter+\"#\"\n  , attribEnd = whitespace + \">\"\n  , CDATA = \"[CDATA[\"\n  , DOCTYPE = \"DOCTYPE\"\n  , XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\"\n  , XMLNS_NAMESPACE = \"http://www.w3.org/2000/xmlns/\"\n  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n// turn all the string character sets into character class objects.\nwhitespace = charClass(whitespace)\nnumber = charClass(number)\nletter = charClass(letter)\n\n// http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n// This implementation works on strings, a single character at a time\n// as such, it cannot ever support astral-plane characters (10000-EFFFF)\n// without a significant breaking change to either this  parser, or the\n// JavaScript language.  Implementation of an emoji-capable xml parser\n// is left as an exercise for the reader.\nvar nameStart = /[:_A-Za-z/u00C0-/u00D6/u00D8-/u00F6/u00F8-/u02FF/u0370-/u037D/u037F-/u1FFF/u200C-/u200D/u2070-/u218F/u2C00-/u2FEF/u3001-/uD7FF/uF900-/uFDCF/uFDF0-/uFFFD]/\n\nvar nameBody = /[:_A-Za-z/u00C0-/u00D6/u00D8-/u00F6/u00F8-/u02FF/u0370-/u037D/u037F-/u1FFF/u200C-/u200D/u2070-/u218F/u2C00-/u2FEF/u3001-/uD7FF/uF900-/uFDCF/uFDF0-/uFFFD/u00B7/u0300-/u036F/u203F-/u2040/./d-]/\n\nquote = charClass(quote)\nentity = charClass(entity)\nattribEnd = charClass(attribEnd)\n\nfunction charClass (str) {\n  return str.split(\"\").reduce(function (s, c) {\n    s[c] = true\n    return s\n  }, {})\n}\n\nfunction isRegExp (c) {\n  return Object.prototype.toString.call(c) === '[object RegExp]'\n}\n\nfunction is (charclass, c) {\n  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n}\n\nfunction not (charclass, c) {\n  return !is(charclass, c)\n}\n\nvar S = 0\nsax.STATE =\n{ BEGIN                     : S++\n, TEXT                      : S++ // general stuff\n, TEXT_ENTITY               : S++ // &amp and such.\n, OPEN_WAKA                 : S++ // <\n, SGML_DECL                 : S++ // <!BLARG\n, SGML_DECL_QUOTED          : S++ // <!BLARG foo \"bar\n, DOCTYPE                   : S++ // <!DOCTYPE\n, DOCTYPE_QUOTED            : S++ // <!DOCTYPE \"//blah\n, DOCTYPE_DTD               : S++ // <!DOCTYPE \"//blah\" [ ...\n, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE \"//blah\" [ \"foo\n, COMMENT_STARTING          : S++ // <!-\n, COMMENT                   : S++ // <!--\n, COMMENT_ENDING            : S++ // <!-- blah -\n, COMMENT_ENDED             : S++ // <!-- blah --\n, CDATA                     : S++ // <![CDATA[ something\n, CDATA_ENDING              : S++ // ]\n, CDATA_ENDING_2            : S++ // ]]\n, PROC_INST                 : S++ // <?hi\n, PROC_INST_BODY            : S++ // <?hi there\n, PROC_INST_ENDING          : S++ // <?hi \"there\" ?\n, OPEN_TAG                  : S++ // <strong\n, OPEN_TAG_SLASH            : S++ // <strong /\n, ATTRIB                    : S++ // <a\n, ATTRIB_NAME               : S++ // <a foo\n, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _\n, ATTRIB_VALUE              : S++ // <a foo=\n, ATTRIB_VALUE_QUOTED       : S++ // <a foo=\"bar\n, ATTRIB_VALUE_CLOSED       : S++ // <a foo=\"bar\"\n, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar\n, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar=\"&quot;\"\n, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;\n, CLOSE_TAG                 : S++ // </a\n, CLOSE_TAG_SAW_WHITE       : S++ // </a   >\n, SCRIPT                    : S++ // <script> ...\n, SCRIPT_ENDING             : S++ // <script> ... <\n}\n\nsax.ENTITIES =\n{ \"amp\" : \"&\"\n, \"gt\" : \">\"\n, \"lt\" : \"<\"\n, \"quot\" : \"/\"\"\n, \"apos\" : \"'\"\n, \"AElig\" : 198\n, \"Aacute\" : 193\n, \"Acirc\" : 194\n, \"Agrave\" : 192\n, \"Aring\" : 197\n, \"Atilde\" : 195\n, \"Auml\" : 196\n, \"Ccedil\" : 199\n, \"ETH\" : 208\n, \"Eacute\" : 201\n, \"Ecirc\" : 202\n, \"Egrave\" : 200\n, \"Euml\" : 203\n, \"Iacute\" : 205\n, \"Icirc\" : 206\n, \"Igrave\" : 204\n, \"Iuml\" : 207\n, \"Ntilde\" : 209\n, \"Oacute\" : 211\n, \"Ocirc\" : 212\n, \"Ograve\" : 210\n, \"Oslash\" : 216\n, \"Otilde\" : 213\n, \"Ouml\" : 214\n, \"THORN\" : 222\n, \"Uacute\" : 218\n, \"Ucirc\" : 219\n, \"Ugrave\" : 217\n, \"Uuml\" : 220\n, \"Yacute\" : 221\n, \"aacute\" : 225\n, \"acirc\" : 226\n, \"aelig\" : 230\n, \"agrave\" : 224\n, \"aring\" : 229\n, \"atilde\" : 227\n, \"auml\" : 228\n, \"ccedil\" : 231\n, \"eacute\" : 233\n, \"ecirc\" : 234\n, \"egrave\" : 232\n, \"eth\" : 240\n, \"euml\" : 235\n, \"iacute\" : 237\n, \"icirc\" : 238\n, \"igrave\" : 236\n, \"iuml\" : 239\n, \"ntilde\" : 241\n, \"oacute\" : 243\n, \"ocirc\" : 244\n, \"ograve\" : 242\n, \"oslash\" : 248\n, \"otilde\" : 245\n, \"ouml\" : 246\n, \"szlig\" : 223\n, \"thorn\" : 254\n, \"uacute\" : 250\n, \"ucirc\" : 251\n, \"ugrave\" : 249\n, \"uuml\" : 252\n, \"yacute\" : 253\n, \"yuml\" : 255\n, \"copy\" : 169\n, \"reg\" : 174\n, \"nbsp\" : 160\n, \"iexcl\" : 161\n, \"cent\" : 162\n, \"pound\" : 163\n, \"curren\" : 164\n, \"yen\" : 165\n, \"brvbar\" : 166\n, \"sect\" : 167\n, \"uml\" : 168\n, \"ordf\" : 170\n, \"laquo\" : 171\n, \"not\" : 172\n, \"shy\" : 173\n, \"macr\" : 175\n, \"deg\" : 176\n, \"plusmn\" : 177\n, \"sup1\" : 185\n, \"sup2\" : 178\n, \"sup3\" : 179\n, \"acute\" : 180\n, \"micro\" : 181\n, \"para\" : 182\n, \"middot\" : 183\n, \"cedil\" : 184\n, \"ordm\" : 186\n, \"raquo\" : 187\n, \"frac14\" : 188\n, \"frac12\" : 189\n, \"frac34\" : 190\n, \"iquest\" : 191\n, \"times\" : 215\n, \"divide\" : 247\n, \"OElig\" : 338\n, \"oelig\" : 339\n, \"Scaron\" : 352\n, \"scaron\" : 353\n, \"Yuml\" : 376\n, \"fnof\" : 402\n, \"circ\" : 710\n, \"tilde\" : 732\n, \"Alpha\" : 913\n, \"Beta\" : 914\n, \"Gamma\" : 915\n, \"Delta\" : 916\n, \"Epsilon\" : 917\n, \"Zeta\" : 918\n, \"Eta\" : 919\n, \"Theta\" : 920\n, \"Iota\" : 921\n, \"Kappa\" : 922\n, \"Lambda\" : 923\n, \"Mu\" : 924\n, \"Nu\" : 925\n, \"Xi\" : 926\n, \"Omicron\" : 927\n, \"Pi\" : 928\n, \"Rho\" : 929\n, \"Sigma\" : 931\n, \"Tau\" : 932\n, \"Upsilon\" : 933\n, \"Phi\" : 934\n, \"Chi\" : 935\n, \"Psi\" : 936\n, \"Omega\" : 937\n, \"alpha\" : 945\n, \"beta\" : 946\n, \"gamma\" : 947\n, \"delta\" : 948\n, \"epsilon\" : 949\n, \"zeta\" : 950\n, \"eta\" : 951\n, \"theta\" : 952\n, \"iota\" : 953\n, \"kappa\" : 954\n, \"lambda\" : 955\n, \"mu\" : 956\n, \"nu\" : 957\n, \"xi\" : 958\n, \"omicron\" : 959\n, \"pi\" : 960\n, \"rho\" : 961\n, \"sigmaf\" : 962\n, \"sigma\" : 963\n, \"tau\" : 964\n, \"upsilon\" : 965\n, \"phi\" : 966\n, \"chi\" : 967\n, \"psi\" : 968\n, \"omega\" : 969\n, \"thetasym\" : 977\n, \"upsih\" : 978\n, \"piv\" : 982\n, \"ensp\" : 8194\n, \"emsp\" : 8195\n, \"thinsp\" : 8201\n, \"zwnj\" : 8204\n, \"zwj\" : 8205\n, \"lrm\" : 8206\n, \"rlm\" : 8207\n, \"ndash\" : 8211\n, \"mdash\" : 8212\n, \"lsquo\" : 8216\n, \"rsquo\" : 8217\n, \"sbquo\" : 8218\n, \"ldquo\" : 8220\n, \"rdquo\" : 8221\n, \"bdquo\" : 8222\n, \"dagger\" : 8224\n, \"Dagger\" : 8225\n, \"bull\" : 8226\n, \"hellip\" : 8230\n, \"permil\" : 8240\n, \"prime\" : 8242\n, \"Prime\" : 8243\n, \"lsaquo\" : 8249\n, \"rsaquo\" : 8250\n, \"oline\" : 8254\n, \"frasl\" : 8260\n, \"euro\" : 8364\n, \"image\" : 8465\n, \"weierp\" : 8472\n, \"real\" : 8476\n, \"trade\" : 8482\n, \"alefsym\" : 8501\n, \"larr\" : 8592\n, \"uarr\" : 8593\n, \"rarr\" : 8594\n, \"darr\" : 8595\n, \"harr\" : 8596\n, \"crarr\" : 8629\n, \"lArr\" : 8656\n, \"uArr\" : 8657\n, \"rArr\" : 8658\n, \"dArr\" : 8659\n, \"hArr\" : 8660\n, \"forall\" : 8704\n, \"part\" : 8706\n, \"exist\" : 8707\n, \"empty\" : 8709\n, \"nabla\" : 8711\n, \"isin\" : 8712\n, \"notin\" : 8713\n, \"ni\" : 8715\n, \"prod\" : 8719\n, \"sum\" : 8721\n, \"minus\" : 8722\n, \"lowast\" : 8727\n, \"radic\" : 8730\n, \"prop\" : 8733\n, \"infin\" : 8734\n, \"ang\" : 8736\n, \"and\" : 8743\n, \"or\" : 8744\n, \"cap\" : 8745\n, \"cup\" : 8746\n, \"int\" : 8747\n, \"there4\" : 8756\n, \"sim\" : 8764\n, \"cong\" : 8773\n, \"asymp\" : 8776\n, \"ne\" : 8800\n, \"equiv\" : 8801\n, \"le\" : 8804\n, \"ge\" : 8805\n, \"sub\" : 8834\n, \"sup\" : 8835\n, \"nsub\" : 8836\n, \"sube\" : 8838\n, \"supe\" : 8839\n, \"oplus\" : 8853\n, \"otimes\" : 8855\n, \"perp\" : 8869\n, \"sdot\" : 8901\n, \"lceil\" : 8968\n, \"rceil\" : 8969\n, \"lfloor\" : 8970\n, \"rfloor\" : 8971\n, \"lang\" : 9001\n, \"rang\" : 9002\n, \"loz\" : 9674\n, \"spades\" : 9824\n, \"clubs\" : 9827\n, \"hearts\" : 9829\n, \"diams\" : 9830\n}\n\nObject.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n})\n\nfor (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S\n\n// shorthand\nS = sax.STATE\n\nfunction emit (parser, event, data) {\n  parser[event] && parser[event](data)\n}\n\nfunction emitNode (parser, nodeType, data) {\n  if (parser.textNode) closeText(parser)\n  emit(parser, nodeType, data)\n}\n\nfunction closeText (parser) {\n  parser.textNode = textopts(parser.opt, parser.textNode)\n  if (parser.textNode) emit(parser, \"ontext\", parser.textNode)\n  parser.textNode = \"\"\n}\n\nfunction textopts (opt, text) {\n  if (opt.trim) text = text.trim()\n  if (opt.normalize) text = text.replace(//s+/g, \" \")\n  return text\n}\n\nfunction error (parser, er) {\n  closeText(parser)\n  if (parser.trackPosition) {\n    er += \"/nLine: \"+parser.line+\n          \"/nColumn: \"+parser.column+\n          \"/nChar: \"+parser.c\n  }\n  er = new Error(er)\n  parser.error = er\n  emit(parser, \"onerror\", er)\n  return parser\n}\n\nfunction end (parser) {\n  if (!parser.closedRoot) strictFail(parser, \"Unclosed root tag\")\n  if ((parser.state !== S.BEGIN) && (parser.state !== S.TEXT)) error(parser, \"Unexpected end\")\n  closeText(parser)\n  parser.c = \"\"\n  parser.closed = true\n  emit(parser, \"onend\")\n  SAXParser.call(parser, parser.strict, parser.opt)\n  return parser\n}\n\nfunction strictFail (parser, message) {\n  if (typeof parser !== 'object' || !(parser instanceof SAXParser))\n    throw new Error('bad call to strictFail');\n  if (parser.strict) error(parser, message)\n}\n\nfunction newTag (parser) {\n  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n  var parent = parser.tags[parser.tags.length - 1] || parser\n    , tag = parser.tag = { name : parser.tagName, attributes : {} }\n\n  // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n  if (parser.opt.xmlns) tag.ns = parent.ns\n  parser.attribList.length = 0\n}\n\nfunction qname (name, attribute) {\n  var i = name.indexOf(\":\")\n    , qualName = i < 0 ? [ \"\", name ] : name.split(\":\")\n    , prefix = qualName[0]\n    , local = qualName[1]\n\n  // <x \"xmlns\"=\"http://foo\">\n  if (attribute && name === \"xmlns\") {\n    prefix = \"xmlns\"\n    local = \"\"\n  }\n\n  return { prefix: prefix, local: local }\n}\n\nfunction attrib (parser) {\n  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()\n\n  if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n    return parser.attribName = parser.attribValue = \"\"\n  }\n\n  if (parser.opt.xmlns) {\n    var qn = qname(parser.attribName, true)\n      , prefix = qn.prefix\n      , local = qn.local\n\n    if (prefix === \"xmlns\") {\n      // namespace binding attribute; push the binding into scope\n      if (local === \"xml\" && parser.attribValue !== XML_NAMESPACE) {\n        strictFail( parser\n                  , \"xml: prefix must be bound to \" + XML_NAMESPACE + \"/n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else if (local === \"xmlns\" && parser.attribValue !== XMLNS_NAMESPACE) {\n        strictFail( parser\n                  , \"xmlns: prefix must be bound to \" + XMLNS_NAMESPACE + \"/n\"\n                  + \"Actual: \" + parser.attribValue )\n      } else {\n        var tag = parser.tag\n          , parent = parser.tags[parser.tags.length - 1] || parser\n        if (tag.ns === parent.ns) {\n          tag.ns = Object.create(parent.ns)\n        }\n        tag.ns[local] = parser.attribValue\n      }\n    }\n\n    // defer onattribute events until all attributes have been seen\n    // so any new bindings can take effect; preserve attribute order\n    // so deferred events can be emitted in document order\n    parser.attribList.push([parser.attribName, parser.attribValue])\n  } else {\n    // in non-xmlns mode, we can emit the event right away\n    parser.tag.attributes[parser.attribName] = parser.attribValue\n    emitNode( parser\n            , \"onattribute\"\n            , { name: parser.attribName\n              , value: parser.attribValue } )\n  }\n\n  parser.attribName = parser.attribValue = \"\"\n}\n\nfunction openTag (parser, selfClosing) {\n  if (parser.opt.xmlns) {\n    // emit namespace binding events\n    var tag = parser.tag\n\n    // add namespace info to tag\n    var qn = qname(parser.tagName)\n    tag.prefix = qn.prefix\n    tag.local = qn.local\n    tag.uri = tag.ns[qn.prefix] || \"\"\n\n    if (tag.prefix && !tag.uri) {\n      strictFail(parser, \"Unbound namespace prefix: \"\n                       + JSON.stringify(parser.tagName))\n      tag.uri = qn.prefix\n    }\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (tag.ns && parent.ns !== tag.ns) {\n      Object.keys(tag.ns).forEach(function (p) {\n        emitNode( parser\n                , \"onopennamespace\"\n                , { prefix: p , uri: tag.ns[p] } )\n      })\n    }\n\n    // handle deferred onattribute events\n    // Note: do not apply default ns to attributes:\n    //   http://www.w3.org/TR/REC-xml-names/#defaulting\n    for (var i = 0, l = parser.attribList.length; i < l; i ++) {\n      var nv = parser.attribList[i]\n      var name = nv[0]\n        , value = nv[1]\n        , qualName = qname(name, true)\n        , prefix = qualName.prefix\n        , local = qualName.local\n        , uri = prefix == \"\" ? \"\" : (tag.ns[prefix] || \"\")\n        , a = { name: name\n              , value: value\n              , prefix: prefix\n              , local: local\n              , uri: uri\n              }\n\n      // if there's any attributes with an undefined namespace,\n      // then fail on them now.\n      if (prefix && prefix != \"xmlns\" && !uri) {\n        strictFail(parser, \"Unbound namespace prefix: \"\n                         + JSON.stringify(prefix))\n        a.uri = prefix\n      }\n      parser.tag.attributes[name] = a\n      emitNode(parser, \"onattribute\", a)\n    }\n    parser.attribList.length = 0\n  }\n\n  parser.tag.isSelfClosing = !!selfClosing\n\n  // process the tag\n  parser.sawRoot = true\n  parser.tags.push(parser.tag)\n  emitNode(parser, \"onopentag\", parser.tag)\n  if (!selfClosing) {\n    // special case for <script> in non-strict mode.\n    if (!parser.noscript && parser.tagName.toLowerCase() === \"script\") {\n      parser.state = S.SCRIPT\n    } else {\n      parser.state = S.TEXT\n    }\n    parser.tag = null\n    parser.tagName = \"\"\n  }\n  parser.attribName = parser.attribValue = \"\"\n  parser.attribList.length = 0\n}\n\nfunction closeTag (parser) {\n  if (!parser.tagName) {\n    strictFail(parser, \"Weird empty close tag.\")\n    parser.textNode += \"</>\"\n    parser.state = S.TEXT\n    return\n  }\n\n  if (parser.script) {\n    if (parser.tagName !== \"script\") {\n      parser.script += \"</\" + parser.tagName + \">\"\n      parser.tagName = \"\"\n      parser.state = S.SCRIPT\n      return\n    }\n    emitNode(parser, \"onscript\", parser.script)\n    parser.script = \"\"\n  }\n\n  // first make sure that the closing tag actually exists.\n  // <a><b></c></b></a> will close everything, otherwise.\n  var t = parser.tags.length\n  var tagName = parser.tagName\n  if (!parser.strict) tagName = tagName[parser.looseCase]()\n  var closeTo = tagName\n  while (t --) {\n    var close = parser.tags[t]\n    if (close.name !== closeTo) {\n      // fail the first time in strict mode\n      strictFail(parser, \"Unexpected close tag\")\n    } else break\n  }\n\n  // didn't find it.  we already failed for strict, so just abort.\n  if (t < 0) {\n    strictFail(parser, \"Unmatched closing tag: \"+parser.tagName)\n    parser.textNode += \"</\" + parser.tagName + \">\"\n    parser.state = S.TEXT\n    return\n  }\n  parser.tagName = tagName\n  var s = parser.tags.length\n  while (s --> t) {\n    var tag = parser.tag = parser.tags.pop()\n    parser.tagName = parser.tag.name\n    emitNode(parser, \"onclosetag\", parser.tagName)\n\n    var x = {}\n    for (var i in tag.ns) x[i] = tag.ns[i]\n\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    if (parser.opt.xmlns && tag.ns !== parent.ns) {\n      // remove namespace bindings introduced by tag\n      Object.keys(tag.ns).forEach(function (p) {\n        var n = tag.ns[p]\n        emitNode(parser, \"onclosenamespace\", { prefix: p, uri: n })\n      })\n    }\n  }\n  if (t === 0) parser.closedRoot = true\n  parser.tagName = parser.attribValue = parser.attribName = \"\"\n  parser.attribList.length = 0\n  parser.state = S.TEXT\n}\n\nfunction parseEntity (parser) {\n  var entity = parser.entity\n    , entityLC = entity.toLowerCase()\n    , num\n    , numStr = \"\"\n  if (parser.ENTITIES[entity])\n    return parser.ENTITIES[entity]\n  if (parser.ENTITIES[entityLC])\n    return parser.ENTITIES[entityLC]\n  entity = entityLC\n  if (entity.charAt(0) === \"#\") {\n    if (entity.charAt(1) === \"x\") {\n      entity = entity.slice(2)\n      num = parseInt(entity, 16)\n      numStr = num.toString(16)\n    } else {\n      entity = entity.slice(1)\n      num = parseInt(entity, 10)\n      numStr = num.toString(10)\n    }\n  }\n  entity = entity.replace(/^0+/, \"\")\n  if (numStr.toLowerCase() !== entity) {\n    strictFail(parser, \"Invalid character entity\")\n    return \"&\"+parser.entity + \";\"\n  }\n\n  return String.fromCodePoint(num)\n}\n\nfunction write (chunk) {\n  var parser = this\n  if (this.error) throw this.error\n  if (parser.closed) return error(parser,\n    \"Cannot write after close. Assign an onready handler.\")\n  if (chunk === null) return end(parser)\n  var i = 0, c = \"\"\n  while (parser.c = c = chunk.charAt(i++)) {\n    if (parser.trackPosition) {\n      parser.position ++\n      if (c === \"/n\") {\n        parser.line ++\n        parser.column = 0\n      } else parser.column ++\n    }\n    switch (parser.state) {\n\n      case S.BEGIN:\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else if (not(whitespace,c)) {\n          // have to process this as a text node.\n          // weird, but happens.\n          strictFail(parser, \"Non-whitespace before first tag.\")\n          parser.textNode = c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.TEXT:\n        if (parser.sawRoot && !parser.closedRoot) {\n          var starti = i-1\n          while (c && c!==\"<\" && c!==\"&\") {\n            c = chunk.charAt(i++)\n            if (c && parser.trackPosition) {\n              parser.position ++\n              if (c === \"/n\") {\n                parser.line ++\n                parser.column = 0\n              } else parser.column ++\n            }\n          }\n          parser.textNode += chunk.substring(starti, i-1)\n        }\n        if (c === \"<\") {\n          parser.state = S.OPEN_WAKA\n          parser.startTagPosition = parser.position\n        } else {\n          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))\n            strictFail(parser, \"Text data outside of root node.\")\n          if (c === \"&\") parser.state = S.TEXT_ENTITY\n          else parser.textNode += c\n        }\n      continue\n\n      case S.SCRIPT:\n        // only non-strict\n        if (c === \"<\") {\n          parser.state = S.SCRIPT_ENDING\n        } else parser.script += c\n      continue\n\n      case S.SCRIPT_ENDING:\n        if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n        } else {\n          parser.script += \"<\" + c\n          parser.state = S.SCRIPT\n        }\n      continue\n\n      case S.OPEN_WAKA:\n        // either a /, ?, !, or text is coming next.\n        if (c === \"!\") {\n          parser.state = S.SGML_DECL\n          parser.sgmlDecl = \"\"\n        } else if (is(whitespace, c)) {\n          // wait for it...\n        } else if (is(nameStart,c)) {\n          parser.state = S.OPEN_TAG\n          parser.tagName = c\n        } else if (c === \"/\") {\n          parser.state = S.CLOSE_TAG\n          parser.tagName = \"\"\n        } else if (c === \"?\") {\n          parser.state = S.PROC_INST\n          parser.procInstName = parser.procInstBody = \"\"\n        } else {\n          strictFail(parser, \"Unencoded <\")\n          // if there was some whitespace, then add that in.\n          if (parser.startTagPosition + 1 < parser.position) {\n            var pad = parser.position - parser.startTagPosition\n            c = new Array(pad).join(\" \") + c\n          }\n          parser.textNode += \"<\" + c\n          parser.state = S.TEXT\n        }\n      continue\n\n      case S.SGML_DECL:\n        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {\n          emitNode(parser, \"onopencdata\")\n          parser.state = S.CDATA\n          parser.sgmlDecl = \"\"\n          parser.cdata = \"\"\n        } else if (parser.sgmlDecl+c === \"--\") {\n          parser.state = S.COMMENT\n          parser.comment = \"\"\n          parser.sgmlDecl = \"\"\n        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {\n          parser.state = S.DOCTYPE\n          if (parser.doctype || parser.sawRoot) strictFail(parser,\n            \"Inappropriately located doctype declaration\")\n          parser.doctype = \"\"\n          parser.sgmlDecl = \"\"\n        } else if (c === \">\") {\n          emitNode(parser, \"onsgmldeclaration\", parser.sgmlDecl)\n          parser.sgmlDecl = \"\"\n          parser.state = S.TEXT\n        } else if (is(quote, c)) {\n          parser.state = S.SGML_DECL_QUOTED\n          parser.sgmlDecl += c\n        } else parser.sgmlDecl += c\n      continue\n\n      case S.SGML_DECL_QUOTED:\n        if (c === parser.q) {\n          parser.state = S.SGML_DECL\n          parser.q = \"\"\n        }\n        parser.sgmlDecl += c\n      continue\n\n      case S.DOCTYPE:\n        if (c === \">\") {\n          parser.state = S.TEXT\n          emitNode(parser, \"ondoctype\", parser.doctype)\n          parser.doctype = true // just remember that we saw it.\n        } else {\n          parser.doctype += c\n          if (c === \"[\") parser.state = S.DOCTYPE_DTD\n          else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_QUOTED\n            parser.q = c\n          }\n        }\n      continue\n\n      case S.DOCTYPE_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.q = \"\"\n          parser.state = S.DOCTYPE\n        }\n      continue\n\n      case S.DOCTYPE_DTD:\n        parser.doctype += c\n        if (c === \"]\") parser.state = S.DOCTYPE\n        else if (is(quote,c)) {\n          parser.state = S.DOCTYPE_DTD_QUOTED\n          parser.q = c\n        }\n      continue\n\n      case S.DOCTYPE_DTD_QUOTED:\n        parser.doctype += c\n        if (c === parser.q) {\n          parser.state = S.DOCTYPE_DTD\n          parser.q = \"\"\n        }\n      continue\n\n      case S.COMMENT:\n        if (c === \"-\") parser.state = S.COMMENT_ENDING\n        else parser.comment += c\n      continue\n\n      case S.COMMENT_ENDING:\n        if (c === \"-\") {\n          parser.state = S.COMMENT_ENDED\n          parser.comment = textopts(parser.opt, parser.comment)\n          if (parser.comment) emitNode(parser, \"oncomment\", parser.comment)\n          parser.comment = \"\"\n        } else {\n          parser.comment += \"-\" + c\n          parser.state = S.COMMENT\n        }\n      continue\n\n      case S.COMMENT_ENDED:\n        if (c !== \">\") {\n          strictFail(parser, \"Malformed comment\")\n          // allow <!-- blah -- bloo --> in non-strict mode,\n          // which is a comment of \" blah -- bloo \"\n          parser.comment += \"--\" + c\n          parser.state = S.COMMENT\n        } else parser.state = S.TEXT\n      continue\n\n      case S.CDATA:\n        if (c === \"]\") parser.state = S.CDATA_ENDING\n        else parser.cdata += c\n      continue\n\n      case S.CDATA_ENDING:\n        if (c === \"]\") parser.state = S.CDATA_ENDING_2\n        else {\n          parser.cdata += \"]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.CDATA_ENDING_2:\n        if (c === \">\") {\n          if (parser.cdata) emitNode(parser, \"oncdata\", parser.cdata)\n          emitNode(parser, \"onclosecdata\")\n          parser.cdata = \"\"\n          parser.state = S.TEXT\n        } else if (c === \"]\") {\n          parser.cdata += \"]\"\n        } else {\n          parser.cdata += \"]]\" + c\n          parser.state = S.CDATA\n        }\n      continue\n\n      case S.PROC_INST:\n        if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY\n        else parser.procInstName += c\n      continue\n\n      case S.PROC_INST_BODY:\n        if (!parser.procInstBody && is(whitespace, c)) continue\n        else if (c === \"?\") parser.state = S.PROC_INST_ENDING\n        else parser.procInstBody += c\n      continue\n\n      case S.PROC_INST_ENDING:\n        if (c === \">\") {\n          emitNode(parser, \"onprocessinginstruction\", {\n            name : parser.procInstName,\n            body : parser.procInstBody\n          })\n          parser.procInstName = parser.procInstBody = \"\"\n          parser.state = S.TEXT\n        } else {\n          parser.procInstBody += \"?\" + c\n          parser.state = S.PROC_INST_BODY\n        }\n      continue\n\n      case S.OPEN_TAG:\n        if (is(nameBody, c)) parser.tagName += c\n        else {\n          newTag(parser)\n          if (c === \">\") openTag(parser)\n          else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n          else {\n            if (not(whitespace, c)) strictFail(\n              parser, \"Invalid character in tag name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.OPEN_TAG_SLASH:\n        if (c === \">\") {\n          openTag(parser, true)\n          closeTag(parser)\n        } else {\n          strictFail(parser, \"Forward-slash in opening tag not followed by >\")\n          parser.state = S.ATTRIB\n        }\n      continue\n\n      case S.ATTRIB:\n        // haven't read the attribute name yet.\n        if (is(whitespace, c)) continue\n        else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (c === \">\") {\n          strictFail(parser, \"Attribute without value\")\n          parser.attribValue = parser.attribName\n          attrib(parser)\n          openTag(parser)\n        }\n        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE\n        else if (is(nameBody, c)) parser.attribName += c\n        else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_NAME_SAW_WHITE:\n        if (c === \"=\") parser.state = S.ATTRIB_VALUE\n        else if (is(whitespace, c)) continue\n        else {\n          strictFail(parser, \"Attribute without value\")\n          parser.tag.attributes[parser.attribName] = \"\"\n          parser.attribValue = \"\"\n          emitNode(parser, \"onattribute\",\n                   { name : parser.attribName, value : \"\" })\n          parser.attribName = \"\"\n          if (c === \">\") openTag(parser)\n          else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, \"Invalid attribute name\")\n            parser.state = S.ATTRIB\n          }\n        }\n      continue\n\n      case S.ATTRIB_VALUE:\n        if (is(whitespace, c)) continue\n        else if (is(quote, c)) {\n          parser.q = c\n          parser.state = S.ATTRIB_VALUE_QUOTED\n        } else {\n          strictFail(parser, \"Unquoted attribute value\")\n          parser.state = S.ATTRIB_VALUE_UNQUOTED\n          parser.attribValue = c\n        }\n      continue\n\n      case S.ATTRIB_VALUE_QUOTED:\n        if (c !== parser.q) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_Q\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        parser.q = \"\"\n        parser.state = S.ATTRIB_VALUE_CLOSED\n      continue\n\n      case S.ATTRIB_VALUE_CLOSED:\n        if (is(whitespace, c)) {\n          parser.state = S.ATTRIB\n        } else if (c === \">\") openTag(parser)\n        else if (c === \"/\") parser.state = S.OPEN_TAG_SLASH\n        else if (is(nameStart, c)) {\n          strictFail(parser, \"No whitespace between attributes\")\n          parser.attribName = c\n          parser.attribValue = \"\"\n          parser.state = S.ATTRIB_NAME\n        } else strictFail(parser, \"Invalid attribute name\")\n      continue\n\n      case S.ATTRIB_VALUE_UNQUOTED:\n        if (not(attribEnd,c)) {\n          if (c === \"&\") parser.state = S.ATTRIB_VALUE_ENTITY_U\n          else parser.attribValue += c\n          continue\n        }\n        attrib(parser)\n        if (c === \">\") openTag(parser)\n        else parser.state = S.ATTRIB\n      continue\n\n      case S.CLOSE_TAG:\n        if (!parser.tagName) {\n          if (is(whitespace, c)) continue\n          else if (not(nameStart, c)) {\n            if (parser.script) {\n              parser.script += \"</\" + c\n              parser.state = S.SCRIPT\n            } else {\n              strictFail(parser, \"Invalid tagname in closing tag.\")\n            }\n          } else parser.tagName = c\n        }\n        else if (c === \">\") closeTag(parser)\n        else if (is(nameBody, c)) parser.tagName += c\n        else if (parser.script) {\n          parser.script += \"</\" + parser.tagName\n          parser.tagName = \"\"\n          parser.state = S.SCRIPT\n        } else {\n          if (not(whitespace, c)) strictFail(parser,\n            \"Invalid tagname in closing tag\")\n          parser.state = S.CLOSE_TAG_SAW_WHITE\n        }\n      continue\n\n      case S.CLOSE_TAG_SAW_WHITE:\n        if (is(whitespace, c)) continue\n        if (c === \">\") closeTag(parser)\n        else strictFail(parser, \"Invalid characters in closing tag\")\n      continue\n\n      case S.TEXT_ENTITY:\n      case S.ATTRIB_VALUE_ENTITY_Q:\n      case S.ATTRIB_VALUE_ENTITY_U:\n        switch(parser.state) {\n          case S.TEXT_ENTITY:\n            var returnState = S.TEXT, buffer = \"textNode\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_Q:\n            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = \"attribValue\"\n          break\n\n          case S.ATTRIB_VALUE_ENTITY_U:\n            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = \"attribValue\"\n          break\n        }\n        if (c === \";\") {\n          parser[buffer] += parseEntity(parser)\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n        else if (is(entity, c)) parser.entity += c\n        else {\n          strictFail(parser, \"Invalid character entity\")\n          parser[buffer] += \"&\" + parser.entity + c\n          parser.entity = \"\"\n          parser.state = returnState\n        }\n      continue\n\n      default:\n        throw new Error(parser, \"Unknown state: \" + parser.state)\n    }\n  } // while\n  // cdata blocks can get very big under normal conditions. emit and move on.\n  // if (parser.state === S.CDATA && parser.cdata) {\n  //   emitNode(parser, \"oncdata\", parser.cdata)\n  //   parser.cdata = \"\"\n  // }\n  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)\n  return parser\n}\n\n/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\nif (!String.fromCodePoint) {\n        (function() {\n                var stringFromCharCode = String.fromCharCode;\n                var floor = Math.floor;\n                var fromCodePoint = function() {\n                        var MAX_SIZE = 0x4000;\n                        var codeUnits = [];\n                        var highSurrogate;\n                        var lowSurrogate;\n                        var index = -1;\n                        var length = arguments.length;\n                        if (!length) {\n                                return '';\n                        }\n                        var result = '';\n                        while (++index < length) {\n                                var codePoint = Number(arguments[index]);\n                                if (\n                                        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                                        codePoint < 0 || // not a valid Unicode code point\n                                        codePoint > 0x10FFFF || // not a valid Unicode code point\n                                        floor(codePoint) != codePoint // not an integer\n                                ) {\n                                        throw RangeError('Invalid code point: ' + codePoint);\n                                }\n                                if (codePoint <= 0xFFFF) { // BMP code point\n                                        codeUnits.push(codePoint);\n                                } else { // Astral code point; split in surrogate halves\n                                        // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                                        codePoint -= 0x10000;\n                                        highSurrogate = (codePoint >> 10) + 0xD800;\n                                        lowSurrogate = (codePoint % 0x400) + 0xDC00;\n                                        codeUnits.push(highSurrogate, lowSurrogate);\n                                }\n                                if (index + 1 == length || codeUnits.length > MAX_SIZE) {\n                                        result += stringFromCharCode.apply(null, codeUnits);\n                                        codeUnits.length = 0;\n                                }\n                        }\n                        return result;\n                };\n                if (Object.defineProperty) {\n                        Object.defineProperty(String, 'fromCodePoint', {\n                                'value': fromCodePoint,\n                                'configurable': true,\n                                'writable': true\n                        });\n                } else {\n                        String.fromCodePoint = fromCodePoint;\n                }\n        }());\n}\n\n})(typeof exports === \"undefined\" ? sax = {} : exports);\n","module.exports = require(285);\r\n","'use strict';\r\n\r\nvar di = require(115);\r\n\r\n\r\n/**\r\n * Bootstrap an injector from a list of modules, instantiating a number of default components\r\n *\r\n * @ignore\r\n * @param {Array<didi.Module>} bootstrapModules\r\n *\r\n * @return {didi.Injector} a injector to use to access the components\r\n */\r\nfunction bootstrap(bootstrapModules) {\r\n\r\n  var modules = [],\r\n      components = [];\r\n\r\n  function hasModule(m) {\r\n    return modules.indexOf(m) >= 0;\r\n  }\r\n\r\n  function addModule(m) {\r\n    modules.push(m);\r\n  }\r\n\r\n  function visit(m) {\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    (m.__depends__ || []).forEach(visit);\r\n\r\n    if (hasModule(m)) {\r\n      return;\r\n    }\r\n\r\n    addModule(m);\r\n    (m.__init__ || []).forEach(function(c) {\r\n      components.push(c);\r\n    });\r\n  }\r\n\r\n  bootstrapModules.forEach(visit);\r\n\r\n  var injector = new di.Injector(modules);\r\n\r\n  components.forEach(function(c) {\r\n\r\n    try {\r\n      // eagerly resolve component (fn or string)\r\n      injector[typeof c === 'string' ? 'get' : 'invoke'](c);\r\n    } catch (e) {\r\n      console.error('Failed to instantiate component');\r\n      console.error(e.stack);\r\n\r\n      throw e;\r\n    }\r\n  });\r\n\r\n  return injector;\r\n}\r\n\r\n/**\r\n * Creates an injector from passed options.\r\n *\r\n * @ignore\r\n * @param  {Object} options\r\n * @return {didi.Injector}\r\n */\r\nfunction createInjector(options) {\r\n\r\n  options = options || {};\r\n\r\n  var configModule = {\r\n    'config': ['value', options]\r\n  };\r\n\r\n  var coreModule = require(290);\r\n\r\n  var modules = [ configModule, coreModule ].concat(options.modules || []);\r\n\r\n  return bootstrap(modules);\r\n}\r\n\r\n\r\n/**\r\n * The main table-js entry point that bootstraps the table with the given\r\n * configuration.\r\n *\r\n * To register extensions with the table, pass them as Array<didi.Module> to the constructor.\r\n *\r\n * @class tjs.Table\r\n * @memberOf tjs\r\n * @constructor\r\n *\r\n * @param {Object} options\r\n * @param {Array<didi.Module>} [options.modules] external modules to instantiate with the table\r\n * @param {didi.Injector} [injector] an (optional) injector to bootstrap the table with\r\n */\r\nfunction Table(options, injector) {\r\n\r\n  // create injector unless explicitly specified\r\n  this.injector = injector = injector || createInjector(options);\r\n\r\n  // API\r\n\r\n  /**\r\n   * Resolves a table service\r\n   *\r\n   * @method Table#get\r\n   *\r\n   * @param {String} name the name of the table service to be retrieved\r\n   * @param {Object} [locals] a number of locals to use to resolve certain dependencies\r\n   */\r\n  this.get = injector.get;\r\n\r\n  /**\r\n   * Executes a function into which table services are injected\r\n   *\r\n   * @method Table#invoke\r\n   *\r\n   * @param {Function|Object[]} fn the function to resolve\r\n   * @param {Object} locals a number of locals to use to resolve certain dependencies\r\n   */\r\n  this.invoke = injector.invoke;\r\n\r\n  // init\r\n\r\n  // indicate via event\r\n\r\n\r\n  /**\r\n   * An event indicating that all plug-ins are loaded.\r\n   *\r\n   * Use this event to fire other events to interested plug-ins\r\n   *\r\n   * @memberOf Table\r\n   *\r\n   * @event table.init\r\n   *\r\n   * @example\r\n   *\r\n   * eventBus.on('table.init', function() {\r\n   *   eventBus.fire('my-custom-event', { foo: 'BAR' });\r\n   * });\r\n   *\r\n   * @type {Object}\r\n   */\r\n  this.get('eventBus').fire('table.init');\r\n}\r\n\r\nmodule.exports = Table;\r\n\r\n\r\n/**\r\n * Destroys the table. This results in removing the attachment from the container.\r\n *\r\n * @method  Table#destroy\r\n */\r\nTable.prototype.destroy = function() {\r\n  this.get('eventBus').fire('table.destroy');\r\n\r\n  // so we can reset the services directly used from diagram-js\r\n  this.get('eventBus').fire('diagram.destroy');\r\n};\r\n\r\n/**\r\n * Clears the table. Should be used to reset the state of any stateful services.\r\n *\r\n * @method  Table#clear\r\n */\r\nTable.prototype.clear = function() {\r\n  this.get('eventBus').fire('table.clear');\r\n\r\n  // so we can reset the services directly used from diagram-js\r\n  this.get('eventBus').fire('diagram.clear');\r\n};\r\n","'use strict';\r\n\r\nvar Model = require(308);\r\n\r\n\r\n/**\r\n * A factory for diagram-js shapes\r\n */\r\nfunction ElementFactory() {\r\n  this._uid = 12;\r\n}\r\n\r\nmodule.exports = ElementFactory;\r\n\r\n\r\nElementFactory.prototype.createTable = function(attrs) {\r\n  return document.createElement('table');\r\n  //return this.create('table', attrs);\r\n};\r\n\r\nElementFactory.prototype.createRow = function(attrs) {\r\n  return this.create('row', attrs);\r\n};\r\n\r\nElementFactory.prototype.createColumn = function(attrs) {\r\n  return this.create('column', attrs);\r\n};\r\n\r\n/**\r\n * Create a model element with the given type and\r\n * a number of pre-set attributes.\r\n *\r\n * @param  {String} type\r\n * @param  {Object} attrs\r\n * @return {djs.model.Base} the newly created model instance\r\n */\r\nElementFactory.prototype.create = function(type, attrs) {\r\n\r\n  attrs = attrs || {};\r\n\r\n  if (!attrs.id) {\r\n    attrs.id = type + '_' + (this._uid++);\r\n  }\r\n\r\n  return Model.create(type, attrs);\r\n};\r\n","'use strict';\r\n\r\nvar ELEMENT_ID = 'data-element-id';\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A registry that keeps track of all shapes in the diagram.\r\n */\r\nfunction ElementRegistry() {\r\n  this._elements = {};\r\n}\r\n\r\nmodule.exports = ElementRegistry;\r\n\r\n/**\r\n * Register a pair of (element, gfx, (secondaryGfx)).\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {Snap<SVGElement>} gfx\r\n * @param {Snap<SVGElement>} [secondaryGfx] optional other element to register, too\r\n */\r\nElementRegistry.prototype.add = function(element, gfx, secondaryGfx) {\r\n\r\n  var id = element.id;\r\n\r\n  this._validateId(id);\r\n\r\n  // associate dom node with element\r\n  gfx.setAttribute(ELEMENT_ID, id);\r\n\r\n  if (secondaryGfx) {\r\n    secondaryGfx.setAttribute(ELEMENT_ID, id);\r\n  }\r\n\r\n  this._elements[id] = { element: element, gfx: gfx, secondaryGfx: secondaryGfx };\r\n};\r\n\r\n/**\r\n * Removes an element from the registry.\r\n *\r\n * @param {djs.model.Base} element\r\n */\r\nElementRegistry.prototype.remove = function(element) {\r\n  var elements = this._elements,\r\n      id = element.id || element,\r\n      container = id && elements[id];\r\n\r\n  if (container) {\r\n\r\n    // unset element id on gfx\r\n    container.gfx.setAttribute(ELEMENT_ID, null);\r\n\r\n    if (container.secondaryGfx) {\r\n      container.secondaryGfx.setAttribute(ELEMENT_ID, null);\r\n    }\r\n\r\n    delete elements[id];\r\n  }\r\n};\r\n\r\n/**\r\n * Update the id of an element\r\n *\r\n * @param {djs.model.Base} element\r\n * @param {String} newId\r\n */\r\nElementRegistry.prototype.updateId = function(element, newId) {\r\n\r\n  this._validateId(newId);\r\n\r\n  if (typeof element === 'string') {\r\n    element = this.get(element);\r\n  }\r\n\r\n  var gfx = this.getGraphics(element),\r\n      secondaryGfx = this.getGraphics(element, true);\r\n\r\n  this.remove(element);\r\n\r\n  element.id = newId;\r\n\r\n  this.add(element, gfx, secondaryGfx);\r\n};\r\n\r\n/**\r\n * Return the model element for a given id or graphics.\r\n *\r\n * @example\r\n *\r\n * elementRegistry.get('SomeElementId_1');\r\n * elementRegistry.get(gfx);\r\n *\r\n *\r\n * @param {String|SVGElement} filter for selecting the element\r\n *\r\n * @return {djs.model.Base}\r\n */\r\nElementRegistry.prototype.get = function(filter) {\r\n  var id;\r\n\r\n  if (typeof filter === 'string') {\r\n    id = filter;\r\n  } else {\r\n    // get by graphics\r\n    id = filter && filter.getAttribute(ELEMENT_ID);\r\n  }\r\n\r\n  var container = this._elements[id];\r\n  return container && container.element;\r\n};\r\n\r\n/**\r\n * Return all elements that match a given filter function.\r\n *\r\n * @param {Function} fn\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.filter = function(fn) {\r\n\r\n  var filtered = [];\r\n\r\n  this.forEach(function(element, gfx) {\r\n    if (fn(element, gfx)) {\r\n      filtered.push(element);\r\n    }\r\n  });\r\n\r\n  return filtered;\r\n};\r\n\r\n/**\r\n * Iterate over all diagram elements.\r\n *\r\n * @param {Function} fn\r\n */\r\nElementRegistry.prototype.forEach = function(fn) {\r\n\r\n  var map = this._elements;\r\n\r\n  Object.keys(map).forEach(function(id) {\r\n    var container = map[id],\r\n        element = container.element,\r\n        gfx = container.gfx;\r\n\r\n    return fn(element, gfx);\r\n  });\r\n};\r\n\r\n/**\r\n * Return the graphical representation of an element or its id.\r\n *\r\n * @example\r\n * elementRegistry.getGraphics('SomeElementId_1');\r\n * elementRegistry.getGraphics(rootElement); // <g ...>\r\n *\r\n * elementRegistry.getGraphics(rootElement, true); // <svg ...>\r\n *\r\n *\r\n * @param {String|djs.model.Base} filter\r\n * @param {Boolean} [secondary=false] whether to return the secondary connected element\r\n *\r\n * @return {SVGElement}\r\n */\r\nElementRegistry.prototype.getGraphics = function(filter, secondary) {\r\n  var id = filter.id || filter;\r\n\r\n  var container = this._elements[id];\r\n  return container && (secondary ? container.secondaryGfx : container.gfx);\r\n};\r\n\r\n/**\r\n * Return all rendered model elements.\r\n *\r\n * @return {Array<djs.model.Base>}\r\n */\r\nElementRegistry.prototype.getAll = function() {\r\n  return this.filter(function(e) { return e; });\r\n};\r\n\r\n/**\r\n * Validate the suitability of the given id and signals a problem\r\n * with an exception.\r\n *\r\n * @param {String} id\r\n *\r\n * @throws {Error} if id is empty or already assigned\r\n */\r\nElementRegistry.prototype._validateId = function(id) {\r\n  if (!id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (this._elements[id]) {\r\n    throw new Error('element with id ' + id + ' already added');\r\n  }\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136);\r\n\r\n/**\r\n * A factory that creates graphical elements\r\n *\r\n * @param {Renderer} renderer\r\n */\r\nfunction GraphicsFactory(elementRegistry, renderer) {\r\n  this._renderer = renderer;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nGraphicsFactory.$inject = [ 'elementRegistry', 'renderer' ];\r\n\r\nmodule.exports = GraphicsFactory;\r\n\r\nGraphicsFactory.prototype.create = function(type, element, parent) {\r\n  var newElement;\r\n\r\n  switch (type) {\r\n\r\n  case 'row':\r\n    newElement = document.createElement('tr');\r\n    break;\r\n\r\n  case 'cell':\r\n    \r\n    // cells consist of a td element with a nested span which contains the content\r\n    newElement = document.createElement(element.row.useTH ? 'th' : 'td');\r\n\r\n    var contentContainer = document.createElement('span');\r\n    \r\n    newElement.appendChild(contentContainer);\r\n    break;\r\n  }\r\n\r\n  if (newElement && type === 'row') {\r\n\r\n    if (element.next) {\r\n      parent.insertBefore(newElement, this._elementRegistry.getGraphics(element.next));\r\n    } else {\r\n      parent.appendChild(newElement);\r\n    }\r\n\r\n  } else if (type === 'cell') {\r\n\r\n    var neighboringCell = this._elementRegistry.filter(function(el) {\r\n      return el.row === element.row && el.column === element.column.next;\r\n    })[0];\r\n\r\n    if (neighboringCell) {\r\n      parent.insertBefore(newElement, this._elementRegistry.getGraphics(neighboringCell));\r\n    } else {\r\n      parent.appendChild(newElement);\r\n    }\r\n\r\n  }\r\n  return newElement || document.createElement('div');\r\n};\r\n\r\nGraphicsFactory.prototype.moveRow = function(source, target, above) {\r\n  var gfxSource = this._elementRegistry.getGraphics(source);\r\n  var gfxTarget;\r\n\r\n  if (above) {\r\n    gfxTarget = this._elementRegistry.getGraphics(target);\r\n    gfxTarget.parentNode.insertBefore(gfxSource, gfxTarget);\r\n  } else {\r\n\r\n    if (source.next) {\r\n      gfxTarget = this._elementRegistry.getGraphics(source.next);\r\n      gfxTarget.parentNode.insertBefore(gfxSource, gfxTarget);\r\n    } else {\r\n      gfxSource.parentNode.appendChild(gfxSource);\r\n    }\r\n\r\n  }\r\n};\r\n\r\nGraphicsFactory.prototype.moveColumn = function(source, target, left) {\r\n  var self = this;\r\n\r\n  // find all cells which belong to the source and add them at their new place\r\n  this._elementRegistry.forEach(function(element, gfx) {\r\n    if (element._type === 'cell' && element.column === source) {\r\n\r\n      // find the cell exactly right of them\r\n      self._elementRegistry.forEach(function(targetElement, targetGfx) {\r\n        if (targetElement._type === 'cell' && targetElement.row === element.row) {\r\n          if (left && targetElement.column === target) {\r\n            targetGfx.parentNode.insertBefore(gfx, targetGfx);\r\n          } else if (!left && targetElement.column === source.next) {\r\n            targetGfx.parentNode.insertBefore(gfx, targetGfx);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\n// redraw complete table\r\nGraphicsFactory.prototype.redraw = function() {\r\n  var self = this;\r\n  this._elementRegistry.forEach(function(element) {\r\n    if (element._type === 'row') {\r\n      self.update('row', element, self._elementRegistry.getGraphics(element));\r\n    }\r\n  });\r\n};\r\n\r\n\r\nGraphicsFactory.prototype.update = function(type, element, gfx) {\r\n\r\n  // do not update root element\r\n  if (!element.parent) {\r\n    return;\r\n  }\r\n\r\n  var self = this;\r\n\r\n  // redraw\r\n  if (type === 'row') {\r\n\r\n    this._renderer.drawRow(gfx, element);\r\n\r\n    // also redraw all cells in this row\r\n    forEach(this._elementRegistry.filter(function(el) {\r\n      return el.row === element;\r\n    }), function(cell) {\r\n      self.update('cell', cell, self._elementRegistry.getGraphics(cell));\r\n    });\r\n\r\n  } else if (type === 'column') {\r\n\r\n    this._renderer.drawColumn(gfx, element);\r\n\r\n    // also redraw all cells in this column\r\n    forEach(this._elementRegistry.filter(function(el) {\r\n      return el.column === element;\r\n    }), function(cell) {\r\n      self.update('cell', cell, self._elementRegistry.getGraphics(cell));\r\n    });\r\n\r\n  } else if (type === 'cell') {\r\n    this._renderer.drawCell(gfx, element);\r\n  } else {\r\n    throw new Error('unknown type: ' + type);\r\n  }\r\n};\r\n\r\nGraphicsFactory.prototype.remove = function(element) {\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  // remove\r\n  gfx.parentNode && gfx.parentNode.removeChild(gfx);\r\n};\r\n","'use strict';\r\n\r\nvar isNumber = require(244),\r\n    assign = require(250),\r\n    forEach = require(136),\r\n    every = require(133);\r\n\r\nfunction ensurePx(number) {\r\n  return isNumber(number) ? number + 'px' : number;\r\n}\r\n\r\n/**\r\n * Creates a HTML container element for a table element with\r\n * the given configuration\r\n *\r\n * @param  {Object} options\r\n * @return {HTMLElement} the container element\r\n */\r\nfunction createContainer(options) {\r\n\r\n  options = assign({}, { width: '100%', height: '100%' }, options);\r\n\r\n  var container = options.container || document.body;\r\n\r\n  // create a <div> around the table element with the respective size\r\n  // this way we can always get the correct container size\r\n  var parent = document.createElement('div');\r\n  parent.setAttribute('class', 'tjs-container');\r\n\r\n  container.appendChild(parent);\r\n\r\n  return parent;\r\n}\r\n\r\nvar REQUIRED_MODEL_ATTRS = {\r\n  row: [ 'next', 'previous' ],\r\n  column: [ 'next', 'previous' ],\r\n  cell: [ 'row', 'column' ]\r\n};\r\n\r\nvar LOW_PRIORITY = 250;\r\n\r\n/**\r\n * The main drawing sheet.\r\n *\r\n * @class\r\n * @constructor\r\n *\r\n * @emits Sheet#sheet.init\r\n *\r\n * @param {Object} config\r\n * @param {EventBus} eventBus\r\n * @param {GraphicsFactory} graphicsFactory\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nfunction Sheet(config, eventBus, elementRegistry, graphicsFactory) {\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n  this._graphicsFactory = graphicsFactory;\r\n  this._config = config;\r\n\r\n  this._init(config || {});\r\n}\r\n\r\nSheet.$inject = [ 'config.sheet', 'eventBus', 'elementRegistry', 'graphicsFactory' ];\r\n\r\nmodule.exports = Sheet;\r\n\r\n\r\nSheet.prototype._init = function(config) {\r\n\r\n  // Creates a <table> element that is wrapped into a <div>.\r\n  // This way we are always able to correctly figure out the size of the table element\r\n  // by querying the parent node.\r\n  //\r\n  // <div class=\"tjs-container\" style=\"width: {desired-width}, height: {desired-height}\">\r\n  //   <table width=\"100%\" height=\"100%\">\r\n  //    ...\r\n  //   </table>\r\n  // </div>\r\n\r\n  // html container\r\n  var eventBus = this._eventBus,\r\n      container = createContainer(config),\r\n      self = this;\r\n\r\n  this._container = container;\r\n\r\n  this._rootNode = document.createElement('table');\r\n\r\n  assign(this._rootNode.style, {\r\n    width: ensurePx(config.width),\r\n    height: ensurePx(config.height)\r\n  });\r\n\r\n  container.appendChild(this._rootNode);\r\n\r\n  this._head = document.createElement('thead');\r\n  this._body = document.createElement('tbody');\r\n  this._foot = document.createElement('tfoot');\r\n\r\n  this._rootNode.appendChild(this._head);\r\n  this._rootNode.appendChild(this._body);\r\n  this._rootNode.appendChild(this._foot);\r\n\r\n  this._lastColumn = null;\r\n  this._lastRow = {\r\n    head: null,\r\n    body: null,\r\n    foot: null\r\n  };\r\n\r\n  eventBus.on('table.init', function(event) {\r\n\r\n    /**\r\n     * An event indicating that the table is ready to be used.\r\n     *\r\n     * @memberOf Sheet\r\n     *\r\n     * @event sheet.init\r\n     *\r\n     * @type {Object}\r\n     * @property {DOMElement} sheet the created table element\r\n     * @property {Snap<SVGGroup>} viewport the direct parent of diagram elements and shapes\r\n     */\r\n\r\n    eventBus.fire('sheet.init', { sheet: self._rootNode });\r\n\r\n    eventBus.fire('sheet.resized');\r\n  });\r\n\r\n  // This event expects that another party hooks up earlier and provides\r\n  // the new width to be used.\r\n  eventBus.on('sheet.resized', LOW_PRIORITY, function(evt) {\r\n    var context = evt.context;\r\n\r\n    if (!context) {\r\n      return;\r\n    }\r\n\r\n    self.setWidth(context.newWidth);\r\n  });\r\n\r\n  eventBus.on('table.destroy', LOW_PRIORITY, this._destroy, this);\r\n\r\n\r\n  eventBus.on('table.clear', LOW_PRIORITY, function() {\r\n\r\n    /**\r\n     * An event indicating that the sheet is going to be cleared.\r\n     * Services can now hook in with this event and reset their states.\r\n     *\r\n     * @memberOf Sheet\r\n     *\r\n     * @event sheet.clear\r\n     */\r\n    eventBus.fire('sheet.clear');\r\n\r\n    this._clear();\r\n\r\n    /**\r\n     * An event indicating that the sheet has been cleared.\r\n     * Interested services can now hook in with this event and instantiate their states.\r\n     *\r\n     * @memberOf Sheet\r\n     *\r\n     * @event sheet.cleared\r\n     *\r\n     * @type {Object}\r\n     * @property {DOMElement} sheet the created table element\r\n     */\r\n    eventBus.fire('sheet.cleared', { sheet: self._rootNode });\r\n\r\n    eventBus.fire('sheet.resized');\r\n  }, this);\r\n};\r\n\r\nSheet.prototype._destroy = function() {\r\n  var eventBus = this._eventBus;\r\n\r\n  var container = this._container,\r\n      rootNode = this._rootNode,\r\n      parent;\r\n\r\n  eventBus.fire('sheet.destroy', { sheet: rootNode });\r\n\r\n  parent = container.parentNode;\r\n\r\n  if (parent) {\r\n    parent.removeChild(container);\r\n  }\r\n\r\n  delete this._container;\r\n  delete this._rootNode;\r\n};\r\n\r\nSheet.prototype._clear = function() {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  var self = this,\r\n      allElements = elementRegistry.getAll();\r\n\r\n  // remove all elements\r\n  allElements.forEach(function(element) {\r\n    if (element.element && element.element.id === 'decisionTable') {\r\n      self.setRootElement(null, true);\r\n    } else {\r\n      self._removeElement(element, element.type);\r\n    }\r\n  });\r\n\r\n  this._lastColumn = null;\r\n  this._lastRow = {\r\n    head: null,\r\n    body: null,\r\n    foot: null\r\n  };\r\n};\r\n\r\nSheet.prototype.getLastColumn = function() {\r\n  return this._lastColumn;\r\n};\r\n\r\nSheet.prototype.setLastColumn = function(element) {\r\n  this._lastColumn = element;\r\n};\r\n\r\nSheet.prototype.getLastRow = function(type) {\r\n  return this._lastRow[type];\r\n};\r\n\r\nSheet.prototype.setLastRow = function(element, type) {\r\n  this._lastRow[type] = element;\r\n};\r\n\r\nSheet.prototype.setSibling = function(first, second) {\r\n  if (first) {\r\n    first.next = second;\r\n  }\r\n\r\n  if (second) {\r\n    second.previous = first;\r\n  }\r\n};\r\n\r\nSheet.prototype.addSiblings = function(type, element) {\r\n  var tmp, subType;\r\n\r\n  if (type === 'row') {\r\n    subType = element.isHead ? 'head' : element.isFoot ? 'foot' : 'body';\r\n  }\r\n\r\n  if (!element.previous && !element.next) {\r\n    if (type === 'column') {\r\n\r\n      // add column to end of table per default\r\n      element.next = null;\r\n\r\n      this.setSibling(this.getLastColumn(), element);\r\n\r\n      this.setLastColumn(element);\r\n    } else if (type === 'row') {\r\n\r\n      // add row to end of table per default\r\n      element.next = null;\r\n\r\n      this.setSibling(this.getLastRow(subType), element);\r\n\r\n      this.setLastRow(element, subType);\r\n    }\r\n  } else if (element.previous && !element.next) {\r\n    tmp = element.previous.next;\r\n\r\n    this.setSibling(element.previous, element);\r\n    this.setSibling(element, tmp);\r\n\r\n    if (!tmp) {\r\n      if (type === 'row') {\r\n        this.setLastRow(element, subType);\r\n      } else if (type === 'column') {\r\n        this.setLastColumn(element, subType);\r\n      }\r\n    }\r\n  } else if (!element.previous && element.next) {\r\n    tmp = element.next.previous;\r\n\r\n    this.setSibling(tmp, element);\r\n    this.setSibling(element, element.next);\r\n  } else if (element.previous && element.next) {\r\n    if (element.previous.next !== element.next) {\r\n      throw new Error('cannot set both previous and next when adding new element <' + type + '>');\r\n    } else {\r\n      this.setSibling(element.previous, element);\r\n      this.setSibling(element, element.next);\r\n    }\r\n  }\r\n};\r\n\r\nSheet.prototype.removeSiblings = function(type, element) {\r\n  var subType;\r\n\r\n  if (type === 'row') {\r\n    subType = element.isHead ? 'head' : element.isFoot ? 'foot' : 'body';\r\n  }\r\n\r\n  if (type === 'column') {\r\n    if (this.getLastColumn() === element) {\r\n      this.setLastColumn(element.previous);\r\n    }\r\n  } else if (type === 'row') {\r\n    if (this.getLastRow(subType) === element) {\r\n      this.setLastRow(element.previous, subType);\r\n    }\r\n  }\r\n\r\n  if (element.previous) {\r\n    element.previous.next = element.next;\r\n  }\r\n\r\n  if (element.next) {\r\n    element.next.previous = element.previous;\r\n  }\r\n\r\n  delete element.previous;\r\n  delete element.next;\r\n};\r\n\r\n/**\r\n * Returns the html element that encloses the\r\n * drawing canvas.\r\n *\r\n * @return {DOMNode}\r\n */\r\nSheet.prototype.getContainer = function() {\r\n  return this._container;\r\n};\r\n\r\n\r\n/**\r\n * Returns the table body element of the table.\r\n *\r\n * @return {DOMNode}\r\n */\r\nSheet.prototype.getBody = function() {\r\n  return this._body;\r\n};\r\n\r\n/**\r\n * Moves a row above or below another row\r\n *\r\n */\r\nSheet.prototype.moveRow = function(source, target, above) {\r\n  var eventBus = this._eventBus,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  if (source === target) {\r\n    return;\r\n  }\r\n\r\n  eventBus.fire('row.move', {\r\n    source: source,\r\n    target: target,\r\n    above: above\r\n  });\r\n\r\n  // update the last row if necessary\r\n  if (this.getLastRow('body') === source) {\r\n    this.setLastRow(source.previous, 'body');\r\n  }\r\n\r\n  // re-wire the prev/next relations for the source\r\n  if (source.previous) {\r\n    source.previous.next = source.next;\r\n  }\r\n\r\n  if (source.next) {\r\n    source.next.previous = source.previous;\r\n  }\r\n\r\n  // re-wire the prev/next relations for the target\r\n  if (above) {\r\n    if (target.previous) {\r\n\r\n      // (previous --> source --> target)\r\n      target.previous.next = source;\r\n      source.previous = target.previous;\r\n\r\n      source.next = target;\r\n      target.previous = source;\r\n    } else {\r\n\r\n      // (null --> source --> target)\r\n      source.previous = null;\r\n\r\n      source.next = target;\r\n      target.previous = source;\r\n    }\r\n  } else {\r\n    if (target.next) {\r\n\r\n      // (target --> source --> next)\r\n      target.next.previous = source;\r\n      source.next = target.next;\r\n\r\n      source.previous = target;\r\n      target.next = source;\r\n    } else {\r\n\r\n      // (target --> source --> null)\r\n      source.next = null;\r\n\r\n      source.previous = target;\r\n      target.next = source;\r\n\r\n      this.setLastRow(source, 'body');\r\n    }\r\n  }\r\n\r\n  graphicsFactory.moveRow(source, target, above);\r\n\r\n  eventBus.fire('row.moved', {\r\n    source: source,\r\n    target: target,\r\n    above: above\r\n  });\r\n\r\n};\r\n\r\n/**\r\n * Moves a column left or right another column\r\n *\r\n */\r\nSheet.prototype.moveColumn = function(source, target, left) {\r\n  var eventBus = this._eventBus,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  if (source === target) {\r\n    return;\r\n  }\r\n\r\n  eventBus.fire('column.move', {\r\n    source: source,\r\n    target: target,\r\n    left: left\r\n  });\r\n\r\n  // update the last row if necessary\r\n  if (this.getLastColumn() === source) {\r\n    this.setLastColumn(source.previous);\r\n  }\r\n\r\n  // re-wire the prev/next relations for the source\r\n  if (source.previous) {\r\n    source.previous.next = source.next;\r\n  }\r\n\r\n  if (source.next) {\r\n    source.next.previous = source.previous;\r\n  }\r\n\r\n  // re-wire the prev/next relations for the target\r\n  if (left) {\r\n\r\n    if (target.previous) {\r\n\r\n      // (previous --> source --> target)\r\n      target.previous.next = source;\r\n      source.previous = target.previous;\r\n\r\n      source.next = target;\r\n      target.previous = source;\r\n    } else {\r\n\r\n      // (null --> source --> target)\r\n      source.previous = null;\r\n\r\n      source.next = target;\r\n      target.previous = source;\r\n    }\r\n\r\n  } else {\r\n\r\n    if (target.next) {\r\n\r\n      // (target --> source --> next)\r\n      target.next.previous = source;\r\n      source.next = target.next;\r\n\r\n      source.previous = target;\r\n      target.next = source;\r\n    } else {\r\n\r\n      // (target --> source --> null)\r\n      source.next = null;\r\n\r\n      source.previous = target;\r\n      target.next = source;\r\n\r\n      this.setLastColumn(source);\r\n    }\r\n\r\n  }\r\n\r\n  graphicsFactory.moveColumn(source, target, left);\r\n\r\n  eventBus.fire('column.moved', {\r\n    source: source,\r\n    target: target,\r\n    left: left\r\n  });\r\n\r\n};\r\n\r\n\r\n///////////// add functionality ///////////////////////////////\r\n\r\nSheet.prototype._ensureValid = function(type, element) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  if (!element.id) {\r\n    throw new Error('element must have an id');\r\n  }\r\n\r\n  if (elementRegistry.get(element.id)) {\r\n    throw new Error('element with id ' + element.id + ' already exists');\r\n  }\r\n\r\n  var requiredAttrs = REQUIRED_MODEL_ATTRS[type];\r\n\r\n  var valid = every(requiredAttrs, function(attr) {\r\n    return typeof element[attr] !== 'undefined';\r\n  });\r\n\r\n  if (!valid) {\r\n    throw new Error('must supply { ' + requiredAttrs.join(', ') + ' } with ' + type);\r\n  }\r\n};\r\n\r\n/**\r\n * Adds an element to the sheet.\r\n *\r\n * This wires the parent <-> child relationship between the element and\r\n * a explicitly specified parent or an implicit root element.\r\n *\r\n * During add it emits the events\r\n *\r\n *  * <{type}.add> (element, parent)\r\n *  * <{type}.added> (element, gfx)\r\n *\r\n * Extensions may hook into these events to perform their magic.\r\n *\r\n * @param {String} type\r\n * @param {Object|djs.model.Base} element\r\n * @param {Object|djs.model.Base} [parent]\r\n *\r\n * @return {Object|djs.model.Base} the added element\r\n */\r\nSheet.prototype._addElement = function(type, element, parent) {\r\n  var eventBus = this._eventBus,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  element._type = type;\r\n\r\n  this._ensureValid(type, element);\r\n\r\n  eventBus.fire(type + '.add', element);\r\n\r\n  // create graphics\r\n  element.parent = parent || this._rootNode;\r\n\r\n  var gfx = graphicsFactory.create(type, element, element.parent);\r\n\r\n  this._elementRegistry.add(element, gfx);\r\n\r\n  // update its visual\r\n  graphicsFactory.update(type, element, gfx);\r\n\r\n  eventBus.fire(type + '.added', { element: element, gfx: gfx });\r\n\r\n  return element;\r\n};\r\n\r\nSheet.prototype.addRow = function(row) {\r\n  var eventBus = this._eventBus,\r\n      elementRegistry = this._elementRegistry;\r\n\r\n  var self = this,\r\n      columns;\r\n\r\n  this.addSiblings('row', row);\r\n\r\n  var r = this._addElement('row', row, row.isHead ? this._head : row.isFoot ? this._foot : this._body);\r\n\r\n  eventBus.fire('cells.add', r);\r\n\r\n  // create new cells\r\n  columns = elementRegistry.filter(function(el) {\r\n    return el._type === 'column';\r\n  });\r\n\r\n  forEach(columns.sort(function(a, b) {\r\n    var c = a;\r\n    while ((c = c.next)) {\r\n      if (c === b) {\r\n        return -1;\r\n      }\r\n    }\r\n    return 1;\r\n  }), function(el) {\r\n    self._addCell({ row: r, column: el, id: 'cell_'+el.id+'_'+r.id });\r\n  });\r\n\r\n  eventBus.fire('cells.added', r);\r\n\r\n  return r;\r\n};\r\n\r\nSheet.prototype.addColumn = function(column) {\r\n  var eventBus = this._eventBus,\r\n      elementRegistry = this._elementRegistry;\r\n\r\n  var self = this,\r\n      rows;\r\n\r\n  this.addSiblings('column', column);\r\n\r\n  var c = this._addElement('column', column);\r\n\r\n  eventBus.fire('cells.add', c);\r\n\r\n  rows = elementRegistry.filter(function(el) {\r\n    return el._type === 'row';\r\n  });\r\n\r\n  // create new cells\r\n  forEach(rows, function(el) {\r\n    self._addCell({ row: el, column: c, id: 'cell_' + c.id + '_' + el.id });\r\n  });\r\n\r\n  eventBus.fire('cells.added', c);\r\n\r\n  return c;\r\n};\r\n\r\nSheet.prototype._addCell = function(cell) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  var row = elementRegistry.getGraphics(cell.row.id);\r\n\r\n  return this._addElement('cell', cell, row);\r\n};\r\n\r\nSheet.prototype.setCellContent = function(config) {\r\n  var elementRegistry = this._elementRegistry,\r\n      graphicsFactory = this._graphicsFactory;\r\n\r\n  if (typeof config.column === 'object') {\r\n    config.column = config.column.id;\r\n  }\r\n  if (typeof config.row === 'object') {\r\n    config.row = config.row.id;\r\n  }\r\n\r\n  elementRegistry.get('cell_' + config.column + '_' + config.row).content = config.content;\r\n\r\n  graphicsFactory.update(\r\n    'cell',\r\n    elementRegistry.get('cell_' + config.column + '_' + config.row),\r\n    elementRegistry.getGraphics('cell_' + config.column + '_' + config.row)\r\n  );\r\n};\r\n\r\nSheet.prototype.getCellContent = function(config) {\r\n  var elementRegistry = this._elementRegistry;\r\n\r\n  return elementRegistry.get('cell_' + config.column + '_' + config.row).content;\r\n};\r\n\r\n\r\n/**\r\n * Internal remove element\r\n */\r\nSheet.prototype._removeElement = function(element, type) {\r\n\r\n  var elementRegistry = this._elementRegistry,\r\n      graphicsFactory = this._graphicsFactory,\r\n      eventBus = this._eventBus;\r\n\r\n  element = elementRegistry.get(element.id || element);\r\n\r\n  if (!element) {\r\n\r\n    // element was removed already\r\n    return;\r\n  }\r\n\r\n  eventBus.fire(type + '.remove', { element: element });\r\n\r\n  graphicsFactory.remove(element);\r\n\r\n  element.parent = null;\r\n\r\n  elementRegistry.remove(element);\r\n\r\n  eventBus.fire(type + '.removed', { element: element });\r\n\r\n  return element;\r\n};\r\n\r\nSheet.prototype.removeRow = function(element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  this.removeSiblings('row', element);\r\n\r\n  var el = this._removeElement(element, 'row');\r\n\r\n  // remove cells\r\n  eventBus.fire('cells.remove', el);\r\n\r\n  var self = this;\r\n\r\n  forEach(this._elementRegistry.filter(function(el) {\r\n    return el.row === element;\r\n  }), function(el) {\r\n    self._removeElement(el.id, 'cell');\r\n  });\r\n\r\n  eventBus.fire('cells.removed', el);\r\n\r\n  return el;\r\n};\r\n\r\nSheet.prototype.removeColumn = function(element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  this.removeSiblings('column', element);\r\n\r\n  var el = this._removeElement(element, 'column');\r\n\r\n  // remove cells\r\n  eventBus.fire('cells.remove', el);\r\n\r\n  var self = this;\r\n  \r\n  forEach(this._elementRegistry.filter(function(el) {\r\n    return el.column === element;\r\n  }), function(el) {\r\n    self._removeElement(el.id, 'cell');\r\n  });\r\n\r\n  eventBus.fire('cells.removed', el);\r\n\r\n  return el;\r\n};\r\n\r\nSheet.prototype.getRootElement = function() {\r\n  return this._rootNode;\r\n};\r\n\r\nSheet.prototype.setRootElement = function(element, override) {\r\n\r\n  if (element) {\r\n    this._ensureValid('root', element);\r\n  }\r\n\r\n  var currentRoot = this._rootNode,\r\n      elementRegistry = this._elementRegistry,\r\n      eventBus = this._eventBus;\r\n\r\n  if (currentRoot) {\r\n    if (!override) {\r\n      throw new Error('rootNode already set, need to specify override');\r\n    }\r\n\r\n    // simulate element remove event sequence\r\n    eventBus.fire('root.remove', { element: currentRoot });\r\n    eventBus.fire('root.removed', { element: currentRoot });\r\n\r\n    elementRegistry.remove(currentRoot);\r\n  }\r\n\r\n  if (element) {\r\n    var gfx = this.getDefaultLayer();\r\n\r\n    // resemble element add event sequence\r\n    eventBus.fire('root.add', { element: element });\r\n\r\n    elementRegistry.add(element, gfx, this._svg);\r\n\r\n    eventBus.fire('root.added', { element: element, gfx: gfx });\r\n  }\r\n\r\n  this._rootNode = element;\r\n\r\n  return element;\r\n};\r\n\r\nSheet.prototype.setWidth = function(newWidth) {\r\n  var container = this.getContainer();\r\n\r\n  if (!newWidth) {\r\n    return;\r\n  }\r\n\r\n  if (typeof newWidth === 'number') {\r\n    newWidth = newWidth + 'px';\r\n  }\r\n\r\n  container.style.width = newWidth;\r\n};\r\n\r\nSheet.prototype.resized = function() {\r\n  var eventBus = this._eventBus;\r\n\r\n  eventBus.fire('sheet.resized');\r\n};\r\n","module.exports = {\r\n  __depends__: [ require(292) ],\r\n  __init__: [ 'sheet' ],\r\n  sheet: [ 'type', require(289) ],\r\n  elementRegistry: [ 'type', require(287) ],\r\n  elementFactory: ['type', require(286)],\r\n  graphicsFactory: [ 'type', require(288) ],\r\n  eventBus: [ 'type', require(312) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136);\r\n\r\nfunction colDistance(from, to) {\r\n  var i = 0,\r\n      current = from.column;\r\n  while (current && current !== to.column) {\r\n    current = current.next;\r\n    i++;\r\n  }\r\n  return !current ? -1 : i;\r\n}\r\n\r\nfunction rowDistance(from, to) {\r\n  var i = 0,\r\n      current = from.row;\r\n  while (current && current !== to.row) {\r\n    current = current.next;\r\n    i++;\r\n  }\r\n  return !current ? -1 : i;\r\n}\r\n\r\n/**\r\n * The default renderer used for rows, columns and cells.\r\n *\r\n */\r\nfunction Renderer(elementRegistry, eventBus) {\r\n  this._elementRegistry = elementRegistry;\r\n  this._eventBus = eventBus;\r\n}\r\n\r\nRenderer.$inject = [ 'elementRegistry', 'eventBus' ];\r\n\r\nmodule.exports = Renderer;\r\n\r\nRenderer.prototype.drawRow = function drawRow(gfx, data) {\r\n  this._eventBus.fire('row.render', {\r\n    gfx: gfx,\r\n    data: data\r\n  });\r\n\r\n  return gfx;\r\n};\r\n\r\nRenderer.prototype.drawColumn = function drawColumn(gfx, data) {\r\n  this._eventBus.fire('column.render', {\r\n    gfx: gfx,\r\n    data: data\r\n  });\r\n\r\n  return gfx;\r\n};\r\n\r\nRenderer.prototype.drawCell = function drawCell(gfx, data) {\r\n  if (data.colspan) {\r\n    gfx.setAttribute('colspan', data.colspan);\r\n  }\r\n  if (data.rowspan) {\r\n    gfx.setAttribute('rowspan', data.rowspan);\r\n  }\r\n\r\n  gfx.setAttribute('style', '');\r\n\r\n  // traverse backwards to find colspanned elements which might overlap us\r\n  var cells = this._elementRegistry.filter(function(element) {\r\n    return element._type === 'cell' && element.row === data.row;\r\n  });\r\n\r\n  forEach(cells, function(cell) {\r\n    var d = colDistance(cell, data);\r\n\r\n    if (cell.colspan && d > 0 && d < cell.colspan) {\r\n      gfx.setAttribute('style', 'display: none;');\r\n    }\r\n  });\r\n\r\n  // traverse backwards to find rowspanned elements which might overlap us\r\n  cells = this._elementRegistry.filter(function(element) {\r\n    return element._type === 'cell' && element.column === data.column;\r\n  });\r\n\r\n  forEach(cells, function(cell) {\r\n    var d = rowDistance(cell, data);\r\n    \r\n    if (cell.rowspan && d > 0 && d < cell.rowspan) {\r\n      gfx.setAttribute('style', 'display: none;');\r\n    }\r\n  });\r\n\r\n  if (data.content) {\r\n    if (typeof data.content === 'string' && !data.content.tagName) {\r\n      gfx.childNodes[0].textContent = data.content;\r\n    } else if (data.content.tagName) {\r\n      gfx.childNodes[0].appendChild(data.content);\r\n    }\r\n  } else {\r\n    gfx.childNodes[0].textContent = '';\r\n  }\r\n\r\n  this._eventBus.fire('cell.render', {\r\n    gfx: gfx,\r\n    data: data\r\n  });\r\n\r\n  return gfx;\r\n};\r\n","module.exports = {\r\n  renderer: [ 'type', require(291) ]\r\n};\r\n","module.exports = \"<div>/r/n  <label></label>/r/n  <input tabindex=/\"0/\" />/r/n  <span class=/\"cb-caret/\"></span>/r/n</div>/r/n\";\n","'use strict';\r\n\r\nvar domify = require(264),\r\n    domClasses = require(261),\r\n    assign = require(250),\r\n    forEach = require(136);\r\n\r\nvar comboBoxTemplate = require(293);\r\n\r\n/**\r\n * Offers the ability to create a combobox which is a combination of an\r\n *\r\n * <ul>\r\n *   <li>input</li>\r\n *   <li>dropdown</li>\r\n *   <li>typeahead</li>\r\n * </ul>\r\n *\r\n * @param {Object}   config\r\n * @param {String}   config.label\r\n *                            Text of the label which will be placed before the input field\r\n * @param {String[]} config.classNames\r\n *                            Array of Strings each identifying a class name of the comboBox container\r\n * @param {String[]} config.options\r\n *                            Array of Strings each specifying one option for the dropdown and typeahead feature\r\n * @param {String[]} config.dropdownClassNames\r\n *                            Array of Strings each identifying a class name of the dropdown container\r\n */\r\nfunction ComboBox(config) {\r\n\r\n  var self = this;\r\n  var template = domify(comboBoxTemplate);\r\n\r\n  var label = config.label,\r\n      classNames = config.classNames,\r\n      options = config.options,\r\n      dropdownClassNames = config.dropdownClassNames;\r\n\r\n  this._dropdown = document.createElement('ul');\r\n  this._template = template;\r\n  this._dropdownOpen = false;\r\n  this._disabled = false;\r\n\r\n  this._listeners = {};\r\n\r\n  // assign classes to the combobox template\r\n  forEach(classNames, function(className) {\r\n    domClasses(template).add(className);\r\n  });\r\n\r\n  // assign classes to the dropdown node\r\n  forEach(dropdownClassNames, function(className) {\r\n    domClasses(self._dropdown).add(className);\r\n  });\r\n\r\n  // create options\r\n  forEach(options, function(option) {\r\n    var node = document.createElement('li');\r\n    node.setAttribute('tabindex', '1');\r\n    node.textContent = option;\r\n    self._dropdown.appendChild(node);\r\n  });\r\n\r\n  // set the label of the combobox\r\n  if (label) {\r\n    template.querySelector('label').textContent = label + ':';\r\n  }\r\n\r\n\r\n  // --- event listeners ---\r\n\r\n  // toggles the dropdown on click on the caret symbol\r\n  template.querySelector('span').addEventListener('click', function(evt) {\r\n    self._toggleDropdown(options);\r\n    evt.stopPropagation();\r\n  });\r\n\r\n  // closes the dropdown when it is open and the user clicks somewhere\r\n  document.body.addEventListener('click', function(evt) {\r\n    self._closeDropdown();\r\n  });\r\n\r\n  // updates the value of the input field when the user\r\n  //   a. clicks on an option in the dropdown\r\n  //   b. focuses an option in the dropdown via keyboard\r\n  var update = function(evt) {\r\n    var value = evt.target.textContent;\r\n\r\n    if (options.indexOf(value) !== -1) {\r\n      self.setValue(evt.target.textContent);\r\n    }\r\n  };\r\n\r\n  this._dropdown.addEventListener('click', function(evt) {\r\n    update(evt);\r\n\r\n    // stop event propagation to prevent closing potential complex cells\r\n    evt.stopPropagation();\r\n\r\n    // still close the dropdown\r\n    self._closeDropdown();\r\n  });\r\n  \r\n  this._dropdown.addEventListener('focus', update, true);\r\n\r\n  // keyboard behavior for dropdown and input field\r\n  if (!config.disableKeyboard) {\r\n    var keyboardFunction = function(evt) {\r\n      var code = evt.which || evt.keyCode;\r\n\r\n      // ESC\r\n      if (code === 27) {\r\n        self._closeDropdown();\r\n      } else\r\n\r\n      // ENTER\r\n      if (code === 13) {\r\n        self._toggleDropdown(options);\r\n      } else\r\n\r\n      // TAB, DOWN\r\n      if (code === 9 || code === 40) {\r\n        evt.preventDefault();\r\n        self._focusNext(code === 9 && evt.shiftKey);\r\n      } else\r\n\r\n      // UP\r\n      if (code === 38) {\r\n        evt.preventDefault();\r\n        self._focusNext(true);\r\n      }\r\n\r\n    };\r\n    this._dropdown.addEventListener('keydown', keyboardFunction);\r\n    this._template.querySelector('input').addEventListener('keydown', keyboardFunction);\r\n  }\r\n\r\n  // when typing, show only options that match the typed text\r\n  this._template.querySelector('input').addEventListener('input', function(evt) {\r\n    var filteredList = options.filter(function(option) {\r\n      return option.toLowerCase().indexOf(self._template.querySelector('input').value.toLowerCase()) !== -1;\r\n    });\r\n    self._openDropdown(filteredList);\r\n\r\n    self._fireEvent('valueChanged', {\r\n      newValue: self._template.querySelector('input').value\r\n    });\r\n\r\n  });\r\n\r\n  return this;\r\n}\r\n\r\n/**\r\n * Focuses the next field in the dropdown. Opens the dropdown if it is closed.\r\n *\r\n * @param {boolean} reverse Focus previous field instead of next field\r\n */\r\nComboBox.prototype._focusNext = function(reverse) {\r\n\r\n  if (!this._isDropdownOpen()) {\r\n    this._openDropdown();\r\n    return;\r\n  }\r\n\r\n  var element = document.activeElement;\r\n  var focus;\r\n\r\n  // get the element which should have focus\r\n  if (element === this._template.querySelector('input')) {\r\n    focus = this._dropdown[reverse ? 'lastChild' : 'firstChild'];\r\n  } else if (element.parentNode === this._dropdown) {\r\n    focus = element[reverse ? 'previousSibling' : 'nextSibling'];\r\n  }\r\n\r\n  // if the element is not displayed (due to text input),\r\n  // select next visible element instead\r\n  while (focus && focus.style.display === 'none') {\r\n    focus = focus[reverse ? 'previousSibling' : 'nextSibling'];\r\n  }\r\n\r\n  // if no element can be selected (search reached end of list), focus input field\r\n  if (!focus) {\r\n    focus = this._template.querySelector('input');\r\n  }\r\n  focus.focus();\r\n};\r\n\r\nComboBox.prototype._toggleDropdown = function(options) {\r\n  if (this._isDropdownOpen()) {\r\n    this._closeDropdown();\r\n  } else {\r\n    this._openDropdown(options);\r\n  }\r\n};\r\n\r\nComboBox.prototype._openedDropdown = null;\r\n\r\nComboBox.prototype._isDropdownOpen = function() {\r\n  return this._dropdownOpen;\r\n};\r\n\r\nComboBox.prototype._closeDropdown = function() {\r\n  if (this._isDropdownOpen()) {\r\n    this._dropdownOpen = false;\r\n    ComboBox.prototype._openedDropdown = null;\r\n    domClasses(this._template).remove('expanded');\r\n    this._dropdown.parentNode.removeChild(this._dropdown);\r\n  }\r\n};\r\n\r\n/**\r\n *  Opens the dropdown menu for the input field.\r\n *\r\n *  @param {String[]} options Array of options which should be displayed in the dropdown\r\n *        If an option was specified in the constructor, but is not included in this list,\r\n *        it will be hidden via CSS. If the options array is empty, the dropdown is closed.\r\n */\r\nComboBox.prototype._openDropdown = function(options) {\r\n\r\n  if (ComboBox.prototype._openedDropdown) {\r\n    ComboBox.prototype._openedDropdown._closeDropdown();\r\n  }\r\n\r\n  // close dropdown if options array is empty or the comboBox is disabled\r\n  if (options && options.length === 0 || this._disabled) {\r\n    this._closeDropdown();\r\n    return;\r\n  }\r\n\r\n  // update the display of options depending on options array\r\n  forEach(this._dropdown.childNodes, function(child) {\r\n    if (!options || options.indexOf(child.textContent) !== -1) {\r\n      child.style.display = 'block';\r\n    } else {\r\n      child.style.display = 'none';\r\n    }\r\n  });\r\n\r\n  // position the dropdown in relation to the position of the input element\r\n  var input = this._template.querySelector('input');\r\n  var e = input;\r\n  var offset = { x:0,y:0 };\r\n  while (e)\r\n  {\r\n    offset.x += e.offsetLeft;\r\n    offset.y += e.offsetTop;\r\n    e = e.offsetParent;\r\n  }\r\n\r\n  assign(this._dropdown.style, {\r\n    'display': 'block',\r\n    'position': 'fixed',\r\n    'top': (offset.y + input.clientHeight)+'px',\r\n    'left': offset.x+'px',\r\n    'width': input.clientWidth+'px',\r\n    'z-index': 9001\r\n  });\r\n  document.body.appendChild(this._dropdown);\r\n\r\n  ComboBox.prototype._openedDropdown = this;\r\n  this._dropdownOpen = true;\r\n\r\n  domClasses(this._template).add('expanded');\r\n\r\n};\r\n\r\nComboBox.prototype._fireEvent = function(evt, payload) {\r\n  forEach(this._listeners[evt], function(listener) {\r\n    listener(payload);\r\n  });\r\n};\r\n\r\nComboBox.prototype.setValue = function(newValue) {\r\n  this._fireEvent('valueChanged', {\r\n    oldValue: this._template.querySelector('input').value,\r\n    newValue: newValue\r\n  });\r\n  this._template.querySelector('input').value = newValue;\r\n};\r\n\r\nComboBox.prototype.getValue = function() {\r\n  return this._template.querySelector('input').value;\r\n};\r\n\r\nComboBox.prototype.getNode = function() {\r\n  return this._template;\r\n};\r\n\r\nComboBox.prototype.addEventListener = function(event, fct) {\r\n  this._listeners[event] = this._listeners[event] || [];\r\n  this._listeners[event].push(fct);\r\n};\r\n\r\nComboBox.prototype.disable = function() {\r\n  this._disabled = true;\r\n  this._template.querySelector('input').setAttribute('disabled', 'true');\r\n};\r\n\r\nComboBox.prototype.enable = function() {\r\n  this._disabled = false;\r\n  this._template.querySelector('input').setAttribute('disabled', 'false');\r\n};\r\n\r\n\r\nmodule.exports = ComboBox;\r\n","'use strict';\r\n\r\nvar assign = require(250),\r\n    domClasses = require(261),\r\n    domRemove = require(267);\r\n\r\n\r\n/**\r\n *  A ComplexCell is a table cell that renders a template on click\r\n *  This can be used for cells containing complex data that can not be edited inline\r\n *\r\n *  In order to define a cell as complex, the cell must have a special property complex defining\r\n *  the configuration of the cell such as template or position:\r\n *\r\n *  Complex Property:\r\n *     - template: {DOMNode}\r\n *              HTML template of the complex content\r\n *     - className: {String | String[]} (optional, defaults to 'complex-cell')\r\n *              Defines the classNames which are set on the container of the complex cell\r\n *     - offset: {Object} (option, defaults to {x: 0, y: 0})\r\n *              Defines the offset of the template from the top left corner of the cell\r\n *\r\n *  Additional properties can be added to the complex object to retrieve them in events.\r\n *\r\n * Example:\r\n * cell.complex = {\r\n *      className: 'dmn-clauseexpression-setter',\r\n *      template: domify('<div>Hello World</div>'),\r\n *      type: 'mapping',\r\n *      offset: { x: 0, y: 10 }\r\n * };\r\n */\r\nfunction ComplexCell(eventBus, elementRegistry, sheet) {\r\n\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n  this._sheet = sheet;\r\n\r\n  this.setupListeners();\r\n}\r\n\r\n\r\nComplexCell.prototype.setupListeners = function() {\r\n  var eventBus = this._eventBus,\r\n      elementRegistry = this._elementRegistry;\r\n\r\n  var self = this;\r\n\r\n  // click on body closes open complex cells\r\n  document.body.addEventListener('click', function(event) {\r\n    if (!event.preventDialogClose) {\r\n      self.close();\r\n    }\r\n  });\r\n\r\n  document.body.addEventListener('keydown', function(event) {\r\n    if (!event.preventDialogClose && event.keyCode === 27) {\r\n      self.close();\r\n    }\r\n  });\r\n\r\n  // also close the dialog on a hashchange, e.g. for single page applications that go to another page\r\n  window.addEventListener('hashchange', function(event) {\r\n    self.close();\r\n  });\r\n\r\n  eventBus.on([ 'table.scroll', 'table.destroy', 'popupmenu.open' ], this.close, this);\r\n\r\n  // click on elements close potentially open complex cells\r\n  // and open a complex cell at the position of the cell\r\n  eventBus.on('element.click', function(event) {\r\n    var gfx, gfxDimensions, element;\r\n\r\n    this.close();\r\n\r\n    // set flag on original event to prevent closing the opened dialog\r\n    // this only applies if the event has an original event (so it was generated\r\n    // from a browser event that travels the dom tree)\r\n    if (event.originalEvent) {\r\n      event.originalEvent.preventDialogClose = true;\r\n    }\r\n\r\n    if (event.element && event.element.complex) {\r\n      element = event.element;\r\n\r\n      // calculate position based on the position of the cell\r\n      gfx = elementRegistry.getGraphics(element);\r\n\r\n      gfxDimensions = gfx.getBoundingClientRect();\r\n\r\n      element.complex.position = {\r\n        x: gfxDimensions.left,\r\n        y: gfxDimensions.top\r\n      };\r\n\r\n      this.open(element.complex);\r\n    }\r\n  }, this);\r\n};\r\n\r\nComplexCell.prototype.close = function() {\r\n  if (this._current) {\r\n    this._eventBus.fire('complexCell.close', this._current);\r\n\r\n    domRemove(this._current.container);\r\n    this._current = null;\r\n  }\r\n};\r\n\r\nComplexCell.prototype.isOpen = function() {\r\n  return !!this._current;\r\n};\r\n\r\n/**\r\n * Creates a container that holds the template\r\n */\r\nComplexCell.prototype._createContainer = function(className, position) {\r\n  var container = document.createElement('div');\r\n\r\n  assign(container.style, {\r\n    position: 'fixed',\r\n    left: position.x + 'px',\r\n    top: position.y  + 'px',\r\n    width: 'auto',\r\n    height: 'auto',\r\n    'z-index': 9000\r\n  });\r\n\r\n  // stop propagation of click events on the container to avoid closing the template\r\n  container.addEventListener('click', function(event) {\r\n    event.stopPropagation();\r\n  });\r\n\r\n  if (typeof className === 'string') {\r\n    domClasses(container).add(className);\r\n  } else {\r\n    for (var i = 0; i < className.length; i++) {\r\n      domClasses(container).add(className[i]);\r\n    }\r\n  }\r\n\r\n  return container;\r\n};\r\n\r\nComplexCell.prototype.open = function(config) {\r\n  var eventBus = this._eventBus,\r\n      sheet = this._sheet;\r\n\r\n  var className = config.className || 'complex-cell',\r\n      template = config.template;\r\n\r\n  // make sure, only one complex cell dialog is open at a time\r\n  if (this.isOpen()) {\r\n    this.close();\r\n  }\r\n\r\n  // apply the optional offset configuration to the calculated position\r\n  var position = {\r\n    x: config.position.x + (config.offset && config.offset.x || 0),\r\n    y: config.position.y + (config.offset && config.offset.y || 0)\r\n  };\r\n\r\n  var parent = sheet.getContainer(),\r\n\r\n      // create the template container\r\n      container = this._createContainer(className, position);\r\n\r\n  // attach the template container to the document body\r\n  this._attachContainer(container, parent);\r\n\r\n  // attach the template node to the container\r\n  this._attachContent(template, container);\r\n\r\n  // save the currently open complex cell\r\n  this._current = {\r\n    container: container,\r\n    config: config\r\n  };\r\n\r\n  eventBus.fire('complexCell.open', this._current);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Attaches the container to the DOM.\r\n *\r\n * @param {Object} container\r\n * @param {Object} parent\r\n */\r\nComplexCell.prototype._attachContainer = function(container, parent) {\r\n  // Attach to DOM\r\n  parent.appendChild(container);\r\n};\r\n\r\n/**\r\n * Attaches the content to the container.\r\n *\r\n * @param {Object} container\r\n * @param {Object} parent\r\n */\r\nComplexCell.prototype._attachContent = function(content, container) {\r\n  container.appendChild(content);\r\n};\r\n\r\nComplexCell.$inject = [ 'eventBus', 'elementRegistry', 'sheet' ];\r\n\r\nmodule.exports = ComplexCell;\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'complexCell' ],\r\n  complexCell: [ 'type', require(295) ]\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n/**\r\n *  The controls module adds a container to the top-right corner of the table which holds\r\n *  some control elements\r\n */\r\nfunction Controls(eventBus) {\r\n\r\n  this._eventBus = eventBus;\r\n  this.controlsContainer;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(evt) {\r\n\r\n    // remove existing control\r\n    var container = evt.sheet.parentNode;\r\n\r\n    var existingControl = container.querySelector('.tjs-controls');\r\n    if (existingControl) {\r\n      container.removeChild(existingControl);\r\n    }\r\n\r\n    var domNode = document.createElement('div');\r\n    domClasses(domNode).add('tjs-controls');\r\n\r\n    self.controlsContainer = domNode;\r\n    container.appendChild(domNode);\r\n\r\n    eventBus.fire('controls.init', {\r\n      node: domNode,\r\n      controls: self\r\n    });\r\n\r\n  });\r\n\r\n}\r\n\r\nControls.prototype.addControl = function(label, fct) {\r\n  this._eventBus.fire('controls.add', {\r\n    label: label\r\n  });\r\n\r\n  var newNode = document.createElement('button');\r\n  newNode.textContent = label;\r\n\r\n  newNode.addEventListener('click', fct);\r\n\r\n  this.controlsContainer.appendChild(newNode);\r\n\r\n  this._eventBus.fire('controls.added', {\r\n    label: label,\r\n    node: newNode\r\n  });\r\n\r\n  return newNode;\r\n};\r\n\r\n\r\nControls.$inject = [ 'eventBus' ];\r\n\r\nmodule.exports = Controls;\r\n","'use strict';\r\n\r\nmodule.exports = {\r\n  __init__: [ 'controls' ],\r\n  controls: [ 'type', require(297) ]\r\n};\r\n","'use strict';\r\n\r\nvar forEach = require(136),\r\n    domDelegate = require(263);\r\n\r\n\r\nvar isPrimaryButton = require(317).isPrimaryButton;\r\n\r\n/**\r\n * A plugin that provides interaction events for table elements.\r\n *\r\n * It emits the following events:\r\n *\r\n *   * element.hover\r\n *   * element.out\r\n *   * element.click\r\n *   * element.dblclick\r\n *   * element.mousedown\r\n *   * element.focus\r\n *   * element.blur\r\n *\r\n * Each event is a tuple { element, gfx, originalEvent }.\r\n *\r\n * Canceling the event via Event#preventDefault() prevents the original DOM operation.\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction InteractionEvents(eventBus, elementRegistry) {\r\n\r\n  function fire(type, event) {\r\n    var target = event.delegateTarget || event.target,\r\n        gfx = target,\r\n        element = elementRegistry.get(gfx),\r\n        returnValue;\r\n\r\n    if (!gfx || !element) {\r\n      return;\r\n    }\r\n\r\n    returnValue = eventBus.fire(type, { element: element, gfx: gfx, originalEvent: event });\r\n\r\n    if (returnValue === false) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  var handlers = {};\r\n\r\n  function mouseHandler(type) {\r\n\r\n    var fn = handlers[type];\r\n\r\n    if (!fn) {\r\n      fn = handlers[type] = function(event) {\r\n        // only indicate left mouse button interactions and contextmenu\r\n        if (isPrimaryButton(event) || type === 'element.contextmenu') {\r\n          fire(type, event);\r\n        }\r\n      };\r\n    }\r\n\r\n    return fn;\r\n  }\r\n\r\n  var bindings = {\r\n    mouseover: 'element.hover',\r\n    mouseout: 'element.out',\r\n    click: 'element.click',\r\n    dblclick: 'element.dblclick',\r\n    mousedown: 'element.mousedown',\r\n    mousemove: 'element.mousemove',\r\n    mouseup: 'element.mouseup',\r\n    focus: 'element.focus',\r\n    blur: 'element.blur',\r\n    input: 'element.input',\r\n    contextmenu: 'element.contextmenu'\r\n  };\r\n\r\n  var elementSelector = 'td,th';\r\n\r\n  ///// event registration\r\n\r\n  function isFocusEvent(event) {\r\n    return event === 'focus' || event === 'blur';\r\n  }\r\n\r\n  function registerEvent(node, event, localEvent) {\r\n    var handler = mouseHandler(localEvent);\r\n    handler.$delegate = domDelegate.bind(node, elementSelector, event, handler, isFocusEvent(event));\r\n  }\r\n\r\n  function unregisterEvent(node, event, localEvent) {\r\n    domDelegate.unbind(node, event, mouseHandler(localEvent).$delegate, isFocusEvent(event));\r\n  }\r\n\r\n  function registerEvents(node) {\r\n    forEach(bindings, function(val, key) {\r\n      registerEvent(node, key, val);\r\n    });\r\n  }\r\n\r\n  function unregisterEvents(node) {\r\n    forEach(bindings, function(val, key) {\r\n      unregisterEvent(node, key, val);\r\n    });\r\n  }\r\n\r\n  function scrollHandler(node) {\r\n\r\n    var fn = handlers.scroll;\r\n\r\n    if (!fn) {\r\n      fn = handlers.scroll = function(event) {\r\n        if (event.target.contains(node)) {\r\n          eventBus.fire('table.scroll', { gfx: event.target, originalEvent: event });\r\n        }\r\n      };\r\n    }\r\n\r\n    return fn;\r\n  }\r\n\r\n  function registerScrollEvent(node) {\r\n    document.addEventListener('scroll', scrollHandler(node), true);\r\n  }\r\n\r\n  function unregisterScrollEvent(node) {\r\n    document.removeEventListener('scroll', scrollHandler(node), true);\r\n  }\r\n\r\n  eventBus.on('sheet.destroy', function(event) {\r\n    unregisterEvents(event.sheet);\r\n    unregisterScrollEvent(event.sheet);\r\n  });\r\n\r\n  eventBus.on('sheet.init', function(event) {\r\n    registerEvents(event.sheet);\r\n    registerScrollEvent(event.sheet);\r\n  });\r\n\r\n\r\n  // API\r\n\r\n  this.fire = fire;\r\n\r\n  this.mouseHandler = mouseHandler;\r\n\r\n  this.registerEvent = registerEvent;\r\n  this.unregisterEvent = unregisterEvent;\r\n}\r\n\r\n\r\nInteractionEvents.$inject = [ 'eventBus', 'elementRegistry' ];\r\n\r\nmodule.exports = InteractionEvents;\r\n\r\n\r\n/**\r\n * An event indicating that the mouse hovered over an element\r\n *\r\n * @event element.hover\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has left an element\r\n *\r\n * @event element.out\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has clicked an element\r\n *\r\n * @event element.click\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has double clicked an element\r\n *\r\n * @event element.dblclick\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone down on an element.\r\n *\r\n * @event element.mousedown\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the mouse has gone up on an element.\r\n *\r\n * @event element.mouseup\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the element has gained focus.\r\n *\r\n * @event element.focus\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n\r\n/**\r\n * An event indicating that the element has lost focus\r\n *\r\n * @event element.blur\r\n *\r\n * @type {Object}\r\n * @property {djs.model.Base} element\r\n * @property {element} gfx\r\n * @property {Event} originalEvent\r\n */\r\n","module.exports = {\r\n  __init__: [ 'interactionEvents' ],\r\n  interactionEvents: [ 'type', require(299) ]\r\n};\r\n","'use strict';\r\n\r\nvar debounce = require(143);\r\n\r\nvar VERY_LOW_PRIORITY = 150;\r\n\r\nfunction LineNumbers(eventBus, sheet) {\r\n\r\n  this._sheet = sheet;\r\n  this._utilityColumn = null;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('utilityColumn.added', function(event) {\r\n    var column = event.column;\r\n\r\n    this._utilityColumn = column;\r\n\r\n    this.updateLineNumbers();\r\n  }, this);\r\n\r\n  eventBus.on([ 'cells.added', 'row.removed', 'row.moved' ], debounce(self.updateLineNumbers.bind(self), 100, {\r\n    'leading': true,\r\n    'trailing': true\r\n  }));\r\n\r\n  eventBus.on([ 'sheet.clear', 'sheet.destroy' ], VERY_LOW_PRIORITY, function() {\r\n    this._utilityColumn = null;\r\n  }, this);\r\n}\r\n\r\n\r\nLineNumbers.$inject = [ 'eventBus', 'sheet' ];\r\n\r\nmodule.exports = LineNumbers;\r\n\r\nLineNumbers.prototype.updateLineNumbers = function() {\r\n\r\n  if (!this._utilityColumn || !this._sheet.getLastRow('body')) {\r\n    // only render line numbers if utility column has been added\r\n    return;\r\n  }\r\n\r\n  // find the first row\r\n  var currentRow = this._sheet.getLastRow('body');\r\n  while (currentRow.previous) {\r\n    currentRow = currentRow.previous;\r\n  }\r\n\r\n  // update the row number for all rows\r\n  var i = 1;\r\n  while (currentRow) {\r\n    this._sheet.setCellContent({\r\n      row: currentRow,\r\n      column: this._utilityColumn,\r\n      content: i\r\n    });\r\n    i++;\r\n    currentRow = currentRow.next;\r\n  }\r\n};\r\n","module.exports = {\r\n  __init__: [ 'lineNumbers' ],\r\n  __depends__: [\r\n    require(307)\r\n  ],\r\n  lineNumbers: [ 'type', require(301) ]\r\n};\r\n","'use strict';\r\n\r\nvar domify = require(264);\r\n\r\n/**\r\n * Adds a header to the table containing the table name\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction TableName(eventBus, sheet, tableName) {\r\n\r\n  this.tableName = tableName;\r\n\r\n  this.node = domify('<header><h3 class=\"tjs-table-name\">'+this.tableName+'</h3></header>');\r\n\r\n  var self = this;\r\n\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(event) {\r\n    sheet.getContainer().insertBefore(self.node, sheet.getRootElement());\r\n    eventBus.fire('tableName.init', { node: self.node.querySelector('h3') });\r\n  });\r\n\r\n  eventBus.on('sheet.destroy', function(event) {\r\n    sheet.getContainer().removeChild(self.node);\r\n    eventBus.fire('tableName.destroy', { node: self.node.querySelector('h3') });\r\n  });\r\n}\r\n\r\nTableName.$inject = [ 'eventBus', 'sheet', 'config.tableName' ];\r\n\r\nmodule.exports = TableName;\r\n\r\nTableName.prototype.setName = function(newName) {\r\n  this.tableName = newName;\r\n  this.node.querySelector('h3').textContent = newName;\r\n};\r\n\r\nTableName.prototype.getName = function() {\r\n  return this.tableName;\r\n};\r\n\r\nTableName.prototype.getNode = function() {\r\n  return this.node.querySelector('h3');\r\n};\r\n","'use strict';\r\n\r\n/**\r\n * Adds a dedicated column to the table dedicated to hold controls and meta information\r\n *\r\n * @param {EventBus} eventBus\r\n */\r\nfunction UtilityColumn(eventBus, sheet) {\r\n\r\n  // add the row control row\r\n  this.column = null;\r\n\r\n  eventBus.on([ 'sheet.init', 'sheet.cleared' ], function(event) {\r\n\r\n    eventBus.fire('utilityColumn.add', event);\r\n\r\n    this.column = sheet.addColumn({\r\n      id: 'utilityColumn'\r\n    });\r\n\r\n    eventBus.fire('utilityColumn.added', { column: this.column });\r\n  }, this);\r\n\r\n  eventBus.on([ 'sheet.clear', 'sheet.destroy' ], function(event) {\r\n\r\n    eventBus.fire('utilityColumn.destroy', { column: this.column });\r\n\r\n    sheet.removeColumn({\r\n      id: 'utilityColumn'\r\n    });\r\n\r\n    eventBus.fire('utilityColumn.destroyed', { column: this.column });\r\n\r\n    this.column = null;\r\n  }, this);\r\n}\r\n\r\nUtilityColumn.$inject = [ 'eventBus', 'sheet' ];\r\n\r\nmodule.exports = UtilityColumn;\r\n\r\n\r\nUtilityColumn.prototype.getColumn = function() {\r\n  return this.column;\r\n};\r\n","'use strict';\r\n\r\nvar domClasses = require(261);\r\n\r\nfunction UtilityColumnRenderer(eventBus, utilityColumn) {\r\n\r\n  eventBus.on('cell.render', function(event) {\r\n    if (event.data.column === utilityColumn.getColumn() && !event.data.row.isFoot) {\r\n      event.gfx.childNodes[0].textContent = event.data.content;\r\n      domClasses(event.gfx).add(event.data.row.isHead ? 'hit' : 'number');\r\n\r\n      event.gfx.style.width = '45px';\r\n    }\r\n  });\r\n}\r\n\r\nUtilityColumnRenderer.$inject = [\r\n  'eventBus',\r\n  'utilityColumn'\r\n];\r\n\r\nmodule.exports = UtilityColumnRenderer;\r\n","'use strict';\r\n\r\nvar inherits = require(126);\r\n\r\nvar RuleProvider = require(313);\r\n\r\n/**\r\n * LineNumber specific modeling rule\r\n */\r\nfunction UtilityColumnRules(eventBus, utilityColumn) {\r\n  RuleProvider.call(this, eventBus);\r\n\r\n  this._utilityColumn = utilityColumn;\r\n}\r\n\r\ninherits(UtilityColumnRules, RuleProvider);\r\n\r\nUtilityColumnRules.$inject = [ 'eventBus', 'utilityColumn' ];\r\n\r\nmodule.exports = UtilityColumnRules;\r\n\r\nUtilityColumnRules.prototype.init = function() {\r\n  var self = this;\r\n  this.addRule('cell.edit', function(context) {\r\n    if (context.column === self._utilityColumn.getColumn()) {\r\n      return false;\r\n    }\r\n  });\r\n\r\n};\r\n","module.exports = {\r\n  __init__: [ 'utilityColumn', 'utilityColumnRules', 'utilityColumnRenderer' ],\r\n  __depends__: [\r\n    require(311),\r\n    require(315)\r\n  ],\r\n  utilityColumn: [ 'type', require(304) ],\r\n  utilityColumnRules: [ 'type', require(306) ],\r\n  utilityColumnRenderer: [ 'type', require(305) ]\r\n};\r\n","'use strict';\r\n\r\nvar assign = require(250),\r\n    inherits = require(126);\r\n\r\nfunction Base() {\r\n  Object.defineProperty(this, 'businessObject', {\r\n    writable: true\r\n  });\r\n}\r\n\r\nfunction Table() {\r\n  Base.call(this);\r\n}\r\n\r\ninherits(Table, Base);\r\n\r\nfunction Row() {\r\n  Base.call(this);\r\n}\r\n\r\ninherits(Row, Base);\r\n\r\nfunction Column() {\r\n  Base.call(this);\r\n}\r\n\r\ninherits(Column, Base);\r\n\r\n\r\nvar types = {\r\n  table: Table,\r\n  row: Row,\r\n  column: Column\r\n};\r\n\r\n/**\r\n * Creates a new model element of the specified type\r\n *\r\n * @method create\r\n *\r\n * @example\r\n *\r\n * var shape1 = Model.create('shape', { x: 10, y: 10, width: 100, height: 100 });\r\n * var shape2 = Model.create('shape', { x: 210, y: 210, width: 100, height: 100 });\r\n *\r\n * var connection = Model.create('connection', { waypoints: [ { x: 110, y: 55 }, {x: 210, y: 55 } ] });\r\n *\r\n * @param  {String} type lower-cased model name\r\n * @param  {Object} attrs attributes to initialize the new model instance with\r\n *\r\n * @return {Base} the new model instance\r\n */\r\nmodule.exports.create = function(type, attrs) {\r\n  var Type = types[type];\r\n  if (!Type) {\r\n    throw new Error('unknown type: <' + type + '>');\r\n  }\r\n  return assign(new Type(), attrs);\r\n};\r\n\r\n\r\nmodule.exports.Table = Table;\r\nmodule.exports.Row = Row;\r\nmodule.exports.Column = Column;\r\n","'use strict';\n\nvar forEach = require(136),\n    isFunction = require(242),\n    isArray = require(241),\n    isNumber = require(244);\n\n\nvar DEFAULT_PRIORITY = 1000;\n\n\nfunction isObject(element) {\n  return typeof element === 'object';\n}\n\n/**\n * A utility that can be used to plug-in into the command execution for\n * extension and/or validation.\n *\n * @param {EventBus} eventBus\n *\n * @example\n *\n * var inherits = require('inherits');\n *\n * var CommandInterceptor = require('diagram-js/lib/command/CommandInterceptor');\n *\n * function CommandLogger(eventBus) {\n *   CommandInterceptor.call(this, eventBus);\n *\n *   this.preExecute(function(event) {\n *     console.log('command pre-execute', event);\n *   });\n * }\n *\n * inherits(CommandLogger, CommandInterceptor);\n *\n */\nfunction CommandInterceptor(eventBus) {\n  this._eventBus = eventBus;\n}\n\nCommandInterceptor.$inject = [ 'eventBus' ];\n\nmodule.exports = CommandInterceptor;\n\nfunction unwrapEvent(fn, that) {\n  return function(event) {\n    return fn.call(that || null, event.context, event.command, event);\n  };\n}\n\n/**\n * Register an interceptor for a command execution\n *\n * @param {String|Array<String>} [events] list of commands to register on\n * @param {String} [hook] command hook, i.e. preExecute, executed to listen on\n * @param {Number} [priority] the priority on which to hook into the execution\n * @param {Function} handlerFn interceptor to be invoked with (event)\n * @param {Boolean} unwrap if true, unwrap the event and pass (context, command, event) to the\n *                          listener instead\n * @param {Object} [that] Pass context (`this`) to the handler function\n */\nCommandInterceptor.prototype.on = function(events, hook, priority, handlerFn, unwrap, that) {\n\n  if (isFunction(hook) || isNumber(hook)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = hook;\n    hook = null;\n  }\n\n  if (isFunction(priority)) {\n    that = unwrap;\n    unwrap = handlerFn;\n    handlerFn = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (isObject(unwrap)) {\n    that = unwrap;\n    unwrap = false;\n  }\n\n  if (!isFunction(handlerFn)) {\n    throw new Error('handlerFn must be a function');\n  }\n\n  if (!isArray(events)) {\n    events = [ events ];\n  }\n\n  var eventBus = this._eventBus;\n\n  forEach(events, function(event) {\n    // concat commandStack(.event)?(.hook)?\n    var fullEvent = [ 'commandStack', event, hook ].filter(function(e) { return e; }).join('.');\n\n    eventBus.on(fullEvent, priority, unwrap ? unwrapEvent(handlerFn, that) : handlerFn, that);\n  });\n};\n\n\nvar hooks = [\n  'canExecute',\n  'preExecute',\n  'preExecuted',\n  'execute',\n  'executed',\n  'postExecute',\n  'postExecuted',\n  'revert',\n  'reverted'\n];\n\n/*\n * Install hook shortcuts\n *\n * This will generate the CommandInterceptor#(preExecute|...|reverted) methods\n * which will in term forward to CommandInterceptor#on.\n */\nforEach(hooks, function(hook) {\n\n  /**\n   * {canExecute|preExecute|preExecuted|execute|executed|postExecute|postExecuted|revert|reverted}\n   *\n   * A named hook for plugging into the command execution\n   *\n   * @param {String|Array<String>} [events] list of commands to register on\n   * @param {Number} [priority] the priority on which to hook into the execution\n   * @param {Function} handlerFn interceptor to be invoked with (event)\n   * @param {Boolean} [unwrap=false] if true, unwrap the event and pass (context, command, event) to the\n   *                          listener instead\n   * @param {Object} [that] Pass context (`this`) to the handler function\n   */\n  CommandInterceptor.prototype[hook] = function(events, priority, handlerFn, unwrap, that) {\n\n    if (isFunction(events) || isNumber(events)) {\n      that = unwrap;\n      unwrap = handlerFn;\n      handlerFn = priority;\n      priority = events;\n      events = null;\n    }\n\n    this.on(events, hook, priority, handlerFn, unwrap, that);\n  };\n});\n","'use strict';\n\nvar unique = require(130),\n    isArray = require(241),\n    assign = require(250);\n\nvar InternalEvent = require(312).Event;\n\n\n/**\n * A service that offers un- and redoable execution of commands.\n *\n * The command stack is responsible for executing modeling actions\n * in a un- and redoable manner. To do this it delegates the actual\n * command execution to {@link CommandHandler}s.\n *\n * Command handlers provide {@link CommandHandler#execute(ctx)} and\n * {@link CommandHandler#revert(ctx)} methods to un- and redo a command\n * identified by a command context.\n *\n *\n * ## Life-Cycle events\n *\n * In the process the command stack fires a number of life-cycle events\n * that other components to participate in the command execution.\n *\n *    * preExecute\n *    * preExecuted\n *    * execute\n *    * executed\n *    * postExecute\n *    * postExecuted\n *    * revert\n *    * reverted\n *\n * A special event is used for validating, whether a command can be\n * performed prior to its execution.\n *\n *    * canExecute\n *\n * Each of the events is fired as `commandStack.{eventName}` and\n * `commandStack.{commandName}.{eventName}`, respectively. This gives\n * components fine grained control on where to hook into.\n *\n * The event object fired transports `command`, the name of the\n * command and `context`, the command context.\n *\n *\n * ## Creating Command Handlers\n *\n * Command handlers should provide the {@link CommandHandler#execute(ctx)}\n * and {@link CommandHandler#revert(ctx)} methods to implement\n * redoing and undoing of a command. They must ensure undo is performed\n * properly in order not to break the undo chain.\n *\n * Command handlers may execute other modeling operations (and thus\n * commands) in their `preExecute` and `postExecute` phases. The command\n * stack will properly group all commands together into a logical unit\n * that may be re- and undone atomically.\n *\n * Command handlers must not execute other commands from within their\n * core implementation (`execute`, `revert`).\n *\n *\n * ## Change Tracking\n *\n * During the execution of the CommandStack it will keep track of all\n * elements that have been touched during the command's execution.\n *\n * At the end of the CommandStack execution it will notify interested\n * components via an 'elements.changed' event with all the dirty\n * elements.\n *\n * The event can be picked up by components that are interested in the fact\n * that elements have been changed. One use case for this is updating\n * their graphical representation after moving / resizing or deletion.\n *\n *\n * @param {EventBus} eventBus\n * @param {Injector} injector\n */\nfunction CommandStack(eventBus, injector) {\n\n  /**\n   * A map of all registered command handlers.\n   *\n   * @type {Object}\n   */\n  this._handlerMap = {};\n\n  /**\n   * A stack containing all re/undoable actions on the diagram\n   *\n   * @type {Array<Object>}\n   */\n  this._stack = [];\n\n  /**\n   * The current index on the stack\n   *\n   * @type {Number}\n   */\n  this._stackIdx = -1;\n\n  /**\n   * Current active commandStack execution\n   *\n   * @type {Object}\n   */\n  this._currentExecution = {\n    actions: [],\n    dirty: []\n  };\n\n\n  this._injector = injector;\n  this._eventBus = eventBus;\n\n  this._uid = 1;\n\n  eventBus.on([ 'diagram.destroy', 'diagram.clear' ], this.clear, this);\n}\n\nCommandStack.$inject = [ 'eventBus', 'injector' ];\n\nmodule.exports = CommandStack;\n\n\n/**\n * Execute a command\n *\n * @param {String} command the command to execute\n * @param {Object} context the environment to execute the command in\n */\nCommandStack.prototype.execute = function(command, context) {\n  if (!command) {\n    throw new Error('command required');\n  }\n\n  var action = { command: command, context: context };\n\n  this._pushAction(action);\n  this._internalExecute(action);\n  this._popAction(action);\n};\n\n\n/**\n * Ask whether a given command can be executed.\n *\n * Implementors may hook into the mechanism on two ways:\n *\n *   * in event listeners:\n *\n *     Users may prevent the execution via an event listener.\n *     It must prevent the default action for `commandStack.(<command>.)canExecute` events.\n *\n *   * in command handlers:\n *\n *     If the method {@link CommandHandler#canExecute} is implemented in a handler\n *     it will be called to figure out whether the execution is allowed.\n *\n * @param  {String} command the command to execute\n * @param  {Object} context the environment to execute the command in\n *\n * @return {Boolean} true if the command can be executed\n */\nCommandStack.prototype.canExecute = function(command, context) {\n\n  var action = { command: command, context: context };\n\n  var handler = this._getHandler(command);\n\n  var result = this._fire(command, 'canExecute', action);\n\n  // handler#canExecute will only be called if no listener\n  // decided on a result already\n  if (result === undefined) {\n    if (!handler) {\n      return false;\n    }\n\n    if (handler.canExecute) {\n      result = handler.canExecute(context);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Clear the command stack, erasing all undo / redo history\n */\nCommandStack.prototype.clear = function() {\n  this._stack.length = 0;\n  this._stackIdx = -1;\n\n  this._fire('changed');\n};\n\n\n/**\n * Undo last command(s)\n */\nCommandStack.prototype.undo = function() {\n  var action = this._getUndoAction(),\n      next;\n\n  if (action) {\n    this._pushAction(action);\n\n    while (action) {\n      this._internalUndo(action);\n      next = this._getUndoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Redo last command(s)\n */\nCommandStack.prototype.redo = function() {\n  var action = this._getRedoAction(),\n      next;\n\n  if (action) {\n    this._pushAction(action);\n\n    while (action) {\n      this._internalExecute(action, true);\n      next = this._getRedoAction();\n\n      if (!next || next.id !== action.id) {\n        break;\n      }\n\n      action = next;\n    }\n\n    this._popAction();\n  }\n};\n\n\n/**\n * Register a handler instance with the command stack\n *\n * @param {String} command\n * @param {CommandHandler} handler\n */\nCommandStack.prototype.register = function(command, handler) {\n  this._setHandler(command, handler);\n};\n\n\n/**\n * Register a handler type with the command stack\n * by instantiating it and injecting its dependencies.\n *\n * @param {String} command\n * @param {Function} a constructor for a {@link CommandHandler}\n */\nCommandStack.prototype.registerHandler = function(command, handlerCls) {\n\n  if (!command || !handlerCls) {\n    throw new Error('command and handlerCls must be defined');\n  }\n\n  var handler = this._injector.instantiate(handlerCls);\n  this.register(command, handler);\n};\n\nCommandStack.prototype.canUndo = function() {\n  return !!this._getUndoAction();\n};\n\nCommandStack.prototype.canRedo = function() {\n  return !!this._getRedoAction();\n};\n\n////// stack access  //////////////////////////////////////\n\nCommandStack.prototype._getRedoAction = function() {\n  return this._stack[this._stackIdx + 1];\n};\n\n\nCommandStack.prototype._getUndoAction = function() {\n  return this._stack[this._stackIdx];\n};\n\n\n////// internal functionality /////////////////////////////\n\nCommandStack.prototype._internalUndo = function(action) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n    self._fire(command, 'revert', action);\n\n    if (handler.revert) {\n      self._markDirty(handler.revert(context));\n    }\n\n    self._revertedAction(action);\n\n    self._fire(command, 'reverted', action);\n  });\n};\n\n\nCommandStack.prototype._fire = function(command, qualifier, event) {\n  if (arguments.length < 3) {\n    event = qualifier;\n    qualifier = null;\n  }\n\n  var names = qualifier ? [ command + '.' + qualifier, qualifier ] : [ command ],\n      i, name, result;\n\n  event = assign(new InternalEvent(), event);\n\n  for (i = 0; (name = names[i]); i++) {\n    result = this._eventBus.fire('commandStack.' + name, event);\n\n    if (event.cancelBubble) {\n      break;\n    }\n  }\n\n  return result;\n};\n\nCommandStack.prototype._createId = function() {\n  return this._uid++;\n};\n\nCommandStack.prototype._atomicDo = function(fn) {\n\n  var execution = this._currentExecution;\n\n  execution.atomic = true;\n\n  try {\n    fn();\n  } finally {\n    execution.atomic = false;\n  }\n};\n\nCommandStack.prototype._internalExecute = function(action, redo) {\n  var self = this;\n\n  var command = action.command,\n      context = action.context;\n\n  var handler = this._getHandler(command);\n\n  if (!handler) {\n    throw new Error('no command handler registered for <' + command + '>');\n  }\n\n  this._pushAction(action);\n\n  if (!redo) {\n    this._fire(command, 'preExecute', action);\n\n    if (handler.preExecute) {\n      handler.preExecute(context);\n    }\n\n    this._fire(command, 'preExecuted', action);\n  }\n\n  // guard against illegal nested command stack invocations\n  this._atomicDo(function() {\n\n    self._fire(command, 'execute', action);\n\n    if (handler.execute) {\n      // actual execute + mark return results as dirty\n      self._markDirty(handler.execute(context));\n    }\n\n    // log to stack\n    self._executedAction(action, redo);\n\n    self._fire(command, 'executed', action);\n  });\n\n  if (!redo) {\n    this._fire(command, 'postExecute', action);\n\n    if (handler.postExecute) {\n      handler.postExecute(context);\n    }\n\n    this._fire(command, 'postExecuted', action);\n  }\n\n  this._popAction(action);\n};\n\n\nCommandStack.prototype._pushAction = function(action) {\n\n  var execution = this._currentExecution,\n      actions = execution.actions;\n\n  var baseAction = actions[0];\n\n  if (execution.atomic) {\n    throw new Error('illegal invocation in <execute> or <revert> phase (action: ' + action.command + ')');\n  }\n\n  if (!action.id) {\n    action.id = (baseAction && baseAction.id) || this._createId();\n  }\n\n  actions.push(action);\n};\n\n\nCommandStack.prototype._popAction = function() {\n  var execution = this._currentExecution,\n      actions = execution.actions,\n      dirty = execution.dirty;\n\n  actions.pop();\n\n  if (!actions.length) {\n    this._eventBus.fire('elements.changed', { elements: unique(dirty) });\n\n    dirty.length = 0;\n\n    this._fire('changed');\n  }\n};\n\n\nCommandStack.prototype._markDirty = function(elements) {\n  var execution = this._currentExecution;\n\n  if (!elements) {\n    return;\n  }\n\n  elements = isArray(elements) ? elements : [ elements ];\n\n  execution.dirty = execution.dirty.concat(elements);\n};\n\n\nCommandStack.prototype._executedAction = function(action, redo) {\n  var stackIdx = ++this._stackIdx;\n\n  if (!redo) {\n    this._stack.splice(stackIdx, this._stack.length, action);\n  }\n};\n\n\nCommandStack.prototype._revertedAction = function(action) {\n  this._stackIdx--;\n};\n\n\nCommandStack.prototype._getHandler = function(command) {\n  return this._handlerMap[command];\n};\n\nCommandStack.prototype._setHandler = function(command, handler) {\n  if (!command || !handler) {\n    throw new Error('command and handler required');\n  }\n\n  if (this._handlerMap[command]) {\n    throw new Error('overriding handler for command <' + command + '>');\n  }\n\n  this._handlerMap[command] = handler;\n};\n","module.exports = {\n  commandStack: [ 'type', require(310) ]\n};\n","'use strict';\n\nvar isFunction = require(242),\n    isArray = require(241),\n    isNumber = require(244),\n    bind = require(142),\n    assign = require(250);\n\nvar FN_REF = '__fn';\n\nvar DEFAULT_PRIORITY = 1000;\n\nvar slice = Array.prototype.slice;\n\n/**\n * A general purpose event bus.\n *\n * This component is used to communicate across a diagram instance.\n * Other parts of a diagram can use it to listen to and broadcast events.\n *\n *\n * ## Registering for Events\n *\n * The event bus provides the {@link EventBus#on} and {@link EventBus#once}\n * methods to register for events. {@link EventBus#off} can be used to\n * remove event registrations. Listeners receive an instance of {@link Event}\n * as the first argument. It allows them to hook into the event execution.\n *\n * ```javascript\n *\n * // listen for event\n * eventBus.on('foo', function(event) {\n *\n *   // access event type\n *   event.type; // 'foo'\n *\n *   // stop propagation to other listeners\n *   event.stopPropagation();\n *\n *   // prevent event default\n *   event.preventDefault();\n * });\n *\n * // listen for event with custom payload\n * eventBus.on('bar', function(event, payload) {\n *   console.log(payload);\n * });\n *\n * // listen for event returning value\n * eventBus.on('foobar', function(event) {\n *\n *   // stop event propagation + prevent default\n *   return false;\n *\n *   // stop event propagation + return custom result\n *   return {\n *     complex: 'listening result'\n *   };\n * });\n *\n *\n * // listen with custom priority (default=1000, higher is better)\n * eventBus.on('priorityfoo', 1500, function(event) {\n *   console.log('invoked first!');\n * });\n *\n *\n * // listen for event and pass the context (`this`)\n * eventBus.on('foobar', function(event) {\n *   this.foo();\n * }, this);\n * ```\n *\n *\n * ## Emitting Events\n *\n * Events can be emitted via the event bus using {@link EventBus#fire}.\n *\n * ```javascript\n *\n * // false indicates that the default action\n * // was prevented by listeners\n * if (eventBus.fire('foo') === false) {\n *   console.log('default has been prevented!');\n * };\n *\n *\n * // custom args + return value listener\n * eventBus.on('sum', function(event, a, b) {\n *   return a + b;\n * });\n *\n * // you can pass custom arguments + retrieve result values.\n * var sum = eventBus.fire('sum', 1, 2);\n * console.log(sum); // 3\n * ```\n */\nfunction EventBus() {\n  this._listeners = {};\n\n  // cleanup on destroy on lowest priority to allow\n  // message passing until the bitter end\n  this.on('diagram.destroy', 1, this._destroy, this);\n}\n\nmodule.exports = EventBus;\n\n\n/**\n * Register an event listener for events with the given name.\n *\n * The callback will be invoked with `event, ...additionalArguments`\n * that have been passed to {@link EventBus#fire}.\n *\n * Returning false from a listener will prevent the events default action\n * (if any is specified). To stop an event from being processed further in\n * other listeners execute {@link Event#stopPropagation}.\n *\n * Returning anything but `undefined` from a listener will stop the listener propagation.\n *\n * @param {String|Array<String>} events\n * @param {Number} [priority=1000] the priority in which this listener is called, larger is higher\n * @param {Function} callback\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.on = function(events, priority, callback, that) {\n\n  events = isArray(events) ? events : [ events ];\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  var actualCallback = callback;\n\n  if (that) {\n    actualCallback = bind(callback, that);\n\n    // make sure we remember and are able to remove\n    // bound callbacks via {@link #off} using the original\n    // callback\n    actualCallback[FN_REF] = callback[FN_REF] || callback;\n  }\n\n  var self = this,\n      listener = { priority: priority, callback: actualCallback };\n\n  events.forEach(function(e) {\n    self._addListener(e, listener);\n  });\n};\n\n\n/**\n * Register an event listener that is executed only once.\n *\n * @param {String} event the event name to register for\n * @param {Function} callback the callback to execute\n * @param {Object} [that] Pass context (`this`) to the callback\n */\nEventBus.prototype.once = function(event, priority, callback, that) {\n  var self = this;\n\n  if (isFunction(priority)) {\n    that = callback;\n    callback = priority;\n    priority = DEFAULT_PRIORITY;\n  }\n\n  if (!isNumber(priority)) {\n    throw new Error('priority must be a number');\n  }\n\n  function wrappedCallback() {\n    self.off(event, wrappedCallback);\n    return callback.apply(that, arguments);\n  }\n\n  // make sure we remember and are able to remove\n  // bound callbacks via {@link #off} using the original\n  // callback\n  wrappedCallback[FN_REF] = callback;\n\n  this.on(event, priority, wrappedCallback);\n};\n\n\n/**\n * Removes event listeners by event and callback.\n *\n * If no callback is given, all listeners for a given event name are being removed.\n *\n * @param {String} event\n * @param {Function} [callback]\n */\nEventBus.prototype.off = function(event, callback) {\n  var listeners = this._getListeners(event),\n      listener,\n      listenerCallback,\n      idx;\n\n  if (callback) {\n\n    // move through listeners from back to front\n    // and remove matching listeners\n    for (idx = listeners.length - 1; (listener = listeners[idx]); idx--) {\n      listenerCallback = listener.callback;\n\n      if (listenerCallback === callback || listenerCallback[FN_REF] === callback) {\n        listeners.splice(idx, 1);\n      }\n    }\n  } else {\n    // clear listeners\n    listeners.length = 0;\n  }\n};\n\n\n/**\n * Fires a named event.\n *\n * @example\n *\n * // fire event by name\n * events.fire('foo');\n *\n * // fire event object with nested type\n * var event = { type: 'foo' };\n * events.fire(event);\n *\n * // fire event with explicit type\n * var event = { x: 10, y: 20 };\n * events.fire('element.moved', event);\n *\n * // pass additional arguments to the event\n * events.on('foo', function(event, bar) {\n *   alert(bar);\n * });\n *\n * events.fire({ type: 'foo' }, 'I am bar!');\n *\n * @param {String} [name] the optional event name\n * @param {Object} [event] the event object\n * @param {...Object} additional arguments to be passed to the callback functions\n *\n * @return {Boolean} the events return value, if specified or false if the\n *                   default action was prevented by listeners\n */\nEventBus.prototype.fire = function(type, data) {\n\n  var event,\n      listeners,\n      returnValue,\n      args;\n\n  args = slice.call(arguments);\n\n  if (typeof type === 'object') {\n    event = type;\n    type = event.type;\n  }\n\n  if (!type) {\n    throw new Error('no event type specified');\n  }\n\n  listeners = this._listeners[type];\n\n  if (!listeners) {\n    return;\n  }\n\n  // we make sure we fire instances of our home made\n  // events here. We wrap them only once, though\n  if (data instanceof Event) {\n    // we are fine, we alread have an event\n    event = data;\n  } else {\n    event = new Event();\n    event.init(data);\n  }\n\n  // ensure we pass the event as the first parameter\n  args[0] = event;\n\n  // original event type (in case we delegate)\n  var originalType = event.type;\n\n  // update event type before delegation\n  if (type !== originalType) {\n    event.type = type;\n  }\n\n  try {\n    returnValue = this._invokeListeners(event, args, listeners);\n  } finally {\n    // reset event type after delegation\n    if (type !== originalType) {\n      event.type = originalType;\n    }\n  }\n\n  // set the return value to false if the event default\n  // got prevented and no other return value exists\n  if (returnValue === undefined && event.defaultPrevented) {\n    returnValue = false;\n  }\n\n  return returnValue;\n};\n\n\nEventBus.prototype.handleError = function(error) {\n  return this.fire('error', { error: error }) === false;\n};\n\n\nEventBus.prototype._destroy = function() {\n  this._listeners = {};\n};\n\nEventBus.prototype._invokeListeners = function(event, args, listeners) {\n\n  var idx,\n      listener,\n      returnValue;\n\n  for (idx = 0; (listener = listeners[idx]); idx++) {\n\n    // handle stopped propagation\n    if (event.cancelBubble) {\n      break;\n    }\n\n    returnValue = this._invokeListener(event, args, listener);\n  }\n\n  return returnValue;\n};\n\nEventBus.prototype._invokeListener = function(event, args, listener) {\n\n  var returnValue;\n\n  try {\n    // returning false prevents the default action\n    returnValue = invokeFunction(listener.callback, args);\n\n    // stop propagation on return value\n    if (returnValue !== undefined) {\n      event.returnValue = returnValue;\n      event.stopPropagation();\n    }\n\n    // prevent default on return false\n    if (returnValue === false) {\n      event.preventDefault();\n    }\n  } catch (e) {\n    if (!this.handleError(e)) {\n      console.error('unhandled error in event listener');\n      console.error(e.stack);\n\n      throw e;\n    }\n  }\n\n  return returnValue;\n};\n\n/*\n * Add new listener with a certain priority to the list\n * of listeners (for the given event).\n *\n * The semantics of listener registration / listener execution are\n * first register, first serve: New listeners will always be inserted\n * after existing listeners with the same priority.\n *\n * Example: Inserting two listeners with priority 1000 and 1300\n *\n *    * before: [ 1500, 1500, 1000, 1000 ]\n *    * after: [ 1500, 1500, (new=1300), 1000, 1000, (new=1000) ]\n *\n * @param {String} event\n * @param {Object} listener { priority, callback }\n */\nEventBus.prototype._addListener = function(event, newListener) {\n\n  var listeners = this._getListeners(event),\n      existingListener,\n      idx;\n\n  // ensure we order listeners by priority from\n  // 0 (high) to n > 0 (low)\n  for (idx = 0; (existingListener = listeners[idx]); idx++) {\n    if (existingListener.priority < newListener.priority) {\n\n      // prepend newListener at before existingListener\n      listeners.splice(idx, 0, newListener);\n      return;\n    }\n  }\n\n  listeners.push(newListener);\n};\n\n\nEventBus.prototype._getListeners = function(name) {\n  var listeners = this._listeners[name];\n\n  if (!listeners) {\n    this._listeners[name] = listeners = [];\n  }\n\n  return listeners;\n};\n\n\n/**\n * A event that is emitted via the event bus.\n */\nfunction Event() { }\n\nmodule.exports.Event = Event;\n\nEvent.prototype.stopPropagation = function() {\n  this.cancelBubble = true;\n};\n\nEvent.prototype.preventDefault = function() {\n  this.defaultPrevented = true;\n};\n\nEvent.prototype.init = function(data) {\n  assign(this, data || {});\n};\n\n\n/**\n * Invoke function. Be fast...\n *\n * @param {Function} fn\n * @param {Array<Object>} args\n *\n * @return {Any}\n */\nfunction invokeFunction(fn, args) {\n  return fn.apply(null, args);\n}\n","\n'use strict';\n\nvar inherits = require(126);\n\nvar CommandInterceptor = require(309);\n\n/**\n * A basic provider that may be extended to implement modeling rules.\n *\n * Extensions should implement the init method to actually add their custom\n * modeling checks. Checks may be added via the #addRule(action, fn) method.\n *\n * @param {EventBus} eventBus\n */\nfunction RuleProvider(eventBus) {\n  CommandInterceptor.call(this, eventBus);\n\n  this.init();\n}\n\nRuleProvider.$inject = [ 'eventBus' ];\n\ninherits(RuleProvider, CommandInterceptor);\n\nmodule.exports = RuleProvider;\n\n\n/**\n * Adds a modeling rule for the given action, implemented through\n * a callback function.\n *\n * The function will receive the modeling specific action context\n * to perform its check. It must return `false` to disallow the\n * action from happening or `true` to allow the action.\n *\n * A rule provider may pass over the evaluation to lower priority\n * rules by returning return nothing (or <code>undefined</code>).\n *\n * @example\n *\n * ResizableRules.prototype.init = function() {\n *\n *   //**\n *    * Return `true`, `false` or nothing to denote\n *    * _allowed_, _not allowed_ and _continue evaluating_.\n *    *//\n *   this.addRule('shape.resize', function(context) {\n *\n *     var shape = context.shape;\n *\n *     if (!context.newBounds) {\n *       // check general resizability\n *       if (!shape.resizable) {\n *         return false;\n *       }\n *\n *       // not returning anything (read: undefined)\n *       // will continue the evaluation of other rules\n *       // (with lower priority)\n *       return;\n *     } else {\n *       // element must have minimum size of 10*10 points\n *       return context.newBounds.width > 10 && context.newBounds.height > 10;\n *     }\n *   });\n * };\n *\n * @param {String|Array<String>} actions the identifier for the modeling action to check\n * @param {Number} [priority] the priority at which this rule is being applied\n * @param {Function} fn the callback function that performs the actual check\n */\nRuleProvider.prototype.addRule = function(actions, priority, fn) {\n\n  var self = this;\n\n  if (typeof actions === 'string') {\n    actions = [ actions ];\n  }\n\n  actions.forEach(function(action) {\n\n    self.canExecute(action, priority, function(context, action, event) {\n      return fn(context);\n    }, true);\n  });\n};\n\n/**\n * Implement this method to add new rules during provider initialization.\n */\nRuleProvider.prototype.init = function() {};","'use strict';\n\n/**\n * A service that provides rules for certain diagram actions.\n *\n * The default implementation will hook into the {@link CommandStack}\n * to perform the actual rule evaluation. Make sure to provide the\n * `commandStack` service with this module if you plan to use it.\n *\n * Together with this implementation you may use the {@link RuleProvider}\n * to implement your own rule checkers.\n *\n * This module is ment to be easily replaced, thus the tiny foot print.\n *\n * @param {Injector} injector\n */\nfunction Rules(injector) {\n  this._commandStack = injector.get('commandStack', false);\n}\n\nRules.$inject = [ 'injector' ];\n\nmodule.exports = Rules;\n\n\n/**\n * Returns whether or not a given modeling action can be executed\n * in the specified context.\n *\n * This implementation will respond with allow unless anyone\n * objects.\n *\n * @param {String} action the action to be checked\n * @param {Object} [context] the context to check the action in\n *\n * @return {Boolean} returns true, false or null depending on whether the\n *                   operation is allowed, not allowed or should be ignored.\n */\nRules.prototype.allowed = function(action, context) {\n  var allowed = true;\n\n  var commandStack = this._commandStack;\n\n  if (commandStack) {\n    allowed = commandStack.canExecute(action, context);\n  }\n\n  // map undefined to true, i.e. no rules\n  return allowed === undefined ? true : allowed;\n};","module.exports = {\n  __init__: [ 'rules' ],\n  rules: [ 'type', require(314) ]\n};\n","'use strict';\n\nfunction __preventDefault(event) {\n  return event && event.preventDefault();\n}\n\nfunction __stopPropagation(event, immediate) {\n  if (!event) {\n    return;\n  }\n\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n\n  if (immediate && event.stopImmediatePropagation) {\n    event.stopImmediatePropagation();\n  }\n}\n\n\nfunction getOriginal(event) {\n  return event.originalEvent || event.srcEvent;\n}\n\nmodule.exports.getOriginal = getOriginal;\n\n\nfunction stopEvent(event, immediate) {\n  stopPropagation(event, immediate);\n  preventDefault(event);\n}\n\nmodule.exports.stopEvent = stopEvent;\n\n\nfunction preventDefault(event) {\n  __preventDefault(event);\n  __preventDefault(getOriginal(event));\n}\n\nmodule.exports.preventDefault = preventDefault;\n\n\nfunction stopPropagation(event, immediate) {\n  __stopPropagation(event, immediate);\n  __stopPropagation(getOriginal(event), immediate);\n}\n\nmodule.exports.stopPropagation = stopPropagation;\n\n\nfunction toPoint(event) {\n\n  if (event.pointers && event.pointers.length) {\n    event = event.pointers[0];\n  }\n\n  if (event.touches && event.touches.length) {\n    event = event.touches[0];\n  }\n\n  return event ? {\n    x: event.clientX,\n    y: event.clientY\n  } : null;\n}\n\nmodule.exports.toPoint = toPoint;\n","'use strict';\n\nvar getOriginalEvent = require(316).getOriginal;\n\nvar isMac = require(318).isMac;\n\n\nfunction isPrimaryButton(event) {\n  // button === 0 -> left áka primary mouse button\n  return !(getOriginalEvent(event) || event).button;\n}\n\nmodule.exports.isPrimaryButton = isPrimaryButton;\n\nmodule.exports.isMac = isMac;\n\nmodule.exports.hasPrimaryModifier = function(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  if (!isPrimaryButton(event)) {\n    return false;\n  }\n\n  // Use alt as primary modifier key for mac OS\n  if (isMac()) {\n    return originalEvent.metaKey;\n  } else {\n    return originalEvent.ctrlKey;\n  }\n};\n\n\nmodule.exports.hasSecondaryModifier = function(event) {\n  var originalEvent = getOriginalEvent(event) || event;\n\n  return isPrimaryButton(event) && originalEvent.shiftKey;\n};\n","'use strict';\n\nmodule.exports.isMac = function isMac() {\n  return (/mac/i).test(navigator.platform);\n};","/**\n * Tiny stack for browser or server\n *\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\n * @copyright 2014 Jason Mulligan\n * @license BSD-3 <https://raw.github.com/avoidwork/tiny-stack/master/LICENSE>\n * @link http://avoidwork.github.io/tiny-stack\n * @module tiny-stack\n * @version 0.1.0\n */\n\n( function ( global ) {\n\n\"use strict\";\n\n/**\n * TinyStack\n *\n * @constructor\n */\nfunction TinyStack () {\n\tthis.data = [null];\n\tthis.top  = 0;\n}\n\n/**\n * Clears the stack\n *\n * @method clear\n * @memberOf TinyStack\n * @return {Object} {@link TinyStack}\n */\nTinyStack.prototype.clear = function clear () {\n\tthis.data = [null];\n\tthis.top  = 0;\n\n\treturn this;\n};\n\n/**\n * Gets the size of the stack\n *\n * @method length\n * @memberOf TinyStack\n * @return {Number} Size of stack\n */\nTinyStack.prototype.length = function length () {\n\treturn this.top;\n};\n\n/**\n * Gets the item at the top of the stack\n *\n * @method peek\n * @memberOf TinyStack\n * @return {Mixed} Item at the top of the stack\n */\nTinyStack.prototype.peek = function peek () {\n\treturn this.data[this.top];\n};\n\n/**\n * Gets & removes the item at the top of the stack\n *\n * @method pop\n * @memberOf TinyStack\n * @return {Mixed} Item at the top of the stack\n */\nTinyStack.prototype.pop = function pop () {\n\tif ( this.top > 0 ) {\n\t\tthis.top--;\n\n\t\treturn this.data.pop();\n\t}\n\telse {\n\t\treturn undefined;\n\t}\n};\n\n/**\n * Pushes an item onto the stack\n *\n * @method push\n * @memberOf TinyStack\n * @return {Object} {@link TinyStack}\n */\nTinyStack.prototype.push = function push ( arg ) {\n\tthis.data[++this.top] = arg;\n\n\treturn this;\n};\n\n/**\n * TinyStack factory\n *\n * @method factory\n * @return {Object} {@link TinyStack}\n */\nfunction factory () {\n\treturn new TinyStack();\n}\n\n// Node, AMD & window supported\nif ( typeof exports != \"undefined\" ) {\n\tmodule.exports = factory;\n}\nelse if ( typeof define == \"function\" ) {\n\tdefine( function () {\n\t\treturn factory;\n\t} );\n}\nelse {\n\tglobal.stack = factory;\n}\n} )( this );\n","/**\n * append utility\n */\n\nmodule.exports = append;\n\nvar appendTo = require(321);\n\n/**\n * Append a node to an element\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the element\n */\nfunction append(element, node) {\n  appendTo(node, element);\n  return element;\n}","/**\n * appendTo utility\n */\nmodule.exports = appendTo;\n\nvar ensureImported = require(330);\n\n/**\n * Append a node to a target element and return the appended node.\n *\n * @param  {SVGElement} element\n * @param  {SVGElement} node\n *\n * @return {SVGElement} the appended node\n */\nfunction appendTo(element, target) {\n  target.appendChild(ensureImported(element, target));\n  return element;\n}","/**\n * attribute accessor utility\n */\n\nmodule.exports = attr;\n\n\nvar LENGTH_ATTR = 2;\n\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\n\n\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\n\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\n  var type = CSS_PROPERTIES[hyphenated];\n\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\n\nfunction setAttributes(node, attrs) {\n\n  var names = Object.keys(attrs), i, name;\n\n  for (i = 0, name; (name = names[i]); i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\n * Gets or sets raw attributes on a node.\n *\n * @param  {SVGElement} node\n * @param  {Object} [attrs]\n * @param  {String} [name]\n * @param  {String} [value]\n *\n * @return {String}\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n\n  return node;\n}\n","/**\r\n * Clear utility\r\n */\r\nmodule.exports = classes;\r\n\r\nvar index = function(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n};\r\n\r\nvar re = //s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^/s+|/s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\r\n","/**\n * Clear utility\n */\n\nmodule.exports = clear;\n\n\nvar remove = require(328);\n\n/**\n * Removes all children from the given element\n *\n * @param  {DOMElement} element\n * @return {DOMElement} the element (for chaining)\n */\nfunction clear(element) {\n  var child;\n\n  while ((child = element.firstChild)) {\n    remove(child);\n  }\n\n  return element;\n}","/**\n * Create utility for SVG elements\n */\n\nmodule.exports = create;\n\n\nvar attr = require(322);\nvar parse = require(332);\nvar ns = require(331);\n\n\n/**\n * Create a specific type from name or SVG markup.\n *\n * @param {String} name the name or markup of the element\n * @param {Object} [attrs] attributes to set on the element\n *\n * @returns {SVGElement}\n */\nfunction create(name, attrs) {\n  var element;\n\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n\n  if (attrs) {\n    attr(element, attrs);\n  }\n\n  return element;\n}","/**\n * Geometry helpers\n */\n\nmodule.exports = { createPoint: createPoint, createMatrix: createMatrix, createTransform: createTransform };\n\n\nvar create = require(325);\n\n// fake node used to instantiate svg geometry elements\nvar node = create('svg');\n\nfunction extend(object, props) {\n  var i, k, keys = Object.keys(props);\n\n  for (i = 0; (k = keys[i]); i++) {\n    object[k] = props[k];\n  }\n\n  return object;\n}\n\n\nfunction createPoint(x, y) {\n  var point = node.createSVGPoint();\n\n  switch (arguments.length) {\n  case 0:\n    return point;\n  case 2:\n    x = {\n      x: x,\n      y: y\n    };\n    break;\n  }\n\n  return extend(point, x);\n}\n\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = node.createSVGMatrix();\n\n  switch (arguments.length) {\n  case 0:\n    return matrix;\n  case 6:\n    a = {\n      a: a,\n      b: b,\n      c: c,\n      d: d,\n      e: e,\n      f: f\n    };\n    break;\n  }\n\n  return extend(matrix, a);\n}\n\nfunction createTransform(matrix) {\n  if (matrix) {\n    return node.createSVGTransformFromMatrix(matrix);\n  } else {\n    return node.createSVGTransform();\n  }\n}","/**\n * innerHTML like functionality for SVG elements.\n * based on innerSVG (https://code.google.com/p/innersvg)\n */\n\nmodule.exports = innerSVG;\n\n\nvar clear = require(324);\nvar appendTo = require(321);\nvar parse = require(332);\nvar serialize = require(333);\n\n\nfunction set(element, svg) {\n\n  var node,\n      documentElement = parse(svg).documentElement;\n\n  // clear element contents\n  clear(element);\n\n  if (!svg) {\n    return;\n  }\n\n  // import + append each node\n  node = documentElement.firstChild;\n\n  while (node) {\n    appendTo(node, element);\n    node = node.nextSibling;\n  }\n}\n\nfunction get(element) {\n  var child = element.firstChild,\n      output = [];\n\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n\n  return output.join('');\n}\n\nfunction innerSVG(element, svg) {\n\n  if (svg !== undefined) {\n\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n\n    return element;\n  } else {\n    return get(element);\n  }\n}","module.exports = remove;\n\nfunction remove(element) {\n  element.parentNode.removeChild(element);\n  return element;\n}","/**\n * transform accessor utility\n */\n\nmodule.exports = transform;\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  } else {\n    return transform;\n  }\n}\n\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n\n  transformList.clear();\n\n  for (i = 0; (t = transforms[i]); i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n\n  transformList.consolidate();\n}\n\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n\n  if (arguments.length === 1) {\n    return transformList.consolidate();\n  } else {\n    if (transforms.length) {\n      setTransforms(transformList, transforms);\n    } else {\n      transformList.initialize(wrapMatrix(transformList, transforms));\n    }\n  }\n}","module.exports = ensureImported;\n\nfunction ensureImported(element, target) {\n\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  return element;\n}","var ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = ns;","/**\n * DOM parsing utility\n */\n\nmodule.exports = parse;\n\n\nvar ns = require(331);\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\n\nfunction parse(svg) {\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n  }\n\n  return parseDocument(svg);\n}\n\nfunction parseDocument(svg) {\n\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n\n  return parser.parseFromString(svg, 'text/xml');\n}","/**\n * Serialization util\n */\n\nmodule.exports = serialize;\n\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([/n/r\"]{1})/g;\n\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '/''\n};\n\nfunction escape(str, pattern) {\n\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n\n  return str.replace(pattern, replaceFn);\n}\n\nfunction serialize(node, output) {\n\n  var i, len, attrMap, attrNode, childNodes;\n\n  switch (node.nodeType) {\n  // TEXT\n  case 3:\n    // replace special XML characters\n    output.push(escape(node.textContent, TEXT_ENTITIES));\n    break;\n\n  // ELEMENT\n  case 1:\n    output.push('<', node.tagName);\n\n    if (node.hasAttributes()) {\n      attrMap = node.attributes;\n      for (i = 0, len = attrMap.length; i < len; ++i) {\n        attrNode = attrMap.item(i);\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n      }\n    }\n\n    if (node.hasChildNodes()) {\n      output.push('>');\n      childNodes = node.childNodes;\n      for (i = 0, len = childNodes.length; i < len; ++i) {\n        serialize(childNodes.item(i), output);\n      }\n      output.push('</', node.tagName, '>');\n    } else {\n      output.push('/>');\n    }\n    break;\n\n  // COMMENT\n  case 8:\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n    break;\n\n  // CDATA\n  case 4:\n    output.push('<![CDATA[', node.nodeValue, ']]>');\n    break;\n\n  default:\n    throw new Error('unable to handle node ' + node.nodeType);\n  }\n\n  return output;\n}"]}